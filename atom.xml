<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="https://sun-spots.github.io/atom.xml" rel="self"/>
  
  <link href="https://sun-spots.github.io/"/>
  <updated>2022-01-15T08:56:22.721Z</updated>
  <id>https://sun-spots.github.io/</id>
  
  <author>
    <name>John Doe</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>css样式、继承、权重</title>
    <link href="https://sun-spots.github.io/2022/01/14/css%E6%A0%B7%E5%BC%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E6%9D%83%E9%87%8D/"/>
    <id>https://sun-spots.github.io/2022/01/14/css%E6%A0%B7%E5%BC%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E6%9D%83%E9%87%8D/</id>
    <published>2022-01-14T11:59:12.000Z</published>
    <updated>2022-01-15T08:56:22.721Z</updated>
    
    <content type="html"><![CDATA[<h1 id="css样式-继承-与选择器的权重"><a class="markdownIt-Anchor" href="#css样式-继承-与选择器的权重">#</a> CSS 样式、继承、与选择器的权重</h1><h2 id="1-继承"><a class="markdownIt-Anchor" href="#1-继承">#</a> 1. 继承</h2><p>当我们在为一个标签指定其属性时，同时它的后代元素也会应用到相应的元素，这种现象称为 CSS 的继承。继承是发生在祖先后后代之间的，继承的设计是为了方便我们的开发。（需要为后代的某些元素指定单独的属性时，单独声明即可）利用继承，我们可以将一些通用的样式，统一设置到共同的祖先元素上。这样只需设置一次即可让所有的元素都具有该样式</p><p>注意，并不是所有的样式都会被继承：</p><ul><li>比如背景相关的，布局相关等的这些样式都不会被继承。（列如：背景颜色。背景图片等）</li></ul><p>​       我们可以再 Zeal 手册中，搜索 <code>background-color</code>  属性，可以看到一个定义的表格。其中就说明了其不可被继承性</p><ul><li>常用的 css 不可继承的属性：</li></ul><p>display：规定元素应该生成的框的类型</p><p>text-decoration：规定添加到文本的装饰</p><p>text-shadow：文本阴影效果</p><p>white-space：空白符的处理</p><p>盒子模型的属性：width、height、margin 、border、padding</p><p>背景属性：background</p><p>定位属性：float、clear、position、top、right、bottom、left、min-width、min-height、max-width、max-height、overflow、clip、z-index</p><h2 id="2-选择器的权重"><a class="markdownIt-Anchor" href="#2-选择器的权重">#</a> 2. 选择器的权重</h2><p>当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。</p><p><strong>权重：!important &gt; 行内样式 &gt; ID 选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性。</strong></p><p>发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定选择器的权重</p><table><thead><tr><th>选择器</th><th>权重</th></tr></thead><tbody><tr><td>内联样式</td><td>1, 0, 0, 0</td></tr><tr><td>ID 选择器</td><td>0, 1, 0, 0</td></tr><tr><td>类和伪类选择器</td><td>0, 0, 1, 0</td></tr><tr><td>元素选择器</td><td>0, 0, 0, 1</td></tr><tr><td>通配选择器</td><td>0, 0, 0, 0</td></tr><tr><td>继承的样式</td><td>没有优先级</td></tr></tbody></table><p>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示（<strong>分组选择器是单独计算的，组合选择器相加，相加的结果不会超过它前面的选择器的优先级）</strong></p><p><strong>选择器的累加不会超过其最大的数量级，类选择器再高也不会超过 ID 选择器</strong>如果优先级计算后相同，此时则优先使用靠下的样式</p><p>可以在某一个样式的后边添加 <code>!important</code> ，则此时该样式会获取到最高的优先级，甚至超过内联样式，注意：在开发中一定要慎用！</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line">    #box1&#123;</span><br><span class="line">        background-color: orange;</span><br><span class="line">    &#125;</span><br><span class="line">    div&#123;</span><br><span class="line">        background-color: yellow;</span><br><span class="line">    &#125;</span><br><span class="line">    .red&#123;</span><br><span class="line">        background-color: red;</span><br><span class="line">    &#125;</span><br><span class="line">&lt;/style&gt;</span><br><span class="line"></span><br><span class="line">&lt;div id=&quot;box1&quot; class=&quot;red&quot; style=&quot;background-color: skyblue;&quot;&gt;选择器的权重&lt;/div&gt;</span><br></pre></td></tr></table></figure><h2 id="3-长度单位"><a class="markdownIt-Anchor" href="#3-长度单位">#</a> 3. 长度单位</h2><h3 id="像素"><a class="markdownIt-Anchor" href="#像素">#</a> 像素</h3><p>我们先来看下某度上关于像素（pixel, 缩写 px）的介绍</p><p>像素是指由图像的小方格组成的，这些小方块都有一个明确的位置和被分配的色彩数值，小方格颜色和位置就决定该图像所呈现出来的样子。</p><p>可以将像素视为整个图像中不可分割的单位或者是元素。不可分割的意思是它不能够再切割成更小单位抑或是元素，它是以一个单一颜色的小格存在 [1] 。每一个点阵图像包含了一定量的像素，这些像素决定图像在屏幕上所呈现的大小。</p><p>也就是说，显示器屏幕实际上是由一个一个的小点（单位色块，即像素）构成的</p><p><img data-src="https://s3.bmp.ovh/imgs/2022/01/f14c7aaed2f7e7f5.gif" alt=""></p><p><strong>问题 1：像素和分辨率有什么关系呢？</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">分辨率 = 水平方向像素 * 垂直方向像素</span><br></pre></td></tr></table></figure><h4 id="屏幕分辨率"><a class="markdownIt-Anchor" href="#屏幕分辨率">#</a> 屏幕分辨率</h4><p>例如，屏幕分辨率是 1920×1080，则该屏幕水平方向有 1920 个像素，垂直方向有 1080 个像素</p><ul><li><p>不同屏幕的像素大小是不同的，也就是说像素大小不像我们现行的长度单位（如米 /m）那样有着固定的国际标准</p></li><li><p>所以同样的像素大小在不同的设备上显示效果是不一样的，像素越小的屏幕显示的效果越清晰</p></li></ul><h4 id="图像分辨率"><a class="markdownIt-Anchor" href="#图像分辨率">#</a> 图像分辨率</h4><p>例如，一张图片分辨率是 300x200，则该图片在屏幕上按 1:1 缩放时，水平方向有 300 个像素，垂直方向有 200 个像素点</p><ul><li><p>图片分辨率越高，1:1 缩放时面积越大</p></li><li><p>图片分辨率越低，1:1 缩放时面积越小</p></li></ul><p>同一台设备像素大小是不变的，那把图片放大超过 100% 时占的像素点就多了，但是图像也会变得模糊</p><p><strong>问题 2：屏幕实现图片放大或缩小的原理是什么呢？</strong></p><ul><li><p>其实是设备通过算法对图像进行了像素补足；</p></li><li><p>同理，把图片按小于 100% 缩放时，也是通过算法将图片像素减少</p></li></ul><h3 id="百分比"><a class="markdownIt-Anchor" href="#百分比">#</a> 百分比</h3><p>也可以将属性值设置为相对于其父元素属性的百分比，此时子元素的大小相对于其父元素的属性发生相对的变化（暂且先理解成父元素，后面会详细说）的改变而改变</p><h3 id="em"><a class="markdownIt-Anchor" href="#em">#</a> em</h3><p>em 是相对于元素的字体大小来计算的， <code>1em = &lt;self&gt;.font-size * 10</code> ，也就说 em 值会根据元素本身的字体大小的改变而改变（此处的字体大小为自己标签或其父标签所指定的字体的大小）</p><h3 id="rem"><a class="markdownIt-Anchor" href="#rem">#</a> rem</h3><p>rem 是相对于根元素的字体大小来计算， <code>1em = &lt;root&gt;.font-size * 10</code> ，也就说 em 值会根据根元素的字体大小的改变而改变（此处的字体大小整个页面的字体【或者是<html>所指定的】的字体的大小）</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">style</span>&gt;</span><span class="css"></span></span><br><span class="line"><span class="css">    * &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>: <span class="number">24px</span>;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    </span></span><br><span class="line"><span class="css">    <span class="selector-class">.box1</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">200px</span>; </span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">200px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: orange;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span></span><br><span class="line"><span class="css">    <span class="selector-class">.box2</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">50%</span>; </span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">50%</span>; </span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: aqua;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    </span></span><br><span class="line"><span class="css">    <span class="selector-class">.box3</span>&#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">10em</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">10em</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: greenyellow;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css">    </span></span><br><span class="line"><span class="css">    <span class="selector-class">.box4</span> &#123;</span></span><br><span class="line"><span class="css">        <span class="attribute">font-size</span>: <span class="number">20px</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">width</span>: <span class="number">10rem</span>; <span class="comment">/*当时用rem时，不管怎么改本元素的font-size都是不会变的。需要定义root元素的font-size才可以 */</span></span></span><br><span class="line"><span class="css">        <span class="attribute">height</span>: <span class="number">10rem</span>;</span></span><br><span class="line"><span class="css">        <span class="attribute">background-color</span>: red;</span></span><br><span class="line"><span class="css">    &#125;</span></span><br><span class="line"><span class="css"></span><span class="tag">&lt;/<span class="name">style</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box1&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box2&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box3&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&quot;box4&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><img data-src="https://s3.bmp.ovh/imgs/2022/01/54054df3a36b7ed2.png" style="zoom:50%;" /><h2 id="4-颜色单位"><a class="markdownIt-Anchor" href="#4-颜色单位">#</a> 4. 颜色单位</h2><p><strong>css 中的颜色名称</strong></p><p>我们生活中会使用各种颜色名称去描述看到的各种颜色，在 css 中当然也可以直接使用颜色名来设置颜色，比如：red、orange、yellow、blue、green 等等其中有 140 种颜色名称是所有浏览器都支持的，但是有个问题，就是在 css 中直接使用颜色名非常不方便</p><p>而且世界上有无数种颜色，人眼也不能分辨出所有颜色，更不可能对每一种颜色都进行命名而且就算能够有办法对那么多种颜色进行命名，我们也不可能一个一个的去记或去查这种对应关系。试问下，有多少人看一眼某个颜色，就能够在调色板上快速准确的定位那个颜色或者直接叫出那种颜色的名称？这显然不现实，至少现在如此另外，那么 css 中还可以怎么调和出更多的颜色呢？</p><p>在介绍 css 的颜色单位之前，我们首先来了解下光的三原色，因为 css 的颜色就是按照光的三原色来调和的发现光的色散奥妙之后，牛顿开始推论：既然白光能被分解及合成，那么这七种色光是否也可以被分解或合成。于是，纷繁的实验和不停的计算充斥着他日后的生活。一段时间后，牛顿通过计算，得出了一个结论：七种色光中只有红、绿、蓝三种色光无法被分解，于是也就谈不到合成了。而其他四种色光均可由这三种色光以不同比例相合而成。于是红、绿、蓝则被称为 “三原色光” 或 “光的三原色”（注意，这有别于我们熟知的三原色 “红黄蓝”）。牛顿通过计算得出上述结论后，未能完成实验，便与世长辞。这里再科普下光的三原色和颜料的三原色的区别</p><p><strong>颜料三原色</strong>（CMYK）：品红、黄、青 (天蓝)。色彩三原色可以混合出所有颜料的颜色，同时相加为黑色，黑白灰属于无色系。</p><p><strong>光学三原色</strong>（RGB）：红、绿、蓝 (靛蓝)。光学三原色混合后，组成显示屏显示颜色，三原色同时相加为白色，白色属于无色系（黑白灰）中的一种。</p><p>那看到这里有人会问了，<strong>css 为什么不按照颜料的三原色来调和呢？</strong></p><p>因为道理很简单，聪明的小伙伴应该已经知道答案了。上面我们也说过，屏幕是由像素组成的，每个像素就是一个单位色块。而这个单位色块之所以能显示颜色，就是靠发光来实现的既然光是由三种色光组成的，任何一种颜色均可以由这三种颜色调和出来的，那么为什么我们不能用三原色来表示一种颜色呢？</p><h3 id="rgb值"><a class="markdownIt-Anchor" href="#rgb值">#</a> RGB 值</h3><p>RGB 通过三原色的不同浓度来调配出不同的颜色</p><ul><li><p>语法： <code>RGB(red, green, blue)</code></p></li><li><p>范围：每一种颜色的范围在 0 ~ 255（0% ~ 100%）之间</p></li></ul><h3 id="rgba"><a class="markdownIt-Anchor" href="#rgba">#</a> RGBA</h3><p>就是在 rgb 的基础上增加了一个 a 表示不透明度</p><ul><li><p><code>1</code>  表示完全不透明</p></li><li><p><code>0</code>  表示完全透明</p></li><li><p><code>.5</code>  半透明</p></li></ul><h3 id="十六进制的rgb值"><a class="markdownIt-Anchor" href="#十六进制的rgb值">#</a> 十六进制的 RGB 值</h3><p>就是 RGB 值的十六进制写法</p><ul><li><p>语法： <code>#RRGGBB</code></p></li><li><p>范围：每一种颜色的范围在 00 ~ ff 之间</p></li></ul><p>如果颜色两位两位重复可以进行简写，如 <code>#aabbcc</code>  =&gt;  <code>#abc</code></p><p>在 vscode 中，我们可以看到其会对颜色进行预览展示。并且将鼠标移至 color 处悬浮，会智能的弹出一个 rgb 调色板，方便我们进行调色</p><p>如果我们看到某种颜色，非常喜欢，那么在哪里才能买得到呢？ 怎么知道这个颜色的 rgb 值呢？</p><p>我们可以直接搜索黄色，哦不是，取色器！有些录制软件也会自带取色功能，如 FastStone Capture</p><p><img data-src="https://s3.bmp.ovh/imgs/2022/01/e68cd06581d58c87.png" alt=""></p><p>下载地址：<span class="exturl" data-url="aHR0cHM6Ly9mYXN0c3RvbmUtY2FwdHVyZS5lbi5zb2Z0b25pYy5jb20v">FastStone Capture - Download</span></p><p>笔记来源：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhKNDExWDdVZA==">尚硅谷 Web 前端 HTML5&amp;CSS3 初学者零基础入门全套完整版</span></p><p>​<span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL3UyMTE5NTE4My9oZmNhbWcvc2djZzU0">https://www.yuque.com/u21195183/hfcamg/sgcg54</span></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;css样式-继承-与选择器的权重&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#css样式-继承-与选择器的权重&quot;&gt;#&lt;/a&gt; CSS 样式、继承、与选择器的权重&lt;/h1&gt;
&lt;h2 id=&quot;1-继承&quot;&gt;&lt;a class=&quot;markdow</summary>
      
    
    
    
    <category term="web前端" scheme="https://sun-spots.github.io/categories/web/"/>
    
    
  </entry>
  
  <entry>
    <title>web站点搭建</title>
    <link href="https://sun-spots.github.io/2022/01/13/web%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/"/>
    <id>https://sun-spots.github.io/2022/01/13/web%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/</id>
    <published>2022-01-13T15:05:00.000Z</published>
    <updated>2022-01-14T15:05:24.140Z</updated>
    
    <content type="html"><![CDATA[<h1 id="web站点搭建"><a class="markdownIt-Anchor" href="#web站点搭建">#</a> web 站点搭建</h1><h3 id="一基础知识"><a class="markdownIt-Anchor" href="#一基础知识">#</a> 一：基础知识</h3><p><strong>1. 网站</strong>：指在因特网上根据一定的规则，使用 HTML、CSS、jsp 等脚本语言与工具制作的用于展示特定内容相关网页的集合。简单地说，网站是一种沟通工具，人们可以通过网站来发布自己想要公开的资讯，或者利用网站来提供相关的网络服务。人们可以通过网页浏览器来访问网站，获取自己需要的资讯或者享受网络服务。</p><p><strong>网站的分类</strong>：</p><ol><li><ul><li><p>根据网站所用编程语言分类：例如 asp 网站、php 网站、jsp 网站、Asp. net 网站等；</p></li><li><p>根据网站的用途分类：例如门户网站（综合网站）、行业网站、娱乐网站等；</p></li></ul></li><li><ul><li><p>根据网站的功能分类：例如单一网站（企业网站）、多功能网站（网络商城）等等。</p></li><li><p>根据网站的持有者分类：例如个人网站、商业网站、政府网站、教育网站等。</p></li></ul></li><li><ul><li>根据网站的商业目的分类：营利型网站（行业网站、论坛）、非营利性型网站（企业网站、政府网站、教育网站）。</li></ul></li></ol><p>适合类型：ASP（个人）、PHP（企业，门户，商务）、<span class="exturl" data-url="aHR0cDovL0FTUC5ORVQ=">ASP.NET</span>（企业，门户，商务）<br>PHP（不适合大型）&gt;NET（比较适合中、大型）<br>JSP&gt;PHP &gt; <span class="exturl" data-url="aHR0cDovL0FTUC5ORVQ=">ASP.NET</span>，比如安全高、安全中、安全低。</p><p><strong>2. 域名</strong>：简称域名、网域，是由一串用点分隔的名字组成的 Internet 上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）。PS: 域名会被解析到一个唯一的公网 IP 地址上，当然通过 IP 也是可以去对网站进行访问。</p><p><img data-src="https://cdn.nlark.com/yuque/0/2021/png/2942226/1623390545612-7c2ca0fe-6815-4c3c-b47f-d296827dc125.png" alt="img"></p><p><strong>3. 空间</strong>：</p><p>常见网站空间：虚拟主机（虚拟空间），独立服务器，云主机，VPS。</p><p>虚拟主机：是在网络服务器上划分出一定的磁盘空间供用户放置站点、应用组件等；提供必要的站点功能、数据存放和传输功能。所谓虚拟主机，也叫 “网站空间”，就是把一台运行在互联网上的服务器划分成多个 “虚拟” 的服务器。每一个虚拟主机都具有独立的域名和完整的 Internet 服务器（支持 WWW、FTP、E-mail 等）功能。</p><p>云主机 /vps: 云主机又称为云计算服务器或云服务器，是云计算服务体系中的一项主机产品。云 z 主机是一种类似 VPS 服务器的虚拟化技术。也可以理解是 VPS 的升级版，与 VPS 还有所不同是，它是在一组集群服务器上划分出来的多个类似独立主机的部分。</p><p><strong>4.web 网站的四大组成部分</strong>：服务器、数据库、web 容器（中间件）、脚本语言</p><p><strong>5.web 容器简介</strong></p><p>web 容器就是一种服务程序，在服务器中一个端口就对应一个提供相应服务的程序（比如 Apache 默认的端口为 80），而这个程序就是处理服务器从客户端收到的请求，如 Java 中的 Tomcat 容器，ASP 的 IIS 都是这样的容器。一个服务器可以有多个容器。</p><p>常见的 WEB 容器：IIS、Apache、Nginx、Tomcat、Jboss、WebLogic</p><p><strong>6. 脚本语言介绍</strong></p><p>脚本语言是一种 web 端的网页源代码。它又分为静态和动态网站。</p><p>静态：不与数据库发生交互，包括 html、html5、shtml。</p><p>动态：与数据库进行交互来获取、存储数据，包括 asp、aspx、php、jsp 等。</p><p><strong>7. 数据库介绍</strong></p><p>数据库是存放数据的仓库。它的存储空间很大，可以存放百万条、千万条、上亿条数据。但是数据库并不是随意地将数据进行存放，是有一定的规则的，否则查询的效率会很低。</p><p>常见的数据库：</p><p>Access 数据库：小型数据库，性能低，安全性低，无需登录账号密码。</p><p>Sqlserver 数据库：轻量级中小型，也叫 mssql 数据库，微软的数据库，需要登录账户密码，最高权限管理员名称：sa。</p><p>Mysql 数据库：轻量级，需要账户密码，被 Oracle 收购了，最高权限管理员名称：root。</p><p>Oracle 数据库：属于甲骨文公司，大型数据库，一个数据库可以建立很多数据库，最高权限管理员名称： sys。</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">Mirsoft ACCESS </span><br><span class="line">Mirsoft SQLServer </span><br><span class="line">MySQL（ORACLE）</span><br></pre></td></tr></table></figure><p><strong>8. 服务器介绍</strong></p><p><strong>8.1 简介</strong>：服务器是一种高性能计算机，某方面其性能是普通计算机的几倍甚至更多，它作为网络节点，提供文件存储等服务，供客户端数据等服务，是互联网的灵魂。</p><p><strong>8.2 常见的服务器：</strong></p><p>Windows：</p><p>Windows server2003IIS6.0</p><p>Windows server2008IIS7.0</p><p>Windows server2012IIS8.0</p><p>Windows server2016IIS8.5</p><p>Windows10IIS10.0</p><p>Linux：</p><p>Ubuntu</p><p>Red Hat Enterprise Linux (RHEL)</p><p>SUSE Linux Enterprise Server</p><p>CentOS (Community OS) Linux Server</p><p>Debian</p><p><strong>8.3web 常见的网站搭建架构：</strong><br>Windows + IIS + Access + asp/aspx<br>Windows + IIS + SQLserver + asp/aspx<br>Windows + APache + Mysql + PHP<br>Windows + Nginx + Mysql/ORACLE + JSP</p><p>Linux + Apache + Mysql + PHP  (LAMP)<br>Linux + Nginx + Mysql + PHP (LNMP)<br>Linux + Apache + Mysql + JSP<br>Linux + Nginx + Oracle + JSP<br>Linux + Tomcat、Jboss、WebLogic + MySQL/Oracle + Jsp</p><h3 id="二web服务器搭建"><a class="markdownIt-Anchor" href="#二web服务器搭建">#</a> 二：web 服务器搭建</h3><p>window serivce2016：</p><ul><li><p>在服务器管理器界面点击 “添加角色与功能”</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114223535287.png" alt="image-20220114223535287"></p></li><li><p>安装类型与服务器选择均默认，服务器角色选择 -----web 服务器</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114223741914.png" alt="image-20220114223741914"></p></li><li><p>功能选择 -----IIS 可承载 web 核心</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114223915724.png" alt="image-20220114223915724"></p></li><li><p>在此页面下找到以下选项选中即可</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224044961.png" alt="image-20220114224044961"></p></li><li><p>打开管理工具，选择 internet information service</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224406509.png" alt="image-20220114224406509"></p></li><li><p>选择网站右键添加网站</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224518459.png" alt="image-20220114224518459"></p></li><li><p>填写网络名称、物理路径，将应用程序池改为图中值并选择 ip</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224858216.png" alt="image-20220114224858216"></p></li><li><p>右键点击创建的网站，重新启动即可</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114225040107.png" alt="image-20220114225040107"></p><h3 id="3常见的错误"><a class="markdownIt-Anchor" href="#3常见的错误">#</a> 3 常见的错误</h3><p>3.1 若浏览器中出现文件夹中所有的文件，而没有出现初始页面，则此时应该在默认文档中加入网站初始页面的文件</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114225827199.png" alt="image-20220114225827199"><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114225854186.png" alt="image-20220114225854186"></p><p>3.2 若浏览器中出现 403 错误，此时文件目录的访问权限出现问题，修改目录浏览，启用即可</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114230059829.png" alt="image-20220114230059829"><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114230207160.png" alt="image-20220114230207160"></p><p>3.3 若浏览器中出现数据库文件出错相关的问题。可以尝试将应用程序池中的 Class.Net 中的高级设置中的启用 32 位应用程序设置为 true</p><p><img data-src="C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114230341805.png" alt="image-20220114230341805"></p></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;h1 id=&quot;web站点搭建&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#web站点搭建&quot;&gt;#&lt;/a&gt; web 站点搭建&lt;/h1&gt;
&lt;h3 id=&quot;一基础知识&quot;&gt;&lt;a class=&quot;markdownIt-Anchor&quot; href=&quot;#一基础知识&quot;&gt;</summary>
      
    
    
    
    <category term="信息安全—网络渗透" scheme="https://sun-spots.github.io/categories/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8%E2%80%94%E7%BD%91%E7%BB%9C%E6%B8%97%E9%80%8F/"/>
    
    
  </entry>
  
  <entry>
    <title>CSS语法与选择器</title>
    <link href="https://sun-spots.github.io/2022/01/13/CSS%E8%AF%AD%E6%B3%95%E4%B8%8E%E9%80%89%E6%8B%A9%E5%99%A8/"/>
    <id>https://sun-spots.github.io/2022/01/13/CSS%E8%AF%AD%E6%B3%95%E4%B8%8E%E9%80%89%E6%8B%A9%E5%99%A8/</id>
    <published>2022-01-13T11:59:12.000Z</published>
    <updated>2022-01-14T13:47:18.874Z</updated>
    
    <content type="html"><![CDATA[<p>笔记来源：<span class="exturl" data-url="aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhKNDExWDdVZA==">尚硅谷Web前端HTML5&amp;CSS3初学者零基础入门全套完整版</span></p><p>​                    <span class="exturl" data-url="aHR0cHM6Ly93d3cueXVxdWUuY29tL3UyMTE5NTE4My9oZmNhbWcvY29hbG00">https://www.yuque.com/u21195183/hfcamg/coalm4</span></p><h1 id="css语法与选择器"><a class="markdownIt-Anchor" href="#css语法与选择器"></a> CSS语法与选择器</h1><h2 id="1-css简介"><a class="markdownIt-Anchor" href="#1-css简介"></a> 1. CSS简介</h2><h3 id="层叠样式表"><a class="markdownIt-Anchor" href="#层叠样式表"></a> 层叠样式表</h3><p>网页实际上是一个多层的结构，通过CSS可以分别为网页的每一个层来设置样式，而最终我们能看到只是网页的最上边一层</p><p>总之一句话，CSS用来设置网页中元素的样式</p><p>使用CSS来修改元素样式的方式大致可以分为3种</p><h3 id="内联样式行内样式"><a class="markdownIt-Anchor" href="#内联样式行内样式"></a> 内联样式（行内样式）</h3><p>在标签内部通过<code>style</code>属性来设置元素的样式</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">style</span>=<span class="string">&quot;color:red;font-size:60px;&quot;</span>&gt;</span>内联样式（行内样式）<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><p>问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）</p><h3 id="内部样式表"><a class="markdownIt-Anchor" href="#内部样式表"></a> 内部样式表</h3><p>将样式编写到<code>head</code>中的<code>style</code>标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;style&gt;</span><br><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>:green; </span><br><span class="line">    <span class="attribute">font-size</span>:<span class="number">50px</span>;</span><br><span class="line">&#125;</span><br><span class="line">&lt;/style&gt;</span><br></pre></td></tr></table></figure><p>问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用</p><h3 id="外部样式表"><a class="markdownIt-Anchor" href="#外部样式表"></a> 外部样式表</h3><p>可以将css样式编写到一个外部的CSS文件中，然后通过<code>link</code>标签来引入外部的CSS文件</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;./style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>外部样式表需要通过<code>link</code>标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用</p><p>将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。</p><h2 id="2-css基本语法"><a class="markdownIt-Anchor" href="#2-css基本语法"></a> 2. CSS基本语法</h2><h4 id="css中的注释"><a class="markdownIt-Anchor" href="#css中的注释"></a> css中的注释</h4><p>只能使用<code>/*</code>注释内容<code>*/</code>包裹。可以同时注释多行与单行注释。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* css中的单行注释 */</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* </span></span><br><span class="line"><span class="comment">css中的多行注释</span></span><br><span class="line"><span class="comment">css中的多行注释</span></span><br><span class="line"><span class="comment">*/</span></span><br></pre></td></tr></table></figure><h4 id="html中的注释"><a class="markdownIt-Anchor" href="#html中的注释"></a> html中的注释</h4><p>只能使用<code>&lt;!--注释内容</code>–&gt;包裹。可以同时注释多行与单行注释。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">&lt;!-- html中的单行注释 --&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="comment">&lt;!-- </span></span><br><span class="line"><span class="comment">html中的多行注释</span></span><br><span class="line"><span class="comment">html中的多行注释</span></span><br><span class="line"><span class="comment">--&gt;</span></span><br></pre></td></tr></table></figure><h3 id="基本语法"><a class="markdownIt-Anchor" href="#基本语法"></a> 基本语法</h3><p>CSS的基本语法是由选择器和声明块组成。形如：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">P</span>&#123;</span><br><span class="line"><span class="attribute">color</span>：red；</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在每一条的结束后用“；”隔开每一条语句。</p><h4 id="选择器"><a class="markdownIt-Anchor" href="#选择器"></a> 选择器</h4><p>通过选择器可以选中页面中的指定元素</p><ul><li>比如<code>p</code>的作用就是选中页面中所有的<code>p</code>元素声明块</li></ul><h4 id="声明块"><a class="markdownIt-Anchor" href="#声明块"></a> 声明块</h4><p>通过声明块来指定要为元素设置的样式</p><ul><li><p>声明块由一个一个的声明组成，声明是一个名值对结构</p></li><li><p>一个样式名对应一个样式值，名和值之间以<code>:</code>连接，以<code>;</code>结尾</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="3-css选择器"><a class="markdownIt-Anchor" href="#3-css选择器"></a> 3. CSS选择器</h2><h3 id="通配选择器universal-selector"><a class="markdownIt-Anchor" href="#通配选择器universal-selector"></a> 通配选择器（Universal selector）</h3><ul><li><p>作用：选中html页面中出现的所有的标签。</p></li><li><p>语法：<code>*&#123;&#125;</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">*&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="元素选择器type-selector"><a class="markdownIt-Anchor" href="#元素选择器type-selector"></a> 元素选择器（Type selector）</h3><p>也叫类型选择器、标签选择器</p><ul><li><p>作用：选中html页面中的一种标签，无论标签的属性有何不同，只要标签名相同即被选中</p></li><li><p>语法：<code>elementname&#123;&#125;</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red; </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">h1</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="类选择器class-selector"><a class="markdownIt-Anchor" href="#类选择器class-selector"></a> 类选择器（Class selector）</h3><ul><li><p>作用：选中html页面中class属性值相同的所有的标签</p></li><li><p>语法：<code>.classname</code>{}</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-class">.blue</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-class">.size</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">20px</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">class`是一个标签的属性，它和`id`类似，不同的是`class</span><br></pre></td></tr></table></figure><ul><li><p>可以重复使用，</p></li><li><p>可以通过<code>class</code>属性来为元素分组，</p></li><li><p>可以同时为一个元素指定多个<code>class</code>属性</p></li></ul><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">p</span> <span class="attr">class</span>=<span class="string">&quot;blue size&quot;</span>&gt;</span> 类选择器（Class selector）<span class="tag">&lt;/<span class="name">p</span>&gt;</span></span><br></pre></td></tr></table></figure><h3 id="id选择器id-selector"><a class="markdownIt-Anchor" href="#id选择器id-selector"></a> ID选择器（ID selector）</h3><ul><li><p>作用：根据元素的<code>id</code>属性值选中一个元素，<strong>一个html页面中只能由一个id值，虽然重复的id值在css中也可以起作用，但是不可使用，以防在以后的开发中报错！</strong></p></li><li><p>语法：<code>#idname&#123;&#125;</code></p></li><li><p>例子：<code>#box&#123;&#125;</code> <code>#red&#123;&#125;</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-id">#red</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="属性选择器attribute-selector"><a class="markdownIt-Anchor" href="#属性选择器attribute-selector"></a> 属性选择器（Attribute selector）</h3><ul><li><p>作用：根据元素的属性值选中一组元素</p></li><li><p>语法1：<code>[属性名]</code> 选择含有指定属性的元素</p></li><li><p>语法2：<code>[属性名=属性值]</code> 选择含有指定属性和属性值的元素</p></li><li><p>语法3：<code>[属性名^=属性值]</code> 选择属性值以指定值开头的元素</p></li><li><p>语法4：<code>[属性名$=属性值]</code> 选择属性值以指定值结尾的元素</p></li><li><p>语法5：<code>[属性名*=属性值]</code> 选择属性值中含有某值的元素</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title=e]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title^=e]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title$=e]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br><span class="line"><span class="selector-tag">p</span><span class="selector-attr">[title*=e]</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="4-复合选择器"><a class="markdownIt-Anchor" href="#4-复合选择器"></a> 4. 复合选择器</h2><h3 id="交集选择器"><a class="markdownIt-Anchor" href="#交集选择器"></a> 交集选择器</h3><ul><li><p>作用：选中同时复合多个条件的元素</p></li><li><p>语法：<code>选择器1选择器2选择器3选择器n&#123;&#125;</code></p></li><li><p>注意点：交集选择器中如果有元素选择器，必须使用元素选择器开头</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.red</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-class">.a</span><span class="selector-class">.b</span><span class="selector-class">.c</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="并集选择器选择器分组"><a class="markdownIt-Anchor" href="#并集选择器选择器分组"></a> 并集选择器（选择器分组）</h3><ul><li><p>作用：同时选择多个选择器对应的元素</p></li><li><p>语法：<code>选择器1,选择器2,选择器3,选择器n&#123;&#125;</code></p></li><li><p>例子：<code>#b1,.p1,h1,span,div.red&#123;&#125;</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">h1</span>,<span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="5-关系选择器"><a class="markdownIt-Anchor" href="#5-关系选择器"></a> 5. 关系选择器</h2><ul><li><p>父元素：直接包含子元素的元素叫做父元素</p></li><li><p>子元素：直接被父元素包含的元素是子元素</p></li><li><p>祖先元素：直接或间接包含后代元素的元素叫做祖先元素；一个元素的父元素也是它的祖先元素</p></li><li><p>后代元素：直接或间接被祖先元素包含的元素叫做后代元素；子元素也是后代元素</p></li><li><p>兄弟元素：拥有相同父元素的元素是兄弟元素</p></li></ul><h3 id="子元素选择器child-combinator"><a class="markdownIt-Anchor" href="#子元素选择器child-combinator"></a> 子元素选择器（Child combinator）</h3><ul><li><p>作用：选中指定父元素的指定子元素</p></li><li><p>语法：<code>父元素 &gt; 子元素</code></p></li><li><p>例子：<code>A &gt; B</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span><span class="selector-class">.box</span> &gt; <span class="selector-tag">p</span> &gt; <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="后代元素选择器descendant-combinator"><a class="markdownIt-Anchor" href="#后代元素选择器descendant-combinator"></a> 后代元素选择器（Descendant combinator）</h3><ul><li><p>作用：选中指定元素内的指定后代元素</p></li><li><p>语法：<code>祖先 后代</code></p></li><li><p>例子：<code>A B</code></p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">div</span> <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: skyblue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="兄弟元素选择器sibling-combinator"><a class="markdownIt-Anchor" href="#兄弟元素选择器sibling-combinator"></a> 兄弟元素选择器（Sibling combinator）</h3><ul><li><p>作用：选择下一个兄弟</p></li><li><p>语法：<code>前一个 + 下一个</code> <code>前一个 + 下一组</code></p></li><li><p>例子1：<code>A1 + A2</code>（Adjacent sibling combinator）</p></li><li><p>例子2：  <code>A1 ~ An</code>（General sibling combinator）</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="selector-tag">p</span> + <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="selector-tag">p</span> ~ <span class="selector-tag">span</span>&#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h2 id="6-伪类选择器"><a class="markdownIt-Anchor" href="#6-伪类选择器"></a> 6. 伪类选择器</h2><p>伪类（不存在的类，特殊的类）</p><p>伪类用来描述一个元素的特殊状态，比如：第一个子元素、被点击的元素、鼠标移入的元素.…</p><p>伪类一般情况下都是使用<code>:</code>开头</p><ul><li><p><code>:first-child</code> 第一个子元素</p></li><li><p><code>:last-child</code> 最后一个子元素</p></li><li><p><code>:nth-child()</code> 选中第n个子元素</p></li><li><ul><li>n：第n个，n的范围0到正无穷</li></ul></li><li><ul><li>2n或even：选中偶数位的元素</li></ul></li><li><ul><li>2n+1或odd：选中奇数位的元素</li></ul></li></ul><p>以上这些伪类都是根据所有的子元素进行排序的</p><ul><li><p><code>:first-of-type</code> 同类型中的第一个子元素</p></li><li><p><code>:last-of-type</code> 同类型中的最后一个子元素</p></li><li><p><code>:nth-of-type()</code> 选中同类型中的第n个子元素</p></li></ul><p>这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序的</p><ul><li><code>:not()</code>否定伪类，将符合条件的元素从选择器中去除</li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* ul下所有li，黑色 */</span></span><br><span class="line"><span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: black;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ul下第偶数个li，黄色 */</span></span><br><span class="line"><span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(<span class="number">2</span>n) &#123;</span><br><span class="line">    <span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ul下第奇数个li，绿色 */</span></span><br><span class="line"><span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:nth-child</span>(odd) &#123;</span><br><span class="line">    <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ul下第一个li，红色 */</span></span><br><span class="line"><span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:first</span>-child &#123;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* ul下最后一个li，黄色 */</span></span><br><span class="line"><span class="selector-tag">ul</span>&gt;<span class="selector-tag">li</span><span class="selector-pseudo">:last-child</span> &#123;</span><br><span class="line">    <span class="attribute">color</span>: orange;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li><p><code>:link</code> 未访问的链接</p></li><li><p><code>:visited</code> 已访问的链接</p></li><li><ul><li>由于隐私的原因，所以<code>visited</code>这个伪类只能修改链接的颜色</li></ul></li><li><p><code>:hover</code> 鼠标悬停的链接</p></li><li><p><code>:active</code> 鼠标点击的链接</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* unvisited link */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:link</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* visited link */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:visited</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* mouse over link */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:hover</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: green;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* selected link */</span></span><br><span class="line"><span class="selector-tag">a</span><span class="selector-pseudo">:active</span> &#123;</span><br><span class="line">  <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img data-src="https://www.yuque.com/api/filetransfer/images?url=https%3A%2F%2Fgitee.com%2Fvectorx%2FImageCloud%2Fraw%2Fmaster%2Fhtml5%2F20210517204218.png&amp;sign=00c7528db9f890d284638f404b92e92d797ded65c47b50144fc094422b5d02a2" alt="img" /></p><h2 id="7-伪元素选择器"><a class="markdownIt-Anchor" href="#7-伪元素选择器"></a> 7. 伪元素选择器</h2><p>伪元素，表示页面中一些特殊的并不真实的存在的元素（特殊的位置）</p><p>伪元素使用<code>::</code>开头</p><ul><li><p><code>::first-letter</code> 表示第一个字母</p></li><li><p><code>::first-line</code> 表示第一行</p></li><li><p><code>::selection</code> 表示选中的内容</p></li><li><p><code>::before</code> 元素的开始</p></li><li><p><code>::after</code> 元素的最后</p></li><li><p><code>::before</code>和<code>::after</code> 必须结合<code>content</code>属性来使用</p></li></ul><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/* 段落首字母设置大小为30px */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::first-letter</span>&#123;</span><br><span class="line">    <span class="attribute">font-size</span>: <span class="number">30px</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 段落第一行设置为黄色背景 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::first-line</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: yellow;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* 段落选中的部分变绿色 */</span></span><br><span class="line"><span class="selector-tag">p</span><span class="selector-pseudo">::selection</span>&#123;</span><br><span class="line">    <span class="attribute">background-color</span>: green；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* div前加上内容 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::before</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;BEFORE&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: red;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* div后加上内容 */</span></span><br><span class="line"><span class="selector-tag">div</span><span class="selector-pseudo">::after</span>&#123;</span><br><span class="line">    <span class="attribute">content</span>: <span class="string">&#x27;AFTER&#x27;</span>;</span><br><span class="line">    <span class="attribute">color</span>: blue;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img data-src="D:%5C%E8%BD%AF%E4%BB%B6%5Cf97e64a5-4af4-441b-b315-3fb19ff39457.gif" alt="" /></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;笔记来源：&lt;span class=&quot;exturl&quot; data-url=&quot;aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhKNDExWDdVZA==&quot;&gt;尚硅谷Web前端HTML5&amp;amp;CSS3初学者零基础入门全套完整版&lt;/sp</summary>
      
    
    
    
    <category term="web前端" scheme="https://sun-spots.github.io/categories/web/"/>
    
    
  </entry>
  
</feed>
