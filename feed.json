{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo",
    "description": "",
    "home_page_url": "https://sun-spots.github.io",
    "items": [
        {
            "id": "https://sun-spots.github.io/2022/01/15/MySQL%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%8F%8Asql%E6%B3%A8%E5%85%A5/",
            "url": "https://sun-spots.github.io/2022/01/15/MySQL%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%8F%8Asql%E6%B3%A8%E5%85%A5/",
            "title": "MySQL基本语法及sql注入",
            "date_published": "2022-01-15T12:05:00.000Z",
            "content_html": "<h1 id=\"mysql基本语法及sql注入\"><a class=\"markdownIt-Anchor\" href=\"#mysql基本语法及sql注入\">#</a> MySQL 基本语法及 sql 注入</h1>\n<h2 id=\"课堂导学\"><a class=\"markdownIt-Anchor\" href=\"#课堂导学\">#</a> 课堂导学：</h2>\n<p>Sql 语句的学习主要为渗透中 Sql 注入漏洞打下坚实基础，这样在学 Sql 注入漏洞时才能一马平川。</p>\n<h2 id=\"知识框架\"><a class=\"markdownIt-Anchor\" href=\"#知识框架\">#</a> 知识框架：</h2>\n<p>1：常见 SQL 语句</p>\n<p>2：SQL 之增删改查</p>\n<p>3：SQL 中 tips</p>\n<p>4：注入中常见的 sql 函数</p>\n<h2 id=\"1常见的sql语句\"><a class=\"markdownIt-Anchor\" href=\"#1常见的sql语句\">#</a> 1：常见的 SQL 语句</h2>\n<h3 id=\"11sql介绍\"><a class=\"markdownIt-Anchor\" href=\"#11sql介绍\">#</a> 1.1：SQL 介绍</h3>\n<ul>\n<li>\n<ul>\n<li>SQL 是用于访问和处理数据库的标准的计算机语言。</li>\n<li>SQL，指结构化查询语言，全称是 Structured Query Language。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 让您可以访问和处理数据库。</li>\n<li>SQL 是一种 ANSI（American National Standards Institute 美国国家标准化组织）标准的计算机语言。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>简单来说就是按照 数据结构来组织、 存储和管理数据的仓库。</li>\n<li>数据库是以一定方式储存在一起、能与多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>MySQL 也是一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODUlQjMlRTclQjMlQkIlRTUlOUUlOEIlRTYlOTUlQjAlRTYlOEQlQUUlRTUlQkElOTMlRTclQUUlQTElRTclOTAlODYlRTclQjMlQkIlRTclQkIlOUYvNjk2NTEx\">关系型数据库管理系统</span>，也是最受欢迎的开源软件之一。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12sql特点\"><a class=\"markdownIt-Anchor\" href=\"#12sql特点\">#</a> 1.2：SQL 特点</h3>\n<ul>\n<li>\n<ul>\n<li>SQL 面向数据库执行查询</li>\n<li>SQL 可从数据库取回数据</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可在数据库中插入新的记录</li>\n<li>SQL 可更新数据库中的数据</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可从数据库删除记录</li>\n<li>SQL 可创建新数据库</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可在数据库中创建新表</li>\n<li>SQL 可在数据库中创建存储过程</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可在数据库中创建视图</li>\n<li>SQL 可以设置表、存储过程和视图的权限</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13数据库操作\"><a class=\"markdownIt-Anchor\" href=\"#13数据库操作\">#</a> 1.3：数据库操作</h3>\n<h4 id=\"连接数据库\"><a class=\"markdownIt-Anchor\" href=\"#连接数据库\">#</a> 连接数据库</h4>\n<p>明文连接</p>\n<p>mysql -h127.0.0.1 -P3306 -uroot -proot  – 明文</p>\n<p>如果连接本地数据库 -h 可以省略 如果服务器端口是 3306，-P 端口号也可以省略</p>\n<p><strong>-h 后面跟的是访问的主机 IP 地址，-u 后面为数据库的用户名，-p 为数据库的密码</strong></p>\n<p>mysql -uroot -proot\t– 明文</p>\n<p>密文连接</p>\n<p>mysql -uroot -p</p>\n<p>Enter password: ****</p>\n<h4 id=\"退出数据库\"><a class=\"markdownIt-Anchor\" href=\"#退出数据库\">#</a> 退出数据库</h4>\n<p>EXIT       -- 方法一</p>\n<p>quit         -- 方法二</p>\n<p>\\q            -- 方法三</p>\n<p>ctrl+c      -- 方法四</p>\n<h4 id=\"注意\"><a class=\"markdownIt-Anchor\" href=\"#注意\">#</a> 注意</h4>\n<p>sql 语句最后以 “;” 结尾</p>\n<h3 id=\"14常用的sql语句\"><a class=\"markdownIt-Anchor\" href=\"#14常用的sql语句\">#</a> 1.4：常用的 SQL 语句</h3>\n<p>查询当前数据库版本：\t\tselect version ();</p>\n<p>查询当前数据库用户：\t\tselect user ();</p>\n<p>查询当前路径：\t\t\tselect @@basedir;   // 该路径为数据库安装的位置</p>\n<p>查询所有数据库：\t\t\tshow databases;</p>\n<p>选择一个数据库：\t\t\tuse + 数据库名；</p>\n<p>查询当前数据库：\t\t\tselect database ();</p>\n<p>查询所有表名：\t\t\tshow tables;</p>\n<p>创建一个数据库：\t\t\tcreate database 数据库名；</p>\n<p>删除一个数据库：\t\t\tdrop database 数据库名；</p>\n<p>查询一个表的结构：\t\tdesc 表名；</p>\n<h3 id=\"15数据库表字段的运用\"><a class=\"markdownIt-Anchor\" href=\"#15数据库表字段的运用\">#</a> 1.5：数据库表，字段的运用</h3>\n<h4 id=\"数据库表\"><a class=\"markdownIt-Anchor\" href=\"#数据库表\">#</a> 数据库表</h4>\n<ul>\n<li>\n<ul>\n<li>一个数据库通常包含一个或多个表。每个表由一个名字标识（例如 “客户” 或者 “订单”）；表包含带有数据的记录（行）。</li>\n<li>下面的例子是一个名为 “Persons” 的表：</li>\n</ul>\n</li>\n</ul>\n<p>表包含三条记录（每一条对应一个人）和五个列（Id、姓、名、地址和城市），行为一个表的记录，列为一个表的字段</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934373498-e2d668b2-f1d2-45fe-9cb0-cb4ba430c67d.png\" alt=\"img\"></p>\n<h4 id=\"sql-dml-和-ddl\"><a class=\"markdownIt-Anchor\" href=\"#sql-dml-和-ddl\">#</a> SQL DML 和 DDL</h4>\n<p>可以把 SQL 分为两个部分：数据操作语言 (DML) 和 数据定义语言 (DDL)。</p>\n<h4 id=\"sql-的-dml-部分\"><a class=\"markdownIt-Anchor\" href=\"#sql-的-dml-部分\">#</a> SQL 的 DML 部分</h4>\n<ul>\n<li>\n<p>SELECT - 从数据库表中获取数据</p>\n</li>\n<li>\n<p>UPDATE - 更新数据库表中的数据</p>\n</li>\n<li>\n<p>DELETE - 从数据库表中删除数据（删除数据用 delect，删除表、数据库、视图、索引等用 drop）</p>\n</li>\n<li>\n<p>INSERT INTO - 向数据库表中插入数据</p>\n</li>\n</ul>\n<h4 id=\"sql-dml-和-ddl-2\"><a class=\"markdownIt-Anchor\" href=\"#sql-dml-和-ddl-2\">#</a> SQL DML 和 DDL</h4>\n<ul>\n<li>\n<p>CREATE DATABASE - 创建新数据库</p>\n</li>\n<li>\n<p>ALTER DATABASE - 修改数据库</p>\n</li>\n<li>\n<p>CREATE TABLE - 创建新表</p>\n</li>\n<li>\n<p>ALTER TABLE - 变更（改变）数据库表（此处的修改包括对数据表的数据修改和对表修改）</p>\n</li>\n<li>\n<p>DROP TABLE - 删除表</p>\n</li>\n<li>\n<p>CREATE INDEX - 创建索引（搜索键）</p>\n</li>\n<li>\n<p>DROP INDEX - 删除索引</p>\n</li>\n</ul>\n<p><strong>SQL 对大小写不敏感；</strong></p>\n<h4 id=\"创建表\"><a class=\"markdownIt-Anchor\" href=\"#创建表\">#</a> 创建表</h4>\n<p><strong>语法</strong>：create table 数据表名字 (字段 类型 约束 [, 字段 类型 约束]);</p>\n<p>例如：create table student (id int,name varchar (20),add varchar (20),phone varchar (20));</p>\n<p><strong>约束</strong>：</p>\n<p>auto_increment\t表示自动增长\t\t// 表示数值会随着数据的插入数值会相应的自动的增加</p>\n<p>not null \t\t\t表示不能为空</p>\n<p>primary key \t\t表示主键</p>\n<p>foreign key\t       标识该属性为该表的外键，是与之联系某表的主键</p>\n<p>default \t\t\t默认值</p>\n<p>unique        标识该属性的值是唯一的</p>\n<h4 id=\"举例针对表常用命令\"><a class=\"markdownIt-Anchor\" href=\"#举例针对表常用命令\">#</a> 举例 (针对表常用命令)</h4>\n<p>在 class 数据库下创建 student 表 (id、name、age、sex、birthday)</p>\n<p>create table student(id int,name varchar(20),age int,sex varchar(20),birthday int);</p>\n<p>查看表结构</p>\n<p>desc student;</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/1794ff3dcaf4a34d.png\" alt=\"\"></p>\n<p>各字段的含义解释</p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>Null：表示该列是否可以存储 NULL 值（表示该列是否可以为空）。</li>\n<li>Key：表示该列是否已编制索引。PRI 表示该列是表主键的一部分，UNI 表示该列是 UNIQUE 索引的一部分，MUL 表示在列中某个给定值允许出现多次。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<p>Default：表示该列是否有默认值，如果有，值是多少。</p>\n</li>\n<li>\n<p>Extra：表示可以获取的与给定列有关的附加信息，如 AUTO_INCREMENT 等。</p>\n<p>查看创建表时的 CREATE TABLE 语句</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<p>SHOW CREATE TABLE 表名 \\G；   如果不加 \\G 参数显示会混乱，加了显示结果易于查看，比较直观。</p>\n<p>该语句的意思是：显示出创建表的 sql 语句。在不适用 “\\G” 是现实出的代码有些凌乱。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/6fe034e7c07f8f03.png\" alt=\"\"></p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/672b3469f7aafbf6.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>删除表</p>\n<p>drop table student;</p>\n<p>修改表名</p>\n<p>ALTER TABLE 旧表名 RENAME 新表名；</p>\n<h4 id=\"举例针对字段常用命令\"><a class=\"markdownIt-Anchor\" href=\"#举例针对字段常用命令\">#</a> 举例 (针对字段常用命令)</h4>\n<p>修改字段名</p>\n<p>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 新数据类型；</p>\n<p>添加字段</p>\n<p>ALTER TABLE &lt;表名&gt; ADD &lt; 新字段名 &gt; &lt; 数据类型 &gt; [约束条件] [FIRST|AFTER 已存在的字段名]；</p>\n<p>ALTER TABLE admin ADD user_name varchar(20) DEFAULT NULL age int(10) DEFAULT NULL;</p>\n<p>新字段名为需要添加的字段的名称；</p>\n<p>FIRST 为可选参数，其作用是将新添加的字段设置为表的第一个字段；</p>\n<p>AFTER 为可选参数，其作用是将新添加的字段添加到指定的已存在的字段名的后面；</p>\n<p>DEFAULT NULL 默认为 NULL。</p>\n<p>删除字段</p>\n<p>ALTER TABLE 表名 DROP 字段名；</p>\n<h3 id=\"16mysql常见的数据类型\"><a class=\"markdownIt-Anchor\" href=\"#16mysql常见的数据类型\">#</a> 1.6：Mysql 常见的数据类型</h3>\n<h4 id=\"数值类型\"><a class=\"markdownIt-Anchor\" href=\"#数值类型\">#</a> 数值类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934729617-62cc7f2f-4fa9-417a-9e0d-286841d9db06.png\" alt=\"img\"></p>\n<h4 id=\"日期和时间类型\"><a class=\"markdownIt-Anchor\" href=\"#日期和时间类型\">#</a> 日期和时间类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934749713-cf3fa5ec-36f6-4b34-a011-2760b12394c9.png\" alt=\"img\"></p>\n<h4 id=\"字符串类型\"><a class=\"markdownIt-Anchor\" href=\"#字符串类型\">#</a> 字符串类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934764195-2399cd03-1085-434a-b7fc-e3f61a45bc75.png\" alt=\"img\"></p>\n<h4 id=\"mysql整数类型\"><a class=\"markdownIt-Anchor\" href=\"#mysql整数类型\">#</a> MYSQL 整数类型</h4>\n<p>MySQL 主要提供的整数类型有 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT，其属性字段可以添加 AUTO_INCREMENT 自增约束条件。下表中列出了 MySQL 中的数值类型：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934816867-6ab3d30b-caa2-44e5-a8ca-49c8670ee68e.png\" alt=\"img\"></p>\n<h4 id=\"mysql小数类型\"><a class=\"markdownIt-Anchor\" href=\"#mysql小数类型\">#</a> MYSQL 小数类型</h4>\n<p>浮点类型有两种，分别是单精度浮点数（FLOAT）和双精度浮点数（DOUBLE）：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934874530-d7e8735c-4e13-4881-8525-d2a0fdc21a6b.png\" alt=\"img\"></p>\n<h4 id=\"mysql字符串类型\"><a class=\"markdownIt-Anchor\" href=\"#mysql字符串类型\">#</a> MYSQL 字符串类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934920255-a77063dc-41f8-436c-9786-69ec4238dcf9.png\" alt=\"img\"></p>\n<p>VARCHAR 和 TEXT 类型是变长类型，其存储需求取决于列值的实际长度（在前面的表格中用 L 表示），而不是取决于类型的最大可能尺寸。</p>\n<p>例如，一个 VARCHAR (10) 列能保存一个最大长度为 10 个字符的字符串，实际的存储需要字符串的长度 L 加上一个字节以记录字符串的长度。对于字符 “abcd”，L 是 4，而存储要求 5 个字节。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624935054825-2e99e3c2-c4a7-4934-bef6-ec59345fb975.png\" alt=\"img\"></p>\n<p>对比结果可以看到，CHAR (4) 定义了固定长度为 4 的列，无论存入的数据长度为多少，所占用的空间均为 4 个字节。VARCHAR (4) 定义的列所占的字节数为实际长度加 1。</p>\n<h3 id=\"17mysql主键\"><a class=\"markdownIt-Anchor\" href=\"#17mysql主键\">#</a> 1.7：Mysql 主键</h3>\n<h4 id=\"mysql主键primary-key\"><a class=\"markdownIt-Anchor\" href=\"#mysql主键primary-key\">#</a> MySQL 主键（PRIMARY KEY）</h4>\n<p>&quot;主键（PRIMARY KEY）“的完整称呼是&quot; 主键约束”。</p>\n<h4 id=\"选取设置主键约束的字段\"><a class=\"markdownIt-Anchor\" href=\"#选取设置主键约束的字段\">#</a> 选取设置主键约束的字段</h4>\n<ul>\n<li>\n<ul>\n<li>主键约束即在表中定义一个主键来唯一确定表中每一个记录数据的标识符。主键可以是表中的某一列或者多列的组合，其中由多列组合的主键称为复合主键。主键应该遵守下面的规则：每个表只能定义一个主键。</li>\n<li>主键值必须唯一标识表中的每一行，且不能为 NULL，即表中不可能存在两行数据有相同的主键值。这是唯一性原则。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>一个列名只能在复合主键列表中出现一次。</li>\n<li>复合主键不能包含不必要的多余列。当把复合主键的某一列删除后，如果剩下的列构成的主键仍然满足唯一性原则，那么这个复合主键是不正确的。这是最小化原则。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"在创建表时设置主键约束\"><a class=\"markdownIt-Anchor\" href=\"#在创建表时设置主键约束\">#</a> 在创建表时设置主键约束</h4>\n<ul>\n<li>\n<ul>\n<li>在 CREATE TABLE 语句中，主键是通过 PRIMARY KEY 关键字来指定的。</li>\n<li>在定义列的同时指定主键，语法规则如下：</li>\n</ul>\n</li>\n</ul>\n<p>字段名 数据类型 PRIMARY KEY；</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955289317-bb0970b1-e2b8-4571-8b61-1c8940726e06.png\" alt=\"img\"></p>\n<h4 id=\"在创建表时设置复合主键\"><a class=\"markdownIt-Anchor\" href=\"#在创建表时设置复合主键\">#</a> 在创建表时设置复合主键</h4>\n<ul>\n<li>\n<ul>\n<li>主键由多个字段联合组成，语法规则如下：</li>\n</ul>\n</li>\n</ul>\n<p>PRIMARY KEY [字段 1，字段 2，…, 字段 n]；</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955343429-d65002a0-3f2d-4a16-a6d2-6af1919e59d8.png\" alt=\"img\"></p>\n<h4 id=\"在修改表时添加主键约束\"><a class=\"markdownIt-Anchor\" href=\"#在修改表时添加主键约束\">#</a> 在修改表时添加主键约束</h4>\n<ul>\n<li>\n<ul>\n<li>在修改数据表时添加主键约束的语法规则为：</li>\n</ul>\n</li>\n</ul>\n<p>ALTER TABLE 表名 ADD PRIMARY KEY (字段名);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955444811-bff6a946-740e-4f41-b988-35d98f271057.png\" alt=\"img\"></p>\n<h4 id=\"mysql唯一约束unique-key\"><a class=\"markdownIt-Anchor\" href=\"#mysql唯一约束unique-key\">#</a> MySQL 唯一约束（UNIQUE KEY）</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2MuYmlhbmNoZW5nLm5ldC9teXNxbC8=\">MySQL</span> 唯一约束（Unique Key）要求该列唯一，允许为空，但只能出现一个空值。唯一约束可以确保一列或者几列不出现重复值。</p>\n<p>在定义完列之后直接使用 UNIQUE 关键字指定唯一约束，语法规则如下：</p>\n<p>&lt;字段名&gt; &lt; 数据类型 &gt; UNIQUE</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955931440-b55e2898-adbe-4922-876e-645a52224714.png\" alt=\"img\"></p>\n<h4 id=\"mysql查看表中的约束\"><a class=\"markdownIt-Anchor\" href=\"#mysql查看表中的约束\">#</a> MySQL 查看表中的约束</h4>\n<p>查看数据表中的约束语法格式如下：</p>\n<p>SHOW CREATE TABLE &lt;数据表名&gt;;</p>\n<h2 id=\"2sql之增删改查\"><a class=\"markdownIt-Anchor\" href=\"#2sql之增删改查\">#</a> 2：SQL 之增删改查</h2>\n<h3 id=\"21添加数据\"><a class=\"markdownIt-Anchor\" href=\"#21添加数据\">#</a> 2.1：添加数据</h3>\n<h4 id=\"1为表中所有字段添加数据\"><a class=\"markdownIt-Anchor\" href=\"#1为表中所有字段添加数据\">#</a> ①：为表中所有字段添加数据</h4>\n<p>i：INSERT 语句中指定所有字段名</p>\n<p>语法：INSERT INTO 表名 (字段名 1，字段名 2，…) VALUES (值 1，值 2，…);</p>\n<p>例题：向 student 表中插入（id 为 1，姓名：xiaoqiao，年龄：18，性别：woman，生日：2002）数据。</p>\n<p>insert into student(id,name,age,sex,birthday) values(1,“xiaoqiao”,18,“woman”,“2002”);</p>\n<p>ii：INSERT 语句中不指定字段名</p>\n<p>语法：INSERT INTO 表名 VALUES (值 11，值 2，…);</p>\n<p>例题：向 student 表中插入（id 为 2，姓名：daqiao，年龄：20，性别：woman，生日：2004）数据。</p>\n<p>insert into student values(2,“daqiao”,20,“woman”,“2000”);</p>\n<p><strong>此用法添加的数据数量、数据类型必须要与表中的字段保持一致</strong></p>\n<h4 id=\"2为表的指定字段添加数据\"><a class=\"markdownIt-Anchor\" href=\"#2为表的指定字段添加数据\">#</a> ②：为表的指定字段添加数据</h4>\n<p>i：为指定字段添加数据，即只向部分字段添加值，而其它字段的值为表定义时的默认值。</p>\n<p>语法：INSERT INTO 表名（字段 1，字段 2，…）VALUES (值 1，值 2，…);</p>\n<p>例题：向 student 表中插入（id 为 3，姓名：zhouyu，年龄：18，）数据。</p>\n<p>insert into student(id,name,age) values(3,“xaoqiao”,18);</p>\n<h4 id=\"3同时添加多条数据\"><a class=\"markdownIt-Anchor\" href=\"#3同时添加多条数据\">#</a> ③：同时添加多条数据</h4>\n<p>语法：INSERT INTO 表名 (字段名 1，字段名 2，…) VALUES （值 1，值 2，…),(值 1，值 2);</p>\n<p>例题：向 student 表中插入（id 为 4，姓名：sunce，年龄：20，性别：man，生日：2004）和（id 为 5，姓名：caocao，年龄：20，性别：man，生日：2004）数据</p>\n<p>insert into student values(4,“sunce”,20,“man”,“2000”),(5,“caocao”,20,“man”,“2000”);</p>\n<h3 id=\"22删除数据\"><a class=\"markdownIt-Anchor\" href=\"#22删除数据\">#</a> 2.2：删除数据</h3>\n<h4 id=\"1删除部分数据\"><a class=\"markdownIt-Anchor\" href=\"#1删除部分数据\">#</a> ①：删除部分数据</h4>\n<p>i：即删除指定的部分数据，需要使用 WHERE 子句来指定删除记录的条件。（符合 where 的记录将会被删除）</p>\n<p>语法：DELETE FROM 表名 WHERE 条件表达式；</p>\n<p>例题：向 student 表中删除 id 为 1 的数据。</p>\n<p>delete from student where id=1;</p>\n<h4 id=\"2删除全部数据\"><a class=\"markdownIt-Anchor\" href=\"#2删除全部数据\">#</a> ②：删除全部数据</h4>\n<p>i：若 DELETE 语句中没有使用 WHERE 语句，则会将表中所有记录都删除。</p>\n<p>语法：DELETE FROM 表名；</p>\n<p>例题：向 student 表中删除所有的数据。</p>\n<p>delete from student ;</p>\n<h3 id=\"23修改数据\"><a class=\"markdownIt-Anchor\" href=\"#23修改数据\">#</a> 2.3：修改数据</h3>\n<h4 id=\"1update-更新部分数据\"><a class=\"markdownIt-Anchor\" href=\"#1update-更新部分数据\">#</a> ①：UPDATE 更新部分数据</h4>\n<p>i：指更新指定表中的指定记录，使用 WHERE 子句来指定。</p>\n<p>语法：UPDATE 表名 SET 字段名 1 = 值 1，[，字段名 2 = 值 2，…] [ WHERE 条件表达式 ]；</p>\n<p>例题：向 student 表中 id 为 1 的数据中字段 age 改为 16，字段 birthday 改为 2004。</p>\n<p>update student set age=16,birthday=2004 where id=1;</p>\n<h4 id=\"2update-更新全部数据\"><a class=\"markdownIt-Anchor\" href=\"#2update-更新全部数据\">#</a> ②：UPDATE 更新全部数据</h4>\n<p>i：若 UPDATE 语句中没有使用 WHERE 语句，则会将表中所有记录都删除。</p>\n<p>语法：UPDATE FROM 表名；</p>\n<p>例题：向 student 表中将 age 字段都该为 17。</p>\n<p>update student set age=17;（表中所有的数据中的 age 字段的值都将改变为 17）</p>\n<h3 id=\"24查询数据\"><a class=\"markdownIt-Anchor\" href=\"#24查询数据\">#</a> 2.4：查询数据</h3>\n<h4 id=\"1简单查询\"><a class=\"markdownIt-Anchor\" href=\"#1简单查询\">#</a> ①：简单查询</h4>\n<p>i：查询所有字段</p>\n<p>语法：SELECT 字段名 1，字段名 2，…FROM 表名；</p>\n<p>例题：查询 student 表中所有数据。</p>\n<p>SELECT id,name,age ,sex,birthday  FROM student;</p>\n<p>select * from student;（“*” 为通配符，查询所有满足条件的 jilu）</p>\n<p>ii：查询指定的部分字段</p>\n<p>语法：SELECT 字段名 1，字段名 2，… FROM 表名；</p>\n<p>例题：查询 student 表中所有的 name 字段和 sex 字段。</p>\n<p>SELECT name,sex FROM student;</p>\n<p>注意：字段顺序可以更改，则显示的结果也会作出对应的调整。</p>\n<p>（可以指定 where 来筛选指定条件的记录）</p>\n<h4 id=\"2按条件查询\"><a class=\"markdownIt-Anchor\" href=\"#2按条件查询\">#</a> ②：按条件查询</h4>\n<ol>\n<li>\n<ol>\n<li>带关系运算符的查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 1，字段名 2，…FROM 表名 WHERE 条件表达式；</p>\n<p>例题：查询 student 表中 id 为 4 的人的 id 和 name 字段。</p>\n<p>SELECT id,name FROM student  WHERE id=4;</p>\n<ol>\n<li>\n<ol start=\"2\">\n<li>带 IN 关键字的查询（在… 里面）</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * 字段名 1, 字段名 2,…FROM 表名 WHERE 字段名 [NOT]  IN （元素 1，元素 2，…）；</p>\n<p><strong>解释：IN 关键字用于判断某个字段的值是否在指定集合中，若在，则该字段所在的记录将会被查询出来</strong></p>\n<p>例题：查询 student 表中 id 值为 1,2,3 的记录。</p>\n<p>SELECT * FROM student WHERE  id IN (1,2,3);</p>\n<ol>\n<li>\n<ol start=\"3\">\n<li>带 BETWEEN AND  关键字的查询 (在… 之间)</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT *  {字段名 1, 字段名 2,… FROM  表名 WHERE 字段名 [ NOT] BETWEEN  值 1  AND  值 2；</p>\n<p>解释：BETWEEN AND 用于判断某个字段的值是否在指定范围之内，若在，则该字段所在的记录会被  查询出来，反之不会。</p>\n<p>例题：查询 student 表中 id 值在 2~5 之间的人的 id 和 name。</p>\n<p>SELECT id,name FROM student WHERE id BETWEEN 2 AND 5;</p>\n<ol>\n<li>\n<ol start=\"4\">\n<li>空值查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT *  字段名 1，字段名 2，…FROM 表名 WHERE 字段名 IS [NOT] NULL</p>\n<p>解释：在数据表中有些值可能为空值（NULL），空值不同于 0，也不同于空字符串，需要使用 IS NULL 来判断字段的值是否为空值。</p>\n<p>例题：查询 student 表中 sex 值为空值的记录。</p>\n<p>SELECT * FROM student WHERE sex IS NULL;</p>\n<p><strong>注意：IS NOT NULL 关键字用来查询字段不为空值的记录。</strong></p>\n<ol>\n<li>\n<ol start=\"5\">\n<li>带 DISTINCT 关键字的查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT DISTINCT 字段名 FROM 表名；</p>\n<p>解释：很多表中某些字段的数据存在重复的值，可以使用 DISTINCT 关键字来过滤重复的值，只保留一个值。</p>\n<p>例题：查询 student 表中 birthday 字段的值，结果中不允许出行重复的值。</p>\n<p>SELECT DISTINCT birthday FROM student;</p>\n<ol>\n<li>\n<ol start=\"6\">\n<li>带 LIKE 关键字的查询</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>\n<ol>\n<li>百分号（%）通配符 **(% 在这里表示任意的意思，它可以匹配任意长度且满足条件的字符串)**</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT *  | 字段名 1，字段名 2，…FROM 表名 WHERE 字段名 [NOT] LIKE ‘匹配字符串’;</p>\n<p>解释：匹配任意长度的字符串，包括空字符串。例如，字符串 “c%” 匹配以字符 C 开始，任意长度的字符串，如 “ ct  ”，“ cut ”，“ current ” 等；字符串 “ c% g ” 表示以字符 c 开始，以 g 结尾的字符串；字符串 “ % y% ” 表示包含字符 “ y ” 的字符串，无论 “ y ” 在字符串的什么位置。</p>\n<p>例题：查询 student 表中 name 字段以字符 “s” 开头的人的 id,name。</p>\n<p>SELECT id,name FROM student  WHERE name LIKE “s%”;</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol start=\"2\">\n<li>下划线（_）通配符（只能匹配指定个数的字符串，一个 &quot;-&quot; 表示一个字符）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名 WHERE 字段名 [NOT] LIKE ‘匹配字符串’;</p>\n<p>解释：下划线通配符只匹配单个字符，若要匹配多个字符，需要使用多个下划线通配符。例如，字符串 “cu_” 匹配以字符串 “ cu ” 开始，长度为 3 的字符，如 “ cut ”，“ cup ”；字符串 “ c_ <em>l” 匹配在 “c” 和 “ l ” 之间包含两个字符的字符串，如 “ cool ”。需要注意的是，在连续使用 “-” 之间不能有空格，例如 “M</em> _QL” 只能匹配 “MySQL”，不能匹配 “My SQL”。</p>\n<p>例题：查询 student 表中 name 字段值以 “xia” 开始，以 “ qiao ” 结束，并且中间只有一个字符的记录。</p>\n<p>SELECT * FROM student WHERE name LIKE ‘xia_qiao’;</p>\n<p>注意：若要查询的字段值本来就含有 “%” 或者 “ _ ”, 则要用 “ \\ ” 进行转义，如要<strong>查询本身含有 “%” 的字符串，命令应改为 “ %%%”。</strong></p>\n<ol>\n<li>\n<ol start=\"3\">\n<li>带 AND 关键字的多条件查询（表示交集的关系，&amp; 运算）</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名；</p>\n<p>解释：在使用 SELECT 语句查询数据时，为了增加查询的准确性，可以使用 AND 关键字可以连接两个或多个查询条件。</p>\n<p>例题：查询 student 表中 id 字段小于 5，并且 sex 字段值为 “woman” 的人的 id 和 name</p>\n<p>SELECT id,name FROM student WHERE id&lt;5 AND sex=‘woman’;</p>\n<ol>\n<li>\n<ol start=\"4\">\n<li>带 OR 关键字的多条件查询（表示并集的关系，|| 运算）</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名 WHERE 条件表达式 1 OR 条件表达式 2 [… OR 条件表达式 n];</p>\n<p>解释：与 AND 关键字不同，OR 关键字只要满足任意一个条件就会被查询出来。</p>\n<p>例题：查询 student 表中 id 字段小于 5，或者 sex 字段值为 “woman” 的人的 id 和 name</p>\n<p>SELECT id,name FROM student WHERE id&lt;5 OR sex=‘woman’;</p>\n<ol>\n<li>\n<ol>\n<li>OR 和 AND 一起使用的情况</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名；</p>\n<p>解释：<strong>OR 和 AND 一起使用的时候，AND 的优先级高于 OR，因此二者一起使用时，会先运算 AND 两边的表达式，再运算 OR 两边的表达式。</strong></p>\n<p>例题：查询 student 表中 sex 值为 “woman” 或者 sex 值为 “man” 并且 age 字段值为 16 的人的记录</p>\n<p>SELECT * FROM student WHERE sex=‘woman’ OR sex=‘man’  AND age=16;</p>\n<h4 id=\"3聚合函数\"><a class=\"markdownIt-Anchor\" href=\"#3聚合函数\">#</a> ③：聚合函数</h4>\n<h4 id=\"img\"><a class=\"markdownIt-Anchor\" href=\"#img\">#</a> <img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623394440546-a0aaffed-cd97-4d61-ad82-9d76a4ddb747.png\" alt=\"img\"></h4>\n<ol>\n<li>\n<ol>\n<li>COUNT () 函数：统计所查询的满足条件的记录的总数</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT COUNT (*) FROM 表名；</p>\n<p>例题：查询 student 表中一共有多少条记录。</p>\n<p>SELECT COUNT(*) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>SUM () 函数：求出表中某个字段所有值的总和</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT  SUM (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中 age 字段的总和</p>\n<p>SELECT SUM(age) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>AVG () 函数：求出表中某个字段所有值的平均值</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT AVG (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中表中 age 字段的平均值。</p>\n<p>SELECT AVG(age) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>MAX () 函数：求出表中某个字段所有值的最大值</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT MAX (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中 age 字段的最大值</p>\n<p>SELECT MAX(age) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>MIN () 函数：求出表中某个字段所有值的最小值</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT MIN (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中 grade 字段的最小值</p>\n<p>SELECT MIN(age) FROM student;</p>\n<h4 id=\"4对查询结果进行排序\"><a class=\"markdownIt-Anchor\" href=\"#4对查询结果进行排序\">#</a> ④：对查询结果进行排序</h4>\n<ol>\n<li>\n<ol>\n<li>带 ORDER BY 关键字的排序</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 1，字段名 2，…FROM 表名 ORDER BY 字段名 1 [ASC | DESC], 字段名 2 [ ASC | DESC ]…;</p>\n<p>解释：在该语法中指定的字段名是对查询结果进行排序的依据 **，ASC 表示升序排列，DESC 表示降序排列，默认情况是升序排列 **。</p>\n<p>例题：查询 student 表中的所有记录，并按照 age 字段进行升序排序</p>\n<p>SELECT * FROM student ORDER BY age;</p>\n<ol>\n<li>\n<ol>\n<li>带 GROUP BY 关键字的分组查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT  字段名 1，字段名 2，…FROM 表名 GROUP BY 字段名 1，字段名 2，… [HAVING 条件表达式];</p>\n<p>解释：在对表中数据进行统计的时候，可以使用 GROUP BY 按某个字段或者多个字段进行分组，<strong>字段中值相同的为一组</strong>，如男生分为一组，女生分为一组。</p>\n<p><strong>注意点使用 * 无法查询解决方法：</strong></p>\n<p><strong>1. 关闭 ONLY_FULL_GROUP_BY</strong></p>\n<p>** 查询：**SELECT @@sql_mode;</p>\n<p>** 关闭：**SET SESSION sql_mode=(SELECT REPLACE (@@sql_mode,‘ONLY_FULL_GROUP_BY,’,’’));</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol>\n<li>单独使用 GROUP BY 进行分组</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>解释：单独使用 GROUP BY 关键字，查询的是每个分组中的一条记录。</p>\n<p>例题：查询 student 表中的数据，按照 sex 字段进行分组</p>\n<p>SELECT * FROM student GROUP BY sex;</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol start=\"2\">\n<li>GROUP BY 和聚合函数一起使用</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>解释：GROUP BY 和聚合函数一起使用，可以统计出某个或者某些字段在一个分组中的最大值、最小值、平均值等。</p>\n<p>例题：查询 student 表中按照 age 字段进行分组查询，计算出每组共有多少个人。</p>\n<p>SELECT COUNT(*) ,age FROM student GROUP BY age;</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol start=\"3\">\n<li>GROUP BY 和 HAVING 关键字一起使用</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>解释：关键 HAVING 字和 WHERE 关键字的作用相同，区别在于 HAVING 关键字可以跟聚合函数，而 WHERE 关键字不能。通常 HAVING 关键字都和 GROUP BY 一起使用，用于对分组后的结果进行过滤。</p>\n<p>例题：查询 student 表中按照 sex 字段进行分组查询，查询出 age 字段值之和小于 300 的分组</p>\n<p>SELECT sum(age),sex FROM student GROUP BY sex HAVING SUM(age) &lt; 300;</p>\n<ol>\n<li>\n<ol start=\"4\">\n<li>使用 LIMIT 限制查询结果的数量</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 2，字段名 2，…FROM 表名 LIMIT 记录数 [OFFSET] 记录数   LIMIT Y OFFSET X 向后偏移 x 位。</p>\n<p>解释：在此语法中，LIMIT 后面可以跟两个参数，第一个参数 “OFFSET” 表示偏移量，如果偏移量为 0，则从查询结果的第一条记录开始，偏移量为 1 则从查询结果中的第二条记录开始，以此类推。OFFSET 为可选值，默认值为 0，第二个参数 “记录数” 表示指定返回查询记录的条数。</p>\n<p>例题：查询 tudent 表中的前四条记录</p>\n<p>SELECT * FROM student LIMIT 4;</p>\n<p>例题：查询 student 表中从 0 开始查询 4 条记录</p>\n<p>SELECT * FROM student LIMIT 0,4;</p>\n<h4 id=\"5为表和字段取别名\"><a class=\"markdownIt-Anchor\" href=\"#5为表和字段取别名\">#</a> ⑤：为表和字段取别名</h4>\n<ol>\n<li>\n<ol>\n<li>为表取别名</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * FROM 表名 [AS] 别名；</p>\n<p>解释：在进行查询操作时，如果表名很长使用起来不方便，可以为表取一个别名来代替表的名称。</p>\n<p>例题：为 student 表起一个别名 s，并查询 student 表中 sex 字段值为 “woman” 的记录</p>\n<p>SELECT * FROM student AS s WHERE s.sex=‘woman’;</p>\n<ol>\n<li>\n<ol>\n<li>为字段取别名</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 [AS] 别名 [ , 字段名 [AS] 别名，…]  FROM 表名 ；</p>\n<p>例题：查询 student 表中的所有记录的 name 和 sex 字段值，并为这两个字段起别名 stu_name 和 stu_sex</p>\n<p>SELECT name AS stu_name,sex AS stu_gender FROM student;</p>\n<h4 id=\"6子查询\"><a class=\"markdownIt-Anchor\" href=\"#6子查询\">#</a> ⑥：子查询</h4>\n<p>select name from student where id &lt; (select age from student where name=‘sunce’);</p>\n<h4 id=\"7联合查询union\"><a class=\"markdownIt-Anchor\" href=\"#7联合查询union\">#</a> ⑦：联合查询 (union)</h4>\n<p>select version() union select user();</p>\n<h4 id=\"8利用内置表查询\"><a class=\"markdownIt-Anchor\" href=\"#8利用内置表查询\">#</a> ⑧：利用内置表查询</h4>\n<p>查询数据库：select schema_name from information_schema.schemata;</p>\n<p>查询表名：select table_name from information_schema.tables;</p>\n<p>查询列名：select column_name from information_schema.columns;</p>\n<h2 id=\"3mysql内置库\"><a class=\"markdownIt-Anchor\" href=\"#3mysql内置库\">#</a> 3：MySQL 内置库</h2>\n<p>在 MySQL&gt;5.0 的版本中，把 information_schema 看作是一个自带的内置数据库，确切说是信息数据库。它保存着关于 MySQL 服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967706011-2b5e90b5-ea52-4107-97a0-d99cb6039107.png\" alt=\"img\"></p>\n<p>这里我们重点学习下 schemata、tables、columns 以及相关的字段名。</p>\n<p>schemata 表：这里重点关注 schema_name 这个字段，它存放着所有数据库库名，在 SQL 注入中我们可以使用它来进行来查询所有数据库，然后进行高权限的跨库查询。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967811455-d3098f47-9ed7-4a22-9401-701bf34b31b4.png\" alt=\"img\"></p>\n<p>tables 表：tables 表用来存储所有数据库里的表名等信息，其中 table_schema 列用来存放所有数据库的库名，table_name 用来存放 MySQL 数据库中的所有表名。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967881665-67dbdee8-bac7-4300-91d8-944fab32f5ef.png\" alt=\"img\"></p>\n<p>columns 表：columns 表用来存放数据库里的所有字段信息，其中 table_schema 列用来存放数据库库名，table_name 列用来存放所有数据库里的所有表名，column_name 列用来存放所有的字段 / 内容 (值)。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967944575-c3a0814a-eef7-4f50-a9ad-20eb70b335f7.png\" alt=\"img\"></p>\n<h2 id=\"4sql中tips\"><a class=\"markdownIt-Anchor\" href=\"#4sql中tips\">#</a> 4：SQL 中 tips</h2>\n<h3 id=\"41符号运用\"><a class=\"markdownIt-Anchor\" href=\"#41符号运用\">#</a> 4.1：符号运用</h3>\n<p>=  \t\t\t\t      数据库的赋值符号</p>\n<p>or/||                逻辑或 左右两边有一条成立 那么返回 true 否则 false</p>\n<p>xor  \t\t          逻辑异或。 如果任一操作数为 NULL，则返回 NULL。 对于非 NULL 操作数，如果奇数个操作数非零，则求值为 1，否则返回 0。<strong>（相同为 0，不同为 1，n 个非零元素异或，当 n=even 是，结果为 0，否则为 1。任意与 0 异或结果为 0）</strong></p>\n<p>&amp;&amp;/And  \t\t   逻辑与，并且的意思  左右两边的条件必须同时成立则返回 true 否则返回 false</p>\n<p>NOT/！ \t\t\t逻辑非（取反）</p>\n<p>+、-、*、/  \t  运算符 加减乘除</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929024527-b541b18d-8b6e-43f9-82ab-831a9e5c9923.png\" alt=\"img\"></p>\n<h3 id=\"42常用注释符\"><a class=\"markdownIt-Anchor\" href=\"#42常用注释符\">#</a> 4.2：常用注释符</h3>\n<p><strong>在 MySQL 中，常见的注释符有以下几种：</strong></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>#</li>\n<li>–空格</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>/**/</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>内联注释符及特性：</strong></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>/*！code */</li>\n<li>内联注释符是一种基于注块注释衍生出来的注释风格，它可以用于整个 SQL 语句中，用来执行 SQL 语句，内联注释有个特殊点，和 MySQL 版本息息相关，也就是 **：** 当内联注释中出现小于或等于当前版本号的时候，内联注释符里的子句会被执行，大于时则不会被执行，注意版本的写法，例如，5.5.34，在内联注释中需要写为 50534，版本号第二位加 0，然后注意版本号和内联注释中间不能有空格。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>常见的空格符号：</strong></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>两个空格代替一个空格，用 Tab 代替空格，% a0 = 空格</li>\n<li>%20 (空格)  %09 (tab)  %0a (回车符)  %0b  %0c  %0d  % a0 (空格)  %00  /**/   /<em>!</em>/</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"43内联注释\"><a class=\"markdownIt-Anchor\" href=\"#43内联注释\">#</a> 4.3：内联注释</h3>\n<p>select user()/<em>version()</em>/;</p>\n<h3 id=\"44常见空格表示符号\"><a class=\"markdownIt-Anchor\" href=\"#44常见空格表示符号\">#</a> 4.4：常见空格表示符号</h3>\n<p>两个空格代替一个空格，用 Tab 代替空格，%0a = 空格</p>\n<p>%20 %09 %0a %0b %0c %0d %a0 %00 /**/  /<em>!</em>/</p>\n<h2 id=\"5注入中常见的sql函数\"><a class=\"markdownIt-Anchor\" href=\"#5注入中常见的sql函数\">#</a> 5：注入中常见的 sql 函数</h2>\n<h4 id=\"51rand函数-生成一个0~1之间的随机数\"><a class=\"markdownIt-Anchor\" href=\"#51rand函数-生成一个0~1之间的随机数\">#</a> 5.1：rand () 函数   // 生成一个 0~1 之间的随机数</h4>\n<p>语句：select rand ();</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929148650-eccd1dda-ba29-4049-b816-168c0f64fa09.png\" alt=\"img\"></p>\n<h4 id=\"52floor函数-向下取整\"><a class=\"markdownIt-Anchor\" href=\"#52floor函数-向下取整\">#</a> 5.2：floor () 函数  // 向下取整</h4>\n<p>语句：select floor (rand ()*2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929209234-04ac7c50-08e5-4c88-a27e-8ff3c14ef347.png\" alt=\"img\"></p>\n<h4 id=\"53concat函数-将符合条件的同一列中的不同行数据进行拼接选择好数据库\"><a class=\"markdownIt-Anchor\" href=\"#53concat函数-将符合条件的同一列中的不同行数据进行拼接选择好数据库\">#</a> 5.3：concat () 函数  // 将符合条件的同一列中的不同行数据进行拼接，选择好数据库</h4>\n<p>语句：concat (0x3a,database (),0x3a)；0x3a 为：号（将第一个参数所对应的符号加在数据库名的前面，将第三个参数所对应的符号加在数据库名的后面，1 与 3 的参数可以不同）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929359753-7f7979eb-dba0-48a3-8981-e84695b086fb.png\" alt=\"img\"></p>\n<h4 id=\"54concat_ws函数-第一个参数是其它参数的分隔符-分隔符的位置在连接的两个字符串之间\"><a class=\"markdownIt-Anchor\" href=\"#54concat_ws函数-第一个参数是其它参数的分隔符-分隔符的位置在连接的两个字符串之间\">#</a> 5.4：concat_ws () 函数 // 第一个参数是其它参数的分隔符。分隔符的位置在连接的两个字符串之间。</h4>\n<p>语句：select concat_ws (’!’,database (),‘haha’);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929389387-5572ea2e-3a07-4d95-b94e-fde752a8cb0b.png\" alt=\"img\"></p>\n<h4 id=\"55group_concat\"><a class=\"markdownIt-Anchor\" href=\"#55group_concat\">#</a> 5.5：group_concat</h4>\n<p>语句：select group_concat (username,’~’,password) from dh_admin_user;（将从表中所查询的两个数据之间用 “~” 连接）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624931767147-af72cb2c-ed63-4ec2-a0ea-1256df921083.png\" alt=\"img\"></p>\n<h4 id=\"56extractvalue函数-对xml文档进行查询的函数-语法extractvalue目标xml文档xml路径\"><a class=\"markdownIt-Anchor\" href=\"#56extractvalue函数-对xml文档进行查询的函数-语法extractvalue目标xml文档xml路径\">#</a> 5.6：extractvalue () 函数  // 对 xml 文档进行查询的函数  语法：extractvalue (目标 xml 文档，xml 路径).</h4>\n<p>语句：select extractvalue (‘anything’,concat (’~’,(select user ())));</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929938865-59d56ded-02a0-4bb3-8837-1474b8fc16d2.png\" alt=\"img\"></p>\n<h4 id=\"57sleep函数-对数据库进行延时的函数-语法后面直接跟需要延时的时间即可默认单位为s\"><a class=\"markdownIt-Anchor\" href=\"#57sleep函数-对数据库进行延时的函数-语法后面直接跟需要延时的时间即可默认单位为s\">#</a> 5.7：sleep () 函数  // 对数据库进行延时的函数  语法：后面直接跟需要延时的时间即可，默认单位为 s</h4>\n<p>语句：select sleep (5);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929977076-b73b5d9b-b4db-4684-ae9f-029cc07ce860.png\" alt=\"img\"></p>\n<h4 id=\"58updatexml-语法updatexml目标xml文档xml路径更新的内容\"><a class=\"markdownIt-Anchor\" href=\"#58updatexml-语法updatexml目标xml文档xml路径更新的内容\">#</a> 5.8：updatexml ()  // 语法 updatexml (目标 xml 文档，xml 路径，更新的内容)</h4>\n<p>语句：select  updatexml (‘anything’,concat (’~’,(select version ())),‘xxx’);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930123017-4d848866-90d2-4ef4-bdb7-2a4b53a42e41.png\" alt=\"img\"></p>\n<h4 id=\"59exp函数-此函数返回e自然对数的底的x次方的值用于将e提升为指定数字的幂当传递一个大于709的值时函数exp就会引起一个溢出错误\"><a class=\"markdownIt-Anchor\" href=\"#59exp函数-此函数返回e自然对数的底的x次方的值用于将e提升为指定数字的幂当传递一个大于709的值时函数exp就会引起一个溢出错误\">#</a> 5.9：exp () 函数  // 此函数返回 e (自然对数的底) 的 X 次方的值，用于将 E 提升为指定数字的幂，当传递一个大于 709 的值时，函数 exp () 就会引起一个溢出错误。</h4>\n<p>语句：select exp (2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930667186-832c967d-009b-48a4-99f6-a41dce583328.png\" alt=\"img\"></p>\n<h4 id=\"510length函数-返回参数的长度\"><a class=\"markdownIt-Anchor\" href=\"#510length函数-返回参数的长度\">#</a> 5.10：length () 函数 // 返回参数的长度</h4>\n<p>语句：select length (user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930725308-365094cc-7005-4216-84f5-a5e11ae4980e.png\" alt=\"img\"></p>\n<h4 id=\"511substr函数-从字符串-s-的-start-位置截取长度为-length-的子字符串select-substruser12\"><a class=\"markdownIt-Anchor\" href=\"#511substr函数-从字符串-s-的-start-位置截取长度为-length-的子字符串select-substruser12\">#</a> 5.11：substr () 函数  // 从字符串 s 的 start 位置截取长度为 length 的子字符串，select substr (user (),1,2);</h4>\n<p>语句：select substr (user (),1,2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930882499-d7677dca-e200-4ad1-93c8-8e8a6706222c.png\" alt=\"img\"></p>\n<h4 id=\"512substring函数left-mid函数-同substr\"><a class=\"markdownIt-Anchor\" href=\"#512substring函数left-mid函数-同substr\">#</a> 5.12：substring () 函数，left () ,mid () 函数  // 同 substr</h4>\n<p>语句：select substring (user (),1,2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930922336-8bb88c57-3926-4b59-b0ff-b11e61283af2.png\" alt=\"img\"></p>\n<p>语句：select left (user (),5);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930980586-47f5ecd5-6cdf-4723-a569-2ff1a8f50c0b.png\" alt=\"img\"></p>\n<p>语法：select mid (user (),1);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624931908776-b7abf795-40c1-4823-b882-d4487316f3be.png\" alt=\"img\"></p>\n<h4 id=\"513ascii-ord函数返回第一个字符的ascii码-返回字符的ascii码\"><a class=\"markdownIt-Anchor\" href=\"#513ascii-ord函数返回第一个字符的ascii码-返回字符的ascii码\">#</a> 5.13：ascii ()、ord () 函数返回第一个字符的 ascii 码  // 返回字符的 ascii 码</h4>\n<p>语句：select ascii (mid (user (),1));</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624931962396-a342ce33-66c9-4e78-9630-c843375f6b54.png\" alt=\"img\"></p>\n<p>语句：select ord (mid (user (),1));</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624932124508-2b7890f3-dd57-4e32-8b0f-129615c1e249.png\" alt=\"img\"></p>\n<h4 id=\"514name_const函数-构造一个临时列列名为xx值为xx\"><a class=\"markdownIt-Anchor\" href=\"#514name_const函数-构造一个临时列列名为xx值为xx\">#</a> 5.14：name_const () 函数  // 构造一个临时列，列名为 xx, 值为 xx</h4>\n<p>语句：select name_const (‘name’,15);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624932717111-cbe16c5f-28c6-41e8-80c6-19cff66271ce.png\" alt=\"img\"></p>\n<h4 id=\"515strcmp函数-strcmp函数是string-compare字符串比较的缩写用于比较两个字符串并根据比较结果返回整数-基本形式为strcmpstr1str2若str1str2则返回零若str1str2则返回负数若str1str2则返回正数\"><a class=\"markdownIt-Anchor\" href=\"#515strcmp函数-strcmp函数是string-compare字符串比较的缩写用于比较两个字符串并根据比较结果返回整数-基本形式为strcmpstr1str2若str1str2则返回零若str1str2则返回负数若str1str2则返回正数\">#</a> 5.15：strcmp () 函数  //strcmp 函数是 string compare (字符串比较) 的缩写，用于比较两个字符串并根据比较结果返回整数。基本形式为 strcmp (str1,str2)，若 str1=str2，则返回零；若 str1&lt;str2，则返回负数；若 str1&gt;str2，则返回正数</h4>\n<p>​\t语句：select strcmp (version (),user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624932788443-397f7a1f-e68f-4b50-995f-1c8e51fa357b.png\" alt=\"img\"></p>\n<h4 id=\"516ifabc-如果a为真则返回b否则返回c\"><a class=\"markdownIt-Anchor\" href=\"#516ifabc-如果a为真则返回b否则返回c\">#</a> 5.16：if (a,b,c) // 如果 a 为真，则返回 b，否则返回 c</h4>\n<p>语句：select if (length (database ())=5,1,0);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933121237-653ae586-4cfe-434e-a054-092d81d9457d.png\" alt=\"img\"></p>\n<h4 id=\"517benchmarkcountexpr-重复计算expr表达式count次\"><a class=\"markdownIt-Anchor\" href=\"#517benchmarkcountexpr-重复计算expr表达式count次\">#</a> 5.17：BENCHMARK (count,expr) // 重复计算 expr 表达式 count 次</h4>\n<p>语句：select benchmark (5,1);</p>\n<p>执行表达式 expr count 次，返回的结果都是 0。看返回结果是没有任何意义的，它的意义在于可以得到计算 count 次表达式 expr 后所需要的时间。表达式可以是 sql 语句，这样就可以看出一个 sql 语句写出来后效率怎么样，从而进行一定的优化。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933324230-2a56d0b8-54bd-4f77-bde5-91afa1c75c80.png\" alt=\"img\"></p>\n<h4 id=\"518locate函数-locatesubstrstr返回substr字符串在str中出现的位置没有返回0\"><a class=\"markdownIt-Anchor\" href=\"#518locate函数-locatesubstrstr返回substr字符串在str中出现的位置没有返回0\">#</a> 5.18：locate () 函数  //locate (substr,str) 返回 substr 字符串在 str 中出现的位置，没有返回 0</h4>\n<p>语句：select locate (‘r’,user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933413558-f0cb0ce0-325d-4489-a3c5-bacb1b81b825.png\" alt=\"img\"></p>\n<h4 id=\"519position函数-positionsubstr-in-str返回substr字符串在str中出现的位置没有返回0\"><a class=\"markdownIt-Anchor\" href=\"#519position函数-positionsubstr-in-str返回substr字符串在str中出现的位置没有返回0\">#</a> 5.19：position () 函数 //position (substr in str) 返回 substr 字符串在 str 中出现的位置，没有返回 0</h4>\n<p>语句：select position (‘r’ in user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933444407-7c8aee41-20ee-4317-a24f-942714a2fcce.png\" alt=\"img\"></p>\n<h4 id=\"520instr函数-instrstrsubstr返回substr字符串在str中出现的位置与locate相同只是参数顺序相反\"><a class=\"markdownIt-Anchor\" href=\"#520instr函数-instrstrsubstr返回substr字符串在str中出现的位置与locate相同只是参数顺序相反\">#</a> 5.20：instr () 函数  //instr (str,substr) 返回 substr 字符串在 str 中出现的位置，与 locate 相同，只是参数顺序相反</h4>\n<p>​\t语句：select instr (‘qweasdzXC’,‘w’);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933537950-c57e8210-0b9a-44bf-bac2-35a2a9de07ee.png\" alt=\"img\"></p>\n<h4 id=\"521hexunhex函数\"><a class=\"markdownIt-Anchor\" href=\"#521hexunhex函数\">#</a> 5.21：hex ()&amp;unhex () 函数</h4>\n<p>渗透中有些注入点因为数据库中对数据字段的类型定义，可能不支持 union 来显示某些不同类型的内容，所以使用 hex 对数据进行十六进制编码；</p>\n<p>hex 参数可用于任何参数外面</p>\n<p>select hex(concat(user(),1));</p>\n<p>select hex(user()),hex(database())；</p>\n<p>unhex () 则是用来将十六进制的内容转换回十进制</p>\n<p>select unhex(‘726F6F74406C6F63616C686F737431’);</p>\n<h4 id=\"522load_file函数\"><a class=\"markdownIt-Anchor\" href=\"#522load_file函数\">#</a> 5.22：load_file () 函数</h4>\n<p>load_file () 函数是 MySQL 读取本地 / 远程文件的函数</p>\n<p>前提条件：</p>\n<ul>\n<li>\n<ul>\n<li>必须有权限读取且文件是可读的，低权限无法读取高权限用户文件</li>\n<li>被文件必须在服务器上</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>必须知道文件的绝对路径   可用：select @@basedir;</li>\n<li>读取的文件必须小于设定：max_allowed_packet</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>secure_file_priv 的值不为 NULL   使用 show global variables like ‘% secure%’; 查询是否为空，在 my.ini 设置为：secure_file_priv = ‘’</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>查询结果为：secure_file_priv  NULL 时，表示不允许导入导出；</li>\n<li>查询结果为：secure_file_priv  /xxx/ 时，表示只允许在当前目录导入导出；</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>查询结果为：secure_file_priv（空白）时，表示可以在任意目录进行导入导出；</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Windows：my.ini 中添加 secure_file_priv=</p>\n<p>Linux：/etc/my.cnf 的 [mysqld] 下面添加 local-infile=0</p>\n<p>语法：select load_file (‘D:/phpstudy_pro/Extensions/MySQL5.7.26/my.ini’);</p>\n<h4 id=\"523into-outfile函数\"><a class=\"markdownIt-Anchor\" href=\"#523into-outfile函数\">#</a> 5.23：into outfile () 函数</h4>\n<p>into outfile () 函数是用来导出文件的</p>\n<p>用法示例：select “hello word” into outfile ‘D:\\phpstudy_pro\\WWW\\1.txt’;</p>\n<p>注意：</p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>在 SQL 注入时，我们可以利用 load_file 或者 into outfile () 对文件进行读取，或者写入 Webshell；</li>\n<li>若过滤了单引号，则可以将函数中的字符进行 hex 编码。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2F0dGFjaG1lbnRzL3l1cXVlLzAvMjAyMS9zcWwvMjY5OTc1MC8xNjI3MzU2MzYzMDc1LTgyNTJkNDAwLTlkNjYtNDM1Ny05MjEwLTllYTFjNWNiNmVkMC5zcWw=\">📎SQL 语句详细笔记.sql</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2F0dGFjaG1lbnRzL3l1cXVlLzAvMjAyMS9tZC8yNjk5NzUwLzE2MjczNTYzNjMwNjEtYjNkZjRjN2ItMzEwMi00NjhjLThkYWEtZDkxNmJhYjZjZDVjLm1k\">📎mysql 数据库笔记.md</span></p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/14/css%E6%A0%B7%E5%BC%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E6%9D%83%E9%87%8D/",
            "url": "https://sun-spots.github.io/2022/01/14/css%E6%A0%B7%E5%BC%8F%E3%80%81%E7%BB%A7%E6%89%BF%E3%80%81%E6%9D%83%E9%87%8D/",
            "title": "css样式、继承、权重",
            "date_published": "2022-01-14T11:59:12.000Z",
            "content_html": "<h1 id=\"css样式-继承-与选择器的权重\"><a class=\"markdownIt-Anchor\" href=\"#css样式-继承-与选择器的权重\">#</a> CSS 样式、继承、与选择器的权重</h1>\n<h2 id=\"1-继承\"><a class=\"markdownIt-Anchor\" href=\"#1-继承\">#</a> 1. 继承</h2>\n<p>当我们在为一个标签指定其属性时，同时它的后代元素也会应用到相应的元素，这种现象称为 CSS 的继承。继承是发生在祖先后后代之间的，继承的设计是为了方便我们的开发。（需要为后代的某些元素指定单独的属性时，单独声明即可）利用继承，我们可以将一些通用的样式，统一设置到共同的祖先元素上。这样只需设置一次即可让所有的元素都具有该样式</p>\n<p>注意，并不是所有的样式都会被继承：</p>\n<ul>\n<li>比如背景相关的，布局相关等的这些样式都不会被继承。（列如：背景颜色。背景图片等）</li>\n</ul>\n<p>​       我们可以再 Zeal 手册中，搜索 <code>background-color</code>  属性，可以看到一个定义的表格。其中就说明了其不可被继承性</p>\n<ul>\n<li>常用的 css 不可继承的属性：</li>\n</ul>\n<p>display：规定元素应该生成的框的类型</p>\n<p>text-decoration：规定添加到文本的装饰</p>\n<p>text-shadow：文本阴影效果</p>\n<p>white-space：空白符的处理</p>\n<p>盒子模型的属性：width、height、margin 、border、padding</p>\n<p>背景属性：background</p>\n<p>定位属性：float、clear、position、top、right、bottom、left、min-width、min-height、max-width、max-height、overflow、clip、z-index</p>\n<h2 id=\"2-选择器的权重\"><a class=\"markdownIt-Anchor\" href=\"#2-选择器的权重\">#</a> 2. 选择器的权重</h2>\n<p>当我们通过不同的选择器，选中相同的元素，并且为相同的样式设置不同的值时，此时就发生了样式的冲突。</p>\n<p><strong>权重：!important &gt; 行内样式 &gt; ID 选择器 &gt; 类选择器 &gt; 标签 &gt; 通配符 &gt; 继承 &gt; 浏览器默认属性。</strong></p>\n<p>发生样式冲突时，应用哪个样式由选择器的权重（优先级）决定选择器的权重</p>\n<table>\n<thead>\n<tr>\n<th>选择器</th>\n<th>权重</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>内联样式</td>\n<td>1, 0, 0, 0</td>\n</tr>\n<tr>\n<td>ID 选择器</td>\n<td>0, 1, 0, 0</td>\n</tr>\n<tr>\n<td>类和伪类选择器</td>\n<td>0, 0, 1, 0</td>\n</tr>\n<tr>\n<td>元素选择器</td>\n<td>0, 0, 0, 1</td>\n</tr>\n<tr>\n<td>通配选择器</td>\n<td>0, 0, 0, 0</td>\n</tr>\n<tr>\n<td>继承的样式</td>\n<td>没有优先级</td>\n</tr>\n</tbody>\n</table>\n<p>比较优先级时，需要将所有的选择器的优先级进行相加计算，最后优先级越高，则越优先显示（<strong>分组选择器是单独计算的，组合选择器相加，相加的结果不会超过它前面的选择器的优先级）</strong></p>\n<p><strong>选择器的累加不会超过其最大的数量级，类选择器再高也不会超过 ID 选择器</strong>如果优先级计算后相同，此时则优先使用靠下的样式</p>\n<p>可以在某一个样式的后边添加 <code>!important</code> ，则此时该样式会获取到最高的优先级，甚至超过内联样式，注意：在开发中一定要慎用！</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\">    #box1&#123;</span><br><span class=\"line\">        background-color: orange;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    div&#123;</span><br><span class=\"line\">        background-color: yellow;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">    .red&#123;</span><br><span class=\"line\">        background-color: red;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br><span class=\"line\"></span><br><span class=\"line\">&lt;div id=&quot;box1&quot; class=&quot;red&quot; style=&quot;background-color: skyblue;&quot;&gt;选择器的权重&lt;/div&gt;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-长度单位\"><a class=\"markdownIt-Anchor\" href=\"#3-长度单位\">#</a> 3. 长度单位</h2>\n<h3 id=\"像素\"><a class=\"markdownIt-Anchor\" href=\"#像素\">#</a> 像素</h3>\n<p>我们先来看下某度上关于像素（pixel, 缩写 px）的介绍</p>\n<p>像素是指由图像的小方格组成的，这些小方块都有一个明确的位置和被分配的色彩数值，小方格颜色和位置就决定该图像所呈现出来的样子。</p>\n<p>可以将像素视为整个图像中不可分割的单位或者是元素。不可分割的意思是它不能够再切割成更小单位抑或是元素，它是以一个单一颜色的小格存在 [1] 。每一个点阵图像包含了一定量的像素，这些像素决定图像在屏幕上所呈现的大小。</p>\n<p>也就是说，显示器屏幕实际上是由一个一个的小点（单位色块，即像素）构成的</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/f14c7aaed2f7e7f5.gif\" alt=\"\"></p>\n<p><strong>问题 1：像素和分辨率有什么关系呢？</strong></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">分辨率 = 水平方向像素 * 垂直方向像素</span><br></pre></td></tr></table></figure>\n<h4 id=\"屏幕分辨率\"><a class=\"markdownIt-Anchor\" href=\"#屏幕分辨率\">#</a> 屏幕分辨率</h4>\n<p>例如，屏幕分辨率是 1920×1080，则该屏幕水平方向有 1920 个像素，垂直方向有 1080 个像素</p>\n<ul>\n<li>\n<p>不同屏幕的像素大小是不同的，也就是说像素大小不像我们现行的长度单位（如米 /m）那样有着固定的国际标准</p>\n</li>\n<li>\n<p>所以同样的像素大小在不同的设备上显示效果是不一样的，像素越小的屏幕显示的效果越清晰</p>\n</li>\n</ul>\n<h4 id=\"图像分辨率\"><a class=\"markdownIt-Anchor\" href=\"#图像分辨率\">#</a> 图像分辨率</h4>\n<p>例如，一张图片分辨率是 300x200，则该图片在屏幕上按 1:1 缩放时，水平方向有 300 个像素，垂直方向有 200 个像素点</p>\n<ul>\n<li>\n<p>图片分辨率越高，1:1 缩放时面积越大</p>\n</li>\n<li>\n<p>图片分辨率越低，1:1 缩放时面积越小</p>\n</li>\n</ul>\n<p>同一台设备像素大小是不变的，那把图片放大超过 100% 时占的像素点就多了，但是图像也会变得模糊</p>\n<p><strong>问题 2：屏幕实现图片放大或缩小的原理是什么呢？</strong></p>\n<ul>\n<li>\n<p>其实是设备通过算法对图像进行了像素补足；</p>\n</li>\n<li>\n<p>同理，把图片按小于 100% 缩放时，也是通过算法将图片像素减少</p>\n</li>\n</ul>\n<h3 id=\"百分比\"><a class=\"markdownIt-Anchor\" href=\"#百分比\">#</a> 百分比</h3>\n<p>也可以将属性值设置为相对于其父元素属性的百分比，此时子元素的大小相对于其父元素的属性发生相对的变化（暂且先理解成父元素，后面会详细说）的改变而改变</p>\n<h3 id=\"em\"><a class=\"markdownIt-Anchor\" href=\"#em\">#</a> em</h3>\n<p>em 是相对于元素的字体大小来计算的， <code>1em = &lt;self&gt;.font-size * 10</code> ，也就说 em 值会根据元素本身的字体大小的改变而改变（此处的字体大小为自己标签或其父标签所指定的字体的大小）</p>\n<h3 id=\"rem\"><a class=\"markdownIt-Anchor\" href=\"#rem\">#</a> rem</h3>\n<p>rem 是相对于根元素的字体大小来计算， <code>1em = &lt;root&gt;.font-size * 10</code> ，也就说 em 值会根据根元素的字体大小的改变而改变（此处的字体大小整个页面的字体【或者是<html>所指定的】的字体的大小）</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br><span class=\"line\">27</span><br><span class=\"line\">28</span><br><span class=\"line\">29</span><br><span class=\"line\">30</span><br><span class=\"line\">31</span><br><span class=\"line\">32</span><br><span class=\"line\">33</span><br><span class=\"line\">34</span><br><span class=\"line\">35</span><br><span class=\"line\">36</span><br><span class=\"line\">37</span><br><span class=\"line\">38</span><br><span class=\"line\">39</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">style</span>&gt;</span><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">    * &#123;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">24px</span>;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.box1</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">width</span>: <span class=\"number\">200px</span>; </span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">height</span>: <span class=\"number\">200px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">background-color</span>: orange;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.box2</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">width</span>: <span class=\"number\">50%</span>; </span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">height</span>: <span class=\"number\">50%</span>; </span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">background-color</span>: aqua;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.box3</span>&#123;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">width</span>: <span class=\"number\">10em</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">height</span>: <span class=\"number\">10em</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">background-color</span>: greenyellow;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\">    </span></span><br><span class=\"line\"><span class=\"css\">    <span class=\"selector-class\">.box4</span> &#123;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">width</span>: <span class=\"number\">10rem</span>; <span class=\"comment\">/*当时用rem时，不管怎么改本元素的font-size都是不会变的。需要定义root元素的font-size才可以 */</span></span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">height</span>: <span class=\"number\">10rem</span>;</span></span><br><span class=\"line\"><span class=\"css\">        <span class=\"attribute\">background-color</span>: red;</span></span><br><span class=\"line\"><span class=\"css\">    &#125;</span></span><br><span class=\"line\"><span class=\"css\"></span><span class=\"tag\">&lt;/<span class=\"name\">style</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box1&quot;</span>&gt;</span></span><br><span class=\"line\">    <span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box2&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box3&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">div</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;box4&quot;</span>&gt;</span><span class=\"tag\">&lt;/<span class=\"name\">div</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<img data-src=\"https://s3.bmp.ovh/imgs/2022/01/54054df3a36b7ed2.png\" style=\"zoom:50%;\" />\n<h2 id=\"4-颜色单位\"><a class=\"markdownIt-Anchor\" href=\"#4-颜色单位\">#</a> 4. 颜色单位</h2>\n<p><strong>css 中的颜色名称</strong></p>\n<p>我们生活中会使用各种颜色名称去描述看到的各种颜色，在 css 中当然也可以直接使用颜色名来设置颜色，比如：red、orange、yellow、blue、green 等等其中有 140 种颜色名称是所有浏览器都支持的，但是有个问题，就是在 css 中直接使用颜色名非常不方便</p>\n<p>而且世界上有无数种颜色，人眼也不能分辨出所有颜色，更不可能对每一种颜色都进行命名而且就算能够有办法对那么多种颜色进行命名，我们也不可能一个一个的去记或去查这种对应关系。试问下，有多少人看一眼某个颜色，就能够在调色板上快速准确的定位那个颜色或者直接叫出那种颜色的名称？这显然不现实，至少现在如此另外，那么 css 中还可以怎么调和出更多的颜色呢？</p>\n<p>在介绍 css 的颜色单位之前，我们首先来了解下光的三原色，因为 css 的颜色就是按照光的三原色来调和的发现光的色散奥妙之后，牛顿开始推论：既然白光能被分解及合成，那么这七种色光是否也可以被分解或合成。于是，纷繁的实验和不停的计算充斥着他日后的生活。一段时间后，牛顿通过计算，得出了一个结论：七种色光中只有红、绿、蓝三种色光无法被分解，于是也就谈不到合成了。而其他四种色光均可由这三种色光以不同比例相合而成。于是红、绿、蓝则被称为 “三原色光” 或 “光的三原色”（注意，这有别于我们熟知的三原色 “红黄蓝”）。牛顿通过计算得出上述结论后，未能完成实验，便与世长辞。这里再科普下光的三原色和颜料的三原色的区别</p>\n<p><strong>颜料三原色</strong>（CMYK）：品红、黄、青 (天蓝)。色彩三原色可以混合出所有颜料的颜色，同时相加为黑色，黑白灰属于无色系。</p>\n<p><strong>光学三原色</strong>（RGB）：红、绿、蓝 (靛蓝)。光学三原色混合后，组成显示屏显示颜色，三原色同时相加为白色，白色属于无色系（黑白灰）中的一种。</p>\n<p>那看到这里有人会问了，<strong>css 为什么不按照颜料的三原色来调和呢？</strong></p>\n<p>因为道理很简单，聪明的小伙伴应该已经知道答案了。上面我们也说过，屏幕是由像素组成的，每个像素就是一个单位色块。而这个单位色块之所以能显示颜色，就是靠发光来实现的既然光是由三种色光组成的，任何一种颜色均可以由这三种颜色调和出来的，那么为什么我们不能用三原色来表示一种颜色呢？</p>\n<h3 id=\"rgb值\"><a class=\"markdownIt-Anchor\" href=\"#rgb值\">#</a> RGB 值</h3>\n<p>RGB 通过三原色的不同浓度来调配出不同的颜色</p>\n<ul>\n<li>\n<p>语法： <code>RGB(red, green, blue)</code></p>\n</li>\n<li>\n<p>范围：每一种颜色的范围在 0 ~ 255（0% ~ 100%）之间</p>\n</li>\n</ul>\n<h3 id=\"rgba\"><a class=\"markdownIt-Anchor\" href=\"#rgba\">#</a> RGBA</h3>\n<p>就是在 rgb 的基础上增加了一个 a 表示不透明度</p>\n<ul>\n<li>\n<p><code>1</code>  表示完全不透明</p>\n</li>\n<li>\n<p><code>0</code>  表示完全透明</p>\n</li>\n<li>\n<p><code>.5</code>  半透明</p>\n</li>\n</ul>\n<h3 id=\"十六进制的rgb值\"><a class=\"markdownIt-Anchor\" href=\"#十六进制的rgb值\">#</a> 十六进制的 RGB 值</h3>\n<p>就是 RGB 值的十六进制写法</p>\n<ul>\n<li>\n<p>语法： <code>#RRGGBB</code></p>\n</li>\n<li>\n<p>范围：每一种颜色的范围在 00 ~ ff 之间</p>\n</li>\n</ul>\n<p>如果颜色两位两位重复可以进行简写，如 <code>#aabbcc</code>  =&gt;  <code>#abc</code></p>\n<p>在 vscode 中，我们可以看到其会对颜色进行预览展示。并且将鼠标移至 color 处悬浮，会智能的弹出一个 rgb 调色板，方便我们进行调色</p>\n<p>如果我们看到某种颜色，非常喜欢，那么在哪里才能买得到呢？ 怎么知道这个颜色的 rgb 值呢？</p>\n<p>我们可以直接搜索黄色，哦不是，取色器！有些录制软件也会自带取色功能，如 FastStone Capture</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/e68cd06581d58c87.png\" alt=\"\"></p>\n<p>下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9mYXN0c3RvbmUtY2FwdHVyZS5lbi5zb2Z0b25pYy5jb20v\">FastStone Capture - Download</span></p>\n<p>笔记来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhKNDExWDdVZA==\">尚硅谷 Web 前端 HTML5&amp;CSS3 初学者零基础入门全套完整版</span></p>\n<p>​\t\t\t\t\t<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL3UyMTE5NTE4My9oZmNhbWcvc2djZzU0\">https://www.yuque.com/u21195183/hfcamg/sgcg54</span></p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/13/web%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/",
            "url": "https://sun-spots.github.io/2022/01/13/web%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/",
            "title": "web站点搭建",
            "date_published": "2022-01-13T15:05:00.000Z",
            "content_html": "<h1 id=\"web站点搭建\"><a class=\"markdownIt-Anchor\" href=\"#web站点搭建\">#</a> web 站点搭建</h1>\n<h3 id=\"一基础知识\"><a class=\"markdownIt-Anchor\" href=\"#一基础知识\">#</a> 一：基础知识</h3>\n<p><strong>1. 网站</strong>：指在因特网上根据一定的规则，使用 HTML、CSS、jsp 等脚本语言与工具制作的用于展示特定内容相关网页的集合。简单地说，网站是一种沟通工具，人们可以通过网站来发布自己想要公开的资讯，或者利用网站来提供相关的网络服务。人们可以通过网页浏览器来访问网站，获取自己需要的资讯或者享受网络服务。</p>\n<p><strong>网站的分类</strong>：</p>\n<ol>\n<li>\n<ul>\n<li>\n<p>根据网站所用编程语言分类：例如 asp 网站、php 网站、jsp 网站、Asp. net 网站等；</p>\n</li>\n<li>\n<p>根据网站的用途分类：例如门户网站（综合网站）、行业网站、娱乐网站等；</p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>根据网站的功能分类：例如单一网站（企业网站）、多功能网站（网络商城）等等。</p>\n</li>\n<li>\n<p>根据网站的持有者分类：例如个人网站、商业网站、政府网站、教育网站等。</p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>根据网站的商业目的分类：营利型网站（行业网站、论坛）、非营利性型网站（企业网站、政府网站、教育网站）。</li>\n</ul>\n</li>\n</ol>\n<p>适合类型：ASP（个人）、PHP（企业，门户，商务）、<span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQ=\">ASP.NET</span>（企业，门户，商务）<br>\nPHP（不适合大型）&gt;NET（比较适合中、大型）<br>\nJSP&gt;PHP &gt; <span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQ=\">ASP.NET</span>，比如安全高、安全中、安全低。</p>\n<p><strong>2. 域名</strong>：简称域名、网域，是由一串用点分隔的名字组成的 Internet 上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）。PS: 域名会被解析到一个唯一的公网 IP 地址上，当然通过 IP 也是可以去对网站进行访问。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623390545612-7c2ca0fe-6815-4c3c-b47f-d296827dc125.png\" alt=\"img\"></p>\n<p><strong>3. 空间</strong>：</p>\n<p>常见网站空间：虚拟主机（虚拟空间），独立服务器，云主机，VPS。</p>\n<p>虚拟主机：是在网络服务器上划分出一定的磁盘空间供用户放置站点、应用组件等；提供必要的站点功能、数据存放和传输功能。所谓虚拟主机，也叫 “网站空间”，就是把一台运行在互联网上的服务器划分成多个 “虚拟” 的服务器。每一个虚拟主机都具有独立的域名和完整的 Internet 服务器（支持 WWW、FTP、E-mail 等）功能。</p>\n<p>云主机 /vps: 云主机又称为云计算服务器或云服务器，是云计算服务体系中的一项主机产品。云 z 主机是一种类似 VPS 服务器的虚拟化技术。也可以理解是 VPS 的升级版，与 VPS 还有所不同是，它是在一组集群服务器上划分出来的多个类似独立主机的部分。</p>\n<p><strong>4.web 网站的四大组成部分</strong>：服务器、数据库、web 容器（中间件）、脚本语言</p>\n<p><strong>5.web 容器简介</strong></p>\n<p>web 容器就是一种服务程序，在服务器中一个端口就对应一个提供相应服务的程序（比如 Apache 默认的端口为 80），而这个程序就是处理服务器从客户端收到的请求，如 Java 中的 Tomcat 容器，ASP 的 IIS 都是这样的容器。一个服务器可以有多个容器。</p>\n<p>常见的 WEB 容器：IIS、Apache、Nginx、Tomcat、Jboss、WebLogic</p>\n<p><strong>6. 脚本语言介绍</strong></p>\n<p>脚本语言是一种 web 端的网页源代码。它又分为静态和动态网站。</p>\n<p>静态：不与数据库发生交互，包括 html、html5、shtml。</p>\n<p>动态：与数据库进行交互来获取、存储数据，包括 asp、aspx、php、jsp 等。</p>\n<p><strong>7. 数据库介绍</strong></p>\n<p>数据库是存放数据的仓库。它的存储空间很大，可以存放百万条、千万条、上亿条数据。但是数据库并不是随意地将数据进行存放，是有一定的规则的，否则查询的效率会很低。</p>\n<p>常见的数据库：</p>\n<p>Access 数据库：小型数据库，性能低，安全性低，无需登录账号密码。</p>\n<p>Sqlserver 数据库：轻量级中小型，也叫 mssql 数据库，微软的数据库，需要登录账户密码，最高权限管理员名称：sa。</p>\n<p>Mysql 数据库：轻量级，需要账户密码，被 Oracle 收购了，最高权限\t管理员名称：root。</p>\n<p>Oracle 数据库：属于甲骨文公司，大型数据库，一个数据库可以建立很多数据库，最高权限管理员名称： sys。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mirsoft ACCESS </span><br><span class=\"line\">Mirsoft SQLServer </span><br><span class=\"line\">MySQL（ORACLE）</span><br></pre></td></tr></table></figure>\n<p><strong>8. 服务器介绍</strong></p>\n<p><strong>8.1 简介</strong>：服务器是一种高性能计算机，某方面其性能是普通计算机的几倍甚至更多，它作为网络节点，提供文件存储等服务，供客户端数据等服务，是互联网的灵魂。</p>\n<p><strong>8.2 常见的服务器：</strong></p>\n<p>Windows：</p>\n<p>Windows server2003\tIIS6.0</p>\n<p>Windows server2008\tIIS7.0</p>\n<p>Windows server2012\tIIS8.0</p>\n<p>Windows server2016\tIIS8.5</p>\n<p>Windows10\t\t\tIIS10.0</p>\n<p>Linux：</p>\n<p>Ubuntu</p>\n<p>Red Hat Enterprise Linux (RHEL)</p>\n<p>SUSE Linux Enterprise Server</p>\n<p>CentOS (Community OS) Linux Server</p>\n<p>Debian</p>\n<p><strong>8.3web 常见的网站搭建架构：</strong><br>\nWindows + IIS + Access + asp/aspx<br>\nWindows + IIS + SQLserver + asp/aspx<br>\nWindows + APache + Mysql + PHP<br>\nWindows + Nginx + Mysql/ORACLE + JSP</p>\n<p>Linux + Apache + Mysql + PHP  (LAMP)<br>\nLinux + Nginx + Mysql + PHP (LNMP)<br>\nLinux + Apache + Mysql + JSP<br>\nLinux + Nginx + Oracle + JSP<br>\nLinux + Tomcat、Jboss、WebLogic + MySQL/Oracle + Jsp</p>\n<h3 id=\"二web服务器搭建\"><a class=\"markdownIt-Anchor\" href=\"#二web服务器搭建\">#</a> 二：web 服务器搭建</h3>\n<p>window serivce2016：</p>\n<ul>\n<li>\n<p>在服务器管理器界面点击 “添加角色与功能”</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114223535287.png\" alt=\"image-20220114223535287\"></p>\n</li>\n<li>\n<p>安装类型与服务器选择均默认，服务器角色选择 -----web 服务器</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114223741914.png\" alt=\"image-20220114223741914\"></p>\n</li>\n<li>\n<p>功能选择 -----IIS 可承载 web 核心</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114223915724.png\" alt=\"image-20220114223915724\"></p>\n</li>\n<li>\n<p>在此页面下找到以下选项选中即可</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224044961.png\" alt=\"image-20220114224044961\"></p>\n</li>\n<li>\n<p>打开管理工具，选择 internet information service</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224406509.png\" alt=\"image-20220114224406509\"></p>\n</li>\n<li>\n<p>选择网站右键添加网站</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224518459.png\" alt=\"image-20220114224518459\"></p>\n</li>\n<li>\n<p>填写网络名称、物理路径，将应用程序池改为图中值并选择 ip</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114224858216.png\" alt=\"image-20220114224858216\"></p>\n</li>\n<li>\n<p>右键点击创建的网站，重新启动即可</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114225040107.png\" alt=\"image-20220114225040107\"></p>\n<h3 id=\"3常见的错误\"><a class=\"markdownIt-Anchor\" href=\"#3常见的错误\">#</a> 3 常见的错误</h3>\n<p>3.1 若浏览器中出现文件夹中所有的文件，而没有出现初始页面，则此时应该在默认文档中加入网站初始页面的文件</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114225827199.png\" alt=\"image-20220114225827199\"><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114225854186.png\" alt=\"image-20220114225854186\"></p>\n<p>3.2 若浏览器中出现 403 错误，此时文件目录的访问权限出现问题，修改目录浏览，启用即可</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114230059829.png\" alt=\"image-20220114230059829\"><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114230207160.png\" alt=\"image-20220114230207160\"></p>\n<p>3.3 若浏览器中出现数据库文件出错相关的问题。可以尝试将应用程序池中的 Class.Net 中的高级设置中的启用 32 位应用程序设置为 true</p>\n<p><img data-src=\"C:%5CUsers%5Criyun%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20220114230341805.png\" alt=\"image-20220114230341805\"></p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/13/CSS%E8%AF%AD%E6%B3%95%E4%B8%8E%E9%80%89%E6%8B%A9%E5%99%A8/",
            "url": "https://sun-spots.github.io/2022/01/13/CSS%E8%AF%AD%E6%B3%95%E4%B8%8E%E9%80%89%E6%8B%A9%E5%99%A8/",
            "title": "CSS语法与选择器",
            "date_published": "2022-01-13T11:59:12.000Z",
            "content_html": "<p>笔记来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYmlsaWJpbGkuY29tL3ZpZGVvL0JWMVhKNDExWDdVZA==\">尚硅谷Web前端HTML5&amp;CSS3初学者零基础入门全套完整版</span></p>\n<p>​                    <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL3UyMTE5NTE4My9oZmNhbWcvY29hbG00\">https://www.yuque.com/u21195183/hfcamg/coalm4</span></p>\n<h1 id=\"css语法与选择器\"><a class=\"markdownIt-Anchor\" href=\"#css语法与选择器\"></a> CSS语法与选择器</h1>\n<h2 id=\"1-css简介\"><a class=\"markdownIt-Anchor\" href=\"#1-css简介\"></a> 1. CSS简介</h2>\n<h3 id=\"层叠样式表\"><a class=\"markdownIt-Anchor\" href=\"#层叠样式表\"></a> 层叠样式表</h3>\n<p>网页实际上是一个多层的结构，通过CSS可以分别为网页的每一个层来设置样式，而最终我们能看到只是网页的最上边一层</p>\n<p>总之一句话，CSS用来设置网页中元素的样式</p>\n<p>使用CSS来修改元素样式的方式大致可以分为3种</p>\n<h3 id=\"内联样式行内样式\"><a class=\"markdownIt-Anchor\" href=\"#内联样式行内样式\"></a> 内联样式（行内样式）</h3>\n<p>在标签内部通过<code>style</code>属性来设置元素的样式</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">style</span>=<span class=\"string\">&quot;color:red;font-size:60px;&quot;</span>&gt;</span>内联样式（行内样式）<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>问题：使用内联样式，样式只能对一个标签生效。如果希望影响到多个元素，必须在每一个元素中都复制一遍；并且当样式发生变化时，我们必须要一个一个的修改，非常的不方便。（注意：开发时绝对不要使用内联样式）</p>\n<h3 id=\"内部样式表\"><a class=\"markdownIt-Anchor\" href=\"#内部样式表\"></a> 内部样式表</h3>\n<p>将样式编写到<code>head</code>中的<code>style</code>标签里然后通过css的选择器来选中元素并为其设置各种样式可以同时为多个标签设置样式，并且修改时只需要修改一处即可。内部样式表更加方便对样式进行复用</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;style&gt;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>:green; </span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>:<span class=\"number\">50px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\">&lt;/style&gt;</span><br></pre></td></tr></table></figure>\n<p>问题：我们的内部样式表只能对一个网页起作用，它里边的样式不能跨页面进行复用</p>\n<h3 id=\"外部样式表\"><a class=\"markdownIt-Anchor\" href=\"#外部样式表\"></a> 外部样式表</h3>\n<p>可以将css样式编写到一个外部的CSS文件中，然后通过<code>link</code>标签来引入外部的CSS文件</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">link</span> <span class=\"attr\">rel</span>=<span class=\"string\">&quot;stylesheet&quot;</span> <span class=\"attr\">href</span>=<span class=\"string\">&quot;./style.css&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<p>外部样式表需要通过<code>link</code>标签进行引入，意味着只要想使用这些样式的网页都可以对其进行引用使样式，可以在不同页面之间进行复用</p>\n<p>将样式编写到外部的CSS文件中，可以使用到浏览器的缓存机制，从而加快网页的加载速度，提高用户的体验。</p>\n<h2 id=\"2-css基本语法\"><a class=\"markdownIt-Anchor\" href=\"#2-css基本语法\"></a> 2. CSS基本语法</h2>\n<h4 id=\"css中的注释\"><a class=\"markdownIt-Anchor\" href=\"#css中的注释\"></a> css中的注释</h4>\n<p>只能使用<code>/*</code>注释内容<code>*/</code>包裹。可以同时注释多行与单行注释。</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* css中的单行注释 */</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* </span></span><br><span class=\"line\"><span class=\"comment\">css中的多行注释</span></span><br><span class=\"line\"><span class=\"comment\">css中的多行注释</span></span><br><span class=\"line\"><span class=\"comment\">*/</span></span><br></pre></td></tr></table></figure>\n<h4 id=\"html中的注释\"><a class=\"markdownIt-Anchor\" href=\"#html中的注释\"></a> html中的注释</h4>\n<p>只能使用<code>&lt;!--注释内容</code>–&gt;包裹。可以同时注释多行与单行注释。</p>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">&lt;!-- html中的单行注释 --&gt;</span></span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">&lt;!-- </span></span><br><span class=\"line\"><span class=\"comment\">html中的多行注释</span></span><br><span class=\"line\"><span class=\"comment\">html中的多行注释</span></span><br><span class=\"line\"><span class=\"comment\">--&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"基本语法\"><a class=\"markdownIt-Anchor\" href=\"#基本语法\"></a> 基本语法</h3>\n<p>CSS的基本语法是由选择器和声明块组成。形如：</p>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">P</span>&#123;</span><br><span class=\"line\">\t<span class=\"attribute\">color</span>：red；</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p>在每一条的结束后用“；”隔开每一条语句。</p>\n<h4 id=\"选择器\"><a class=\"markdownIt-Anchor\" href=\"#选择器\"></a> 选择器</h4>\n<p>通过选择器可以选中页面中的指定元素</p>\n<ul>\n<li>比如<code>p</code>的作用就是选中页面中所有的<code>p</code>元素声明块</li>\n</ul>\n<h4 id=\"声明块\"><a class=\"markdownIt-Anchor\" href=\"#声明块\"></a> 声明块</h4>\n<p>通过声明块来指定要为元素设置的样式</p>\n<ul>\n<li>\n<p>声明块由一个一个的声明组成，声明是一个名值对结构</p>\n</li>\n<li>\n<p>一个样式名对应一个样式值，名和值之间以<code>:</code>连接，以<code>;</code>结尾</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"3-css选择器\"><a class=\"markdownIt-Anchor\" href=\"#3-css选择器\"></a> 3. CSS选择器</h2>\n<h3 id=\"通配选择器universal-selector\"><a class=\"markdownIt-Anchor\" href=\"#通配选择器universal-selector\"></a> 通配选择器（Universal selector）</h3>\n<ul>\n<li>\n<p>作用：选中html页面中出现的所有的标签。</p>\n</li>\n<li>\n<p>语法：<code>*&#123;&#125;</code></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">*&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"元素选择器type-selector\"><a class=\"markdownIt-Anchor\" href=\"#元素选择器type-selector\"></a> 元素选择器（Type selector）</h3>\n<p>也叫类型选择器、标签选择器</p>\n<ul>\n<li>\n<p>作用：选中html页面中的一种标签，无论标签的属性有何不同，只要标签名相同即被选中</p>\n</li>\n<li>\n<p>语法：<code>elementname&#123;&#125;</code></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red; </span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">h1</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"类选择器class-selector\"><a class=\"markdownIt-Anchor\" href=\"#类选择器class-selector\"></a> 类选择器（Class selector）</h3>\n<ul>\n<li>\n<p>作用：选中html页面中class属性值相同的所有的标签</p>\n</li>\n<li>\n<p>语法：<code>.classname</code>{}</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-class\">.blue</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-class\">.size</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">20px</span>;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">class`是一个标签的属性，它和`id`类似，不同的是`class</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p>可以重复使用，</p>\n</li>\n<li>\n<p>可以通过<code>class</code>属性来为元素分组，</p>\n</li>\n<li>\n<p>可以同时为一个元素指定多个<code>class</code>属性</p>\n</li>\n</ul>\n<figure class=\"highlight html\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"tag\">&lt;<span class=\"name\">p</span> <span class=\"attr\">class</span>=<span class=\"string\">&quot;blue size&quot;</span>&gt;</span> 类选择器（Class selector）<span class=\"tag\">&lt;/<span class=\"name\">p</span>&gt;</span></span><br></pre></td></tr></table></figure>\n<h3 id=\"id选择器id-selector\"><a class=\"markdownIt-Anchor\" href=\"#id选择器id-selector\"></a> ID选择器（ID selector）</h3>\n<ul>\n<li>\n<p>作用：根据元素的<code>id</code>属性值选中一个元素，<strong>一个html页面中只能由一个id值，虽然重复的id值在css中也可以起作用，但是不可使用，以防在以后的开发中报错！</strong></p>\n</li>\n<li>\n<p>语法：<code>#idname&#123;&#125;</code></p>\n</li>\n<li>\n<p>例子：<code>#box&#123;&#125;</code> <code>#red&#123;&#125;</code></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-id\">#red</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"属性选择器attribute-selector\"><a class=\"markdownIt-Anchor\" href=\"#属性选择器attribute-selector\"></a> 属性选择器（Attribute selector）</h3>\n<ul>\n<li>\n<p>作用：根据元素的属性值选中一组元素</p>\n</li>\n<li>\n<p>语法1：<code>[属性名]</code> 选择含有指定属性的元素</p>\n</li>\n<li>\n<p>语法2：<code>[属性名=属性值]</code> 选择含有指定属性和属性值的元素</p>\n</li>\n<li>\n<p>语法3：<code>[属性名^=属性值]</code> 选择属性值以指定值开头的元素</p>\n</li>\n<li>\n<p>语法4：<code>[属性名$=属性值]</code> 选择属性值以指定值结尾的元素</p>\n</li>\n<li>\n<p>语法5：<code>[属性名*=属性值]</code> 选择属性值中含有某值的元素</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[title]</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[title=e]</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[title^=e]</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[title$=e]</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-attr\">[title*=e]</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"4-复合选择器\"><a class=\"markdownIt-Anchor\" href=\"#4-复合选择器\"></a> 4. 复合选择器</h2>\n<h3 id=\"交集选择器\"><a class=\"markdownIt-Anchor\" href=\"#交集选择器\"></a> 交集选择器</h3>\n<ul>\n<li>\n<p>作用：选中同时复合多个条件的元素</p>\n</li>\n<li>\n<p>语法：<code>选择器1选择器2选择器3选择器n&#123;&#125;</code></p>\n</li>\n<li>\n<p>注意点：交集选择器中如果有元素选择器，必须使用元素选择器开头</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.red</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-class\">.a</span><span class=\"selector-class\">.b</span><span class=\"selector-class\">.c</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"并集选择器选择器分组\"><a class=\"markdownIt-Anchor\" href=\"#并集选择器选择器分组\"></a> 并集选择器（选择器分组）</h3>\n<ul>\n<li>\n<p>作用：同时选择多个选择器对应的元素</p>\n</li>\n<li>\n<p>语法：<code>选择器1,选择器2,选择器3,选择器n&#123;&#125;</code></p>\n</li>\n<li>\n<p>例子：<code>#b1,.p1,h1,span,div.red&#123;&#125;</code></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">h1</span>,<span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"5-关系选择器\"><a class=\"markdownIt-Anchor\" href=\"#5-关系选择器\"></a> 5. 关系选择器</h2>\n<ul>\n<li>\n<p>父元素：直接包含子元素的元素叫做父元素</p>\n</li>\n<li>\n<p>子元素：直接被父元素包含的元素是子元素</p>\n</li>\n<li>\n<p>祖先元素：直接或间接包含后代元素的元素叫做祖先元素；一个元素的父元素也是它的祖先元素</p>\n</li>\n<li>\n<p>后代元素：直接或间接被祖先元素包含的元素叫做后代元素；子元素也是后代元素</p>\n</li>\n<li>\n<p>兄弟元素：拥有相同父元素的元素是兄弟元素</p>\n</li>\n</ul>\n<h3 id=\"子元素选择器child-combinator\"><a class=\"markdownIt-Anchor\" href=\"#子元素选择器child-combinator\"></a> 子元素选择器（Child combinator）</h3>\n<ul>\n<li>\n<p>作用：选中指定父元素的指定子元素</p>\n</li>\n<li>\n<p>语法：<code>父元素 &gt; 子元素</code></p>\n</li>\n<li>\n<p>例子：<code>A &gt; B</code></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-class\">.box</span> &gt; <span class=\"selector-tag\">p</span> &gt; <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"后代元素选择器descendant-combinator\"><a class=\"markdownIt-Anchor\" href=\"#后代元素选择器descendant-combinator\"></a> 后代元素选择器（Descendant combinator）</h3>\n<ul>\n<li>\n<p>作用：选中指定元素内的指定后代元素</p>\n</li>\n<li>\n<p>语法：<code>祖先 后代</code></p>\n</li>\n<li>\n<p>例子：<code>A B</code></p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">div</span> <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: skyblue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h3 id=\"兄弟元素选择器sibling-combinator\"><a class=\"markdownIt-Anchor\" href=\"#兄弟元素选择器sibling-combinator\"></a> 兄弟元素选择器（Sibling combinator）</h3>\n<ul>\n<li>\n<p>作用：选择下一个兄弟</p>\n</li>\n<li>\n<p>语法：<code>前一个 + 下一个</code> <code>前一个 + 下一组</code></p>\n</li>\n<li>\n<p>例子1：<code>A1 + A2</code>（Adjacent sibling combinator）</p>\n</li>\n<li>\n<p>例子2：  <code>A1 ~ An</code>（General sibling combinator）</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"selector-tag\">p</span> + <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"selector-tag\">p</span> ~ <span class=\"selector-tag\">span</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<h2 id=\"6-伪类选择器\"><a class=\"markdownIt-Anchor\" href=\"#6-伪类选择器\"></a> 6. 伪类选择器</h2>\n<p>伪类（不存在的类，特殊的类）</p>\n<p>伪类用来描述一个元素的特殊状态，比如：第一个子元素、被点击的元素、鼠标移入的元素.…</p>\n<p>伪类一般情况下都是使用<code>:</code>开头</p>\n<ul>\n<li>\n<p><code>:first-child</code> 第一个子元素</p>\n</li>\n<li>\n<p><code>:last-child</code> 最后一个子元素</p>\n</li>\n<li>\n<p><code>:nth-child()</code> 选中第n个子元素</p>\n</li>\n<li>\n<ul>\n<li>n：第n个，n的范围0到正无穷</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>2n或even：选中偶数位的元素</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>2n+1或odd：选中奇数位的元素</li>\n</ul>\n</li>\n</ul>\n<p>以上这些伪类都是根据所有的子元素进行排序的</p>\n<ul>\n<li>\n<p><code>:first-of-type</code> 同类型中的第一个子元素</p>\n</li>\n<li>\n<p><code>:last-of-type</code> 同类型中的最后一个子元素</p>\n</li>\n<li>\n<p><code>:nth-of-type()</code> 选中同类型中的第n个子元素</p>\n</li>\n</ul>\n<p>这几个伪类的功能和上述的类似，不同点是他们是在同类型元素中进行排序的</p>\n<ul>\n<li><code>:not()</code>否定伪类，将符合条件的元素从选择器中去除</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* ul下所有li，黑色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: black;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第偶数个li，黄色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(<span class=\"number\">2</span>n) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第奇数个li，绿色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:nth-child</span>(odd) &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下第一个li，红色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:first</span>-child &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* ul下最后一个li，黄色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">ul</span>&gt;<span class=\"selector-tag\">li</span><span class=\"selector-pseudo\">:last-child</span> &#123;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: orange;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<ul>\n<li>\n<p><code>:link</code> 未访问的链接</p>\n</li>\n<li>\n<p><code>:visited</code> 已访问的链接</p>\n</li>\n<li>\n<ul>\n<li>由于隐私的原因，所以<code>visited</code>这个伪类只能修改链接的颜色</li>\n</ul>\n</li>\n<li>\n<p><code>:hover</code> 鼠标悬停的链接</p>\n</li>\n<li>\n<p><code>:active</code> 鼠标点击的链接</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* unvisited link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:link</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* visited link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:visited</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* mouse over link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:hover</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: green;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* selected link */</span></span><br><span class=\"line\"><span class=\"selector-tag\">a</span><span class=\"selector-pseudo\">:active</span> &#123;</span><br><span class=\"line\">  <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://www.yuque.com/api/filetransfer/images?url=https%3A%2F%2Fgitee.com%2Fvectorx%2FImageCloud%2Fraw%2Fmaster%2Fhtml5%2F20210517204218.png&amp;sign=00c7528db9f890d284638f404b92e92d797ded65c47b50144fc094422b5d02a2\" alt=\"img\" /></p>\n<h2 id=\"7-伪元素选择器\"><a class=\"markdownIt-Anchor\" href=\"#7-伪元素选择器\"></a> 7. 伪元素选择器</h2>\n<p>伪元素，表示页面中一些特殊的并不真实的存在的元素（特殊的位置）</p>\n<p>伪元素使用<code>::</code>开头</p>\n<ul>\n<li>\n<p><code>::first-letter</code> 表示第一个字母</p>\n</li>\n<li>\n<p><code>::first-line</code> 表示第一行</p>\n</li>\n<li>\n<p><code>::selection</code> 表示选中的内容</p>\n</li>\n<li>\n<p><code>::before</code> 元素的开始</p>\n</li>\n<li>\n<p><code>::after</code> 元素的最后</p>\n</li>\n<li>\n<p><code>::before</code>和<code>::after</code> 必须结合<code>content</code>属性来使用</p>\n</li>\n</ul>\n<figure class=\"highlight css\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br><span class=\"line\">25</span><br><span class=\"line\">26</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">/* 段落首字母设置大小为30px */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::first-letter</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">font-size</span>: <span class=\"number\">30px</span>;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 段落第一行设置为黄色背景 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::first-line</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: yellow;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* 段落选中的部分变绿色 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">p</span><span class=\"selector-pseudo\">::selection</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">background-color</span>: green；</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* div前加上内容 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::before</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;BEFORE&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: red;</span><br><span class=\"line\">&#125;</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"comment\">/* div后加上内容 */</span></span><br><span class=\"line\"><span class=\"selector-tag\">div</span><span class=\"selector-pseudo\">::after</span>&#123;</span><br><span class=\"line\">    <span class=\"attribute\">content</span>: <span class=\"string\">&#x27;AFTER&#x27;</span>;</span><br><span class=\"line\">    <span class=\"attribute\">color</span>: blue;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"D:%5C%E8%BD%AF%E4%BB%B6%5Cf97e64a5-4af4-441b-b315-3fb19ff39457.gif\" alt=\"\" /></p>\n",
            "tags": []
        }
    ]
}