{
    "version": "https://jsonfeed.org/version/1",
    "title": "Hexo • All posts by \"信息安全—网络渗透\" category",
    "description": "",
    "home_page_url": "https://sun-spots.github.io",
    "items": [
        {
            "id": "https://sun-spots.github.io/2022/03/09/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%89%E5%91%A8/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%98%B2%E7%81%AB%E5%A2%99/",
            "url": "https://sun-spots.github.io/2022/03/09/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%89%E5%91%A8/%E6%9C%8D%E5%8A%A1%E5%99%A8%E6%90%AD%E5%BB%BA%E4%B8%8E%E9%98%B2%E7%81%AB%E5%A2%99/",
            "title": "linux的web服务器的搭建",
            "date_published": "2022-03-09T00:57:23.892Z",
            "content_html": "<h1 id=\"一web服务器搭建\"><a class=\"markdownIt-Anchor\" href=\"#一web服务器搭建\">#</a> 一：Web 服务器搭建</h1>\n<h4 id=\"11lamp\"><a class=\"markdownIt-Anchor\" href=\"#11lamp\">#</a> 1.1：LAMP</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1644410520956-6877ba68-d9d2-484f-aa9f-dd432f35a47c.png\" alt=\"img\"></p>\n<p>L --&gt;Linux【操作系统】</p>\n<p>A --&gt;Apache【网页服务器】</p>\n<p>M --&gt;Mysql,MariaDB【数据库管理系统】</p>\n<p>P --&gt; PHP/Perl/Python【脚本语言】</p>\n<p><strong>LAMP</strong> 是指一组通常一起使用来运行动态网站或者服务器的自由软件名称首字母缩写；</p>\n<p>### 实验一：YUM 部署 LAMP 环境 ###</p>\n<p>快捷操作：yum -y install httpd php php-mysql mysql mysql-php mysql-server</p>\n<p>步骤一：执行命令 <code>yum -y install httpd</code>  安装 Apache 组件，并通过浏览器访问 <code>http://127.0.0.1</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Apache的配置文件的默认路径为:</span><br><span class=\"line\">/etc/httpd/conf/httpd.conf</span><br><span class=\"line\">网站默认存放的根目录：</span><br><span class=\"line\">/var/www/html</span><br></pre></td></tr></table></figure>\n<p>步骤二：执行命令 <code>yum -y install php</code>  安装 PHP 组件，并在 /var/www/html 下面创建 info.php 文件，重启 Apache 文件；</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">&lt;?<span class=\"function\">php</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"title\">phpinfo</span><span class=\"params\">()</span></span>; <span class=\"comment\">//打印输出PHP信息</span></span><br><span class=\"line\">?&gt;</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1644413330398-2f51e528-7715-4608-9e09-0c7c08a9cc2f.png\" alt=\"img\"></p>\n<p>步骤三：使用以下命令安装 MYSQL 并启动 Mysql 数据库…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">wget http:<span class=\"comment\">//repo.mysql.com/mysql-community-release-el7-5.noarch.rpm</span></span><br><span class=\"line\">rpm -ivh mysql-community-release-el7<span class=\"number\">-5.</span>noarch.rpm</span><br><span class=\"line\">yum -y install mysql-server</span><br><span class=\"line\">yum -y install mysql-php</span><br><span class=\"line\">systemctl start mysqld</span><br></pre></td></tr></table></figure>\n<p>步骤四：配置 Mysql 数据库… 并重启 httpd…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">mysql -u root -p #不输入密码进入Mysql</span><br><span class=\"line\">set password <span class=\"keyword\">for</span> <span class=\"string\">&#x27;root&#x27;</span>@<span class=\"string\">&#x27;localhost&#x27;</span>=<span class=\"built_in\">password</span>(<span class=\"string\">&#x27;123456&#x27;</span>);  #修改root用户密码</span><br><span class=\"line\">create database phpwind;</span><br></pre></td></tr></table></figure>\n<p>步骤五：网站搭建… 下载 PHPWind 源代码并修改权限进入浏览器进行安装…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https:<span class=\"comment\">//down.chinaz.com/soft/27165.htm [gbk] #PHPWind源代码下载位置</span></span><br><span class=\"line\">https:<span class=\"comment\">//down.chinaz.com/soft/27521.htm [utf] </span></span><br><span class=\"line\">chmod -R <span class=\"number\">777</span> /var/www/html/upload</span><br><span class=\"line\">http:<span class=\"comment\">//127.0.0.1/upload</span></span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1644414174427-eb3eb123-30d0-4d5a-b783-cdd150d68bf1.png\" alt=\"img\"></p>\n<p>### 实验二：一键部署 LAMP 环境 ###</p>\n<p>LAMP 一键安装脚本：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubGFtcC5zaC8=\">https://www.lamp.sh/</span></p>\n<p>步骤一：使用以下命令安装 <code>wget</code>  与 <code>git</code></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">yum -y install wget git</span><br></pre></td></tr></table></figure>\n<p>步骤二： <code>git clone</code>  项目并赋予脚本执行权限</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">git clone https:<span class=\"comment\">//github.com/teddysun/lamp.git</span></span><br><span class=\"line\">cd lamp</span><br><span class=\"line\">chmod <span class=\"number\">755</span> *.sh</span><br></pre></td></tr></table></figure>\n<p>步骤三：开始安装…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">./lamp.sh</span><br></pre></td></tr></table></figure>\n<h4 id=\"12lnmp\"><a class=\"markdownIt-Anchor\" href=\"#12lnmp\">#</a> 1.2：LNMP</h4>\n<p>LNMP 一键安装脚本：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sbm1wLm9yZy8=\">https://lnmp.org/</span></p>\n<h4 id=\"13宝塔面板\"><a class=\"markdownIt-Anchor\" href=\"#13宝塔面板\">#</a> 1.3：宝塔面板</h4>\n<p>官网：</p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/03/08/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%89%E5%91%A8/%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/",
            "url": "https://sun-spots.github.io/2022/03/08/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%89%E5%91%A8/%E8%BD%AF%E4%BB%B6%E5%8C%85%E7%AE%A1%E7%90%86%E4%B8%8E%E6%9D%83%E9%99%90%E7%AE%A1%E7%90%86/",
            "title": "软件包管理与权限管理",
            "date_published": "2022-03-08T07:38:37.524Z",
            "content_html": "<h1 id=\"软件包管理与权限管理\"><a class=\"markdownIt-Anchor\" href=\"#软件包管理与权限管理\">#</a> 软件包管理与权限管理</h1>\n<h2 id=\"一rpm软件包管理\"><a class=\"markdownIt-Anchor\" href=\"#一rpm软件包管理\">#</a> 一：RPM 软件包管理</h2>\n<h3 id=\"1rpm概述\"><a class=\"markdownIt-Anchor\" href=\"#1rpm概述\">#</a> 1.RPM 概述：</h3>\n<ul>\n<li>\n<p>由 Red Hat 公司提出，被众多 Linux 发行版所采用</p>\n</li>\n<li>\n<p>建立统一的数据库文件</p>\n</li>\n<li>\n<p>详细记录软件包安装、卸载等变化信息</p>\n</li>\n<li>\n<p>自动分析软件包依赖关系</p>\n</li>\n</ul>\n<h3 id=\"2rpm命令格式\"><a class=\"markdownIt-Anchor\" href=\"#2rpm命令格式\">#</a> 2.RPM 命令格式：</h3>\n<p>使用 rpm 命令能够实现几乎所有对 RPM 软件包的管理功能，执行 “man rpm” 命令可以获得关于 rmp 命令的详细帮助信息，如下：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625191635444-fc241ad3-632c-4323-95f3-77e8348691eb.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625191531890-095635f3-62a2-424d-b21a-d38a33521ed2.png\" alt=\"img\"></p>\n<p>从 rpm 命令的手册页信息中可以看出，rpm 命令有好多的命令选项，结合这些选项主要可以实现以下三类功能。</p>\n<ul>\n<li>\n<p>查询、验证 RPM 软件包的相关信息</p>\n</li>\n<li>\n<p>安装、升级、卸载 RPM 软件包</p>\n</li>\n<li>\n<p>维护 RPM 数据库信息等综合管理操作</p>\n</li>\n</ul>\n<h3 id=\"3查询rpm软件包信息\"><a class=\"markdownIt-Anchor\" href=\"#3查询rpm软件包信息\">#</a> 3. 查询 RPM 软件包信息</h3>\n<p>使用 rpm 命令的查询功能可以查看某个软件包是否已经安装，软件包的用途以及软件包的复制到系统中的文件等相关信息，以便更好地管理 Linux 操作系统中的应用程序。</p>\n<h4 id=\"31查询已安装的rpm软件信息\"><a class=\"markdownIt-Anchor\" href=\"#31查询已安装的rpm软件信息\">#</a> 3.1：查询已安装的 RPM 软件信息</h4>\n<p>rpm -q【子选项】【软件名】</p>\n<ul>\n<li>\n<p>-qa: 显示当前系统中以 RPM 方式安装的所有软件列表</p>\n</li>\n<li>\n<p>-qi: 查看指定软件包的名称、版本、许可协议、用途描述等详细信息</p>\n</li>\n<li>\n<p>-ql: 显示指定的软件包在当前系统中安装的所有目录、文件列表</p>\n</li>\n<li>\n<p>-qf: 查看当前指定的文件或目录是由哪个软件包所安装的</p>\n</li>\n</ul>\n<p>直接执行‘rpm -qa’命令将列出当前操作系统中以 RPM 方式安装的所有软件包清单</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625193390191-94aa22a8-40c1-4641-8366-6a647aeb14f2.png\" alt=\"img\"></p>\n<p>可以结合管道符和‘wc -l’命令统计系统中以安装的 RPM 软件的个数</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625193541394-171c6491-5617-40f4-bea5-61ab66b8004d.png\" alt=\"img\"></p>\n<p>当需要查询某个软件包是否已经安装时，可以直接使用软件名称作为查询参数</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625193828207-ce101337-227f-42a5-86f1-1b7e9a9d2fd5.png\" alt=\"img\"></p>\n<p>如果不知道准确的软件包名称，还可以对全部查询结果进行过滤</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625193910358-0210973d-d4b0-466b-8c3e-0c5c1fd71fac.png\" alt=\"img\"></p>\n<p>如果想知道已安装的某个软件的用途，可以使用 “rpm -qi 软件名”</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625194010114-16549e20-8d9b-4186-bb32-5be206cda365.png\" alt=\"img\"></p>\n<p>当需要查看某个软件包安装的目录和文件清单时，可以使用 “-ql” 选项</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625194075954-bad70ebd-a218-4ed2-aa51-7de7446edb90.png\" alt=\"img\"></p>\n<p>当需要知道系统中的某一个文件是由哪个软件生成的时候，可以用 “-qf”</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625194395915-56161c4a-02d9-4977-84bc-219153d35d46.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625194432438-4f8bab4a-f819-493a-ae3e-f1c28b04b027.png\" alt=\"img\"></p>\n<p>注意：使用 rpm 命令只能查询通过 RPM 方式安装的软件包信息用，其他途径安装到系统中的软件包，rpm 命令将无法获取相关信息</p>\n<h4 id=\"32查询未安装的rpm软件包文件中信息\"><a class=\"markdownIt-Anchor\" href=\"#32查询未安装的rpm软件包文件中信息\">#</a> 3.2：查询未安装的 RPM 软件包文件中信息</h4>\n<p>使用 “-qp” 选项时，必须以 RPM 软件包文件的路径作为参数（可以有多个），而不是软件包名称</p>\n<ul>\n<li>-qpi: 查看指定软件包的名称、版本、许可协议、用途描述等详细信息</li>\n<li>-qpl: 显示指定的软件包准备要安装的所有目录、文件列表</li>\n</ul>\n<h4 id=\"33安装-升级-卸载rpm软件包\"><a class=\"markdownIt-Anchor\" href=\"#33安装-升级-卸载rpm软件包\">#</a> 3.3：安装、升级、卸载 RPM 软件包</h4>\n<ul>\n<li>\n<p>-i: 在当前系统中安装一个新的 RPM 软件包 - e: 卸载指定名称的软件包</p>\n</li>\n<li>\n<p>-U：检查并升级系统中的某个软件包，若该软件包原来并未安装，则等同于 “-i” 选项</p>\n</li>\n<li>\n<p>-F: 检查更新系统中的某个软件包，若该软件包原来并未安装，则放弃安装</p>\n</li>\n<li>\n<p>-h: 在安装或升级软件包的过程中，以 “#” 号显示安装进度</p>\n</li>\n<li>\n<p>-v: 显示软件安装过程中的详细信息</p>\n</li>\n<li>\n<p>–force: 强制安装某个软件包</p>\n</li>\n<li>\n<p>–nodeps: 在安装或升级、卸载一个软件包时，不检查与其他软件包的依赖关系</p>\n</li>\n<li>\n<p>-e 软件名称：卸载软件包</p>\n</li>\n</ul>\n<h3 id=\"4实操rpm安装qq\"><a class=\"markdownIt-Anchor\" href=\"#4实操rpm安装qq\">#</a> 4. 实操 rpm 安装 QQ</h3>\n<p>①在 centos 里面打开火狐浏览器进入 QQ 官网，选择 linux 版本的 QQ</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625195893511-370994d5-2849-48e6-a700-a7c1e2aa8352.png\" alt=\"img\"></p>\n<p>②选择 x64 架构下的 rpm 版本下载并保存</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625195926147-916f662e-785e-4167-9e2a-d36c936907cb.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625195971599-95e7519c-b1c0-4170-8d67-efe86cced00a.png\" alt=\"img\"></p>\n<p>③打开下载的文件并在此处打开终端</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625196015620-c67614ad-5549-4849-960e-b0c64fcbc897.png\" alt=\"img\"></p>\n<p>④切换 root 权限安装 QQ</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625196231319-a165eaaa-ff87-4ff8-8cc5-c1c089f2c8fd.png\" alt=\"img\"></p>\n<p>⑤安装成功</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625196307498-8ada1746-d7de-4b37-899e-08bd583e8093.png\" alt=\"img\"></p>\n<h2 id=\"二yum软件包管理\"><a class=\"markdownIt-Anchor\" href=\"#二yum软件包管理\">#</a> 二：YUM 软件包管理</h2>\n<h3 id=\"1yum管理软件包\"><a class=\"markdownIt-Anchor\" href=\"#1yum管理软件包\">#</a> 1.YUM 管理软件包</h3>\n<h4 id=\"yum简介\"><a class=\"markdownIt-Anchor\" href=\"#yum简介\">#</a> yum 简介</h4>\n<p>rpm 软件包虽然方便，但是需要手动解决软件包的依赖关系的问题。YUM（yellowdog updater Modified）是 RPM 的前端程序，主要设计用来解决 RPM 依赖关系问题。特点如下：</p>\n<ul>\n<li>\n<p>自动解决依赖关系</p>\n</li>\n<li>\n<p>对 RPM 进行分组，并基于组进行安装操作</p>\n</li>\n<li>\n<p>引入仓库概念，支持多个仓库</p>\n</li>\n<li>\n<p>配置简单</p>\n</li>\n</ul>\n<p>​        yum 引入仓库（repo）的概念，仓库用来存放所有现有的 rpm 软件包，当使用 yum 安装一个 rpm 软件时，如果存在依赖关系，会自动在仓库中查找依赖关系并安装。仓库可以使本地的，也可以通过 HTTP、FTP 或 NFS 形式使用集中的、统一的网络仓库。仓库的配置文件保存在 /etc/yum.repos.d/ 目录下，格式如下：</p>\n<p>[LinuxRPM]（节点名称）</p>\n<p>name=RPM（仓库的描述）</p>\n<p>baseurl=（本地 file、HTTP、FTP、NFS）仓库文件的路径</p>\n<p>enabled=1（启用仓库）</p>\n<p>gpgcheck=1（启用签名校验）（生产环境中一般需要打开）</p>\n<h4 id=\"更新yum库\"><a class=\"markdownIt-Anchor\" href=\"#更新yum库\">#</a> 更新 yum 库</h4>\n<p>yum makecache</p>\n<h4 id=\"软件安装\"><a class=\"markdownIt-Anchor\" href=\"#软件安装\">#</a> 软件安装</h4>\n<p>yum provides *bin / 软件\t\t查找软件的包名</p>\n<p>yum -y install 包名\t\t\t安装软件，-y 是参数自动确定</p>\n<p>yum -y reinstall 包名\t\t重新安装</p>\n<p>yum -y update 包名\t\t升级一个软件</p>\n<p>yum -y update \t\t\t更新所有软件</p>\n<h4 id=\"查询\"><a class=\"markdownIt-Anchor\" href=\"#查询\">#</a> 查询</h4>\n<p>yum list 包名\t\t\t\t查看安装包的位置</p>\n<h4 id=\"卸载\"><a class=\"markdownIt-Anchor\" href=\"#卸载\">#</a> 卸载</h4>\n<p>yum -y remove 包名\t\t卸载软件</p>\n<h3 id=\"2配置本地yum源\"><a class=\"markdownIt-Anchor\" href=\"#2配置本地yum源\">#</a> 2. 配置本地 YUM 源</h3>\n<p>++</p>\n<h3 id=\"3配置网络yum源\"><a class=\"markdownIt-Anchor\" href=\"#3配置网络yum源\">#</a> 3. 配置网络 YUM 源</h3>\n<p>++</p>\n<h2 id=\"三磁盘文件管理\"><a class=\"markdownIt-Anchor\" href=\"#三磁盘文件管理\">#</a> 三：磁盘文件管理</h2>\n<p>++ 磁盘文件格式</p>\n<p>++ 实战添加硬盘划分区</p>\n<h2 id=\"四用户及权限管理\"><a class=\"markdownIt-Anchor\" href=\"#四用户及权限管理\">#</a> 四：用户及权限管理</h2>\n<h3 id=\"1创建-修改和删除用户与组\"><a class=\"markdownIt-Anchor\" href=\"#1创建-修改和删除用户与组\">#</a> 1. 创建、修改和删除用户与组</h3>\n<h4 id=\"11用户信息可以通过查询etcpasswd文件每一行代表一个用户信息\"><a class=\"markdownIt-Anchor\" href=\"#11用户信息可以通过查询etcpasswd文件每一行代表一个用户信息\">#</a> 1.1 用户信息可以通过查询 /etc/passwd 文件，每一行代表一个用户信息</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625204400716-e509a7c9-0a41-48ee-802f-a83ede0b9aa3.png\" alt=\"img\"></p>\n<p>每个冒号分隔一部分，整行总共分为 7 个部分</p>\n<p>①用户名</p>\n<p>②用户密码，早期版本的账号密码是直接存在这里，为了兼容所以也保留下了这部分，用 X 代替</p>\n<p>③UID：所属的用户 ID, 每个文件的前面都有该文件所属的用户和组，其实存的是 UID 只不过是通过 UID 再去 etc/passwd、/etc/shadow 中找到对应的 UID 和 GID 的名称。</p>\n<p>超级用户的 uid=0</p>\n<p>系统用户（1-499）：其中 1-99 是系统创建的，100-499 是用户创建的系统账户，系统用户不能登入但是可以执行系统的一些命令，这个跟最后指定的 shell 有关；有一个特殊的 shell 是 /sbin/nologin</p>\n<p>普通用户（500-65535）</p>\n<p>④GID：账号所属的用户组的 ID，和 /etc/group 组文件有关联</p>\n<p>⑤用户描述</p>\n<p>⑥用户的家目录：常见用户的家目录默认是在 /home/ 用户 /，在创建用户的时候可以指定用户的家目录，系统用户的家目录比较特殊，比如 root 用户的家目录是 /root</p>\n<p>⑦shell：shell 是终端和 kernel (内核) 沟通的桥梁、内核再和低层的硬件交互（包括 CPU、主板、硬盘、显卡、光驱等），linux 默认的 shell 是 /bin/bash</p>\n<h4 id=\"12密码信息可以通过查询etcshadow文件总共分为九个部分\"><a class=\"markdownIt-Anchor\" href=\"#12密码信息可以通过查询etcshadow文件总共分为九个部分\">#</a> 1.2 密码信息可以通过查询 /etc/shadow 文件，总共分为九个部分</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625204835321-0e713f79-aa04-4db6-9531-a34f2cfba0af.png\" alt=\"img\"></p>\n<p>①用户名：对应 /etc/password 文件中的用户信息</p>\n<p>②密码：密码存的是密文</p>\n<p>③最近更改密码的日期：linux 将 1970 年 1 月 1 日作为 1，所以上面的 16862 是累加的，具体就不去算了</p>\n<p>④密码不可被更改的天数：0 代表密码随时可以被更改，通常可以用来设置某个用户在多少天密码不能被更改</p>\n<p>⑤密码需要重新更改的天数：99999 为 273 年，改时间是在第 3 部分的基础上再相加的。</p>\n<p>⑥密码需要修改前的警告天数：改天数是在第 5 的基础上计算的，这里默认是 7 天也就是密码在需要更改前的第 7 天开始就发出警告。</p>\n<p>⑦密码过期后账号宽限的天数：当密码超过了需要更改的天数后，如果用户依然没有更改密码，那么该密码就过期了，在过期的这几天里密码依旧可以登入当用户在宽限的时间内登入系统系统会强制用户修改密码，如果用户在宽限的天内还未修改密码那么密码就永久过期无法再登入，只有账户超出了密码过期的天数之后账户才失效，所以一个账户总的有效时间是 3+6+7。</p>\n<p>⑧用户失效的日期：改日期同第 3 部分一样都是从 1970 年 1 月 1 日开始计算出来的数字，超过这个日期之后无论用户密码是否过期用户都失效不能再使用，改日期通常会用在规定一个用户在规定的日期之后就用户就不能使用的收费系统中。</p>\n<p>⑨保留部分</p>\n<p>计算当前日期通过 1970 年换算过来的数字</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625205876138-c87a6372-9d41-4133-b427-b190e23eb126.png\" alt=\"img\"></p>\n<p>计算指定日期通过 1970 年换算过来的数字</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625205888160-928bc819-d90f-4646-bc25-939bb2d15514.png\" alt=\"img\"></p>\n<h4 id=\"13创建用户\"><a class=\"markdownIt-Anchor\" href=\"#13创建用户\">#</a> 1.3 创建用户</h4>\n<p>明白了上面的概念之后就可以来创建用户了，创建用户的命令是 useradd, 接下来看几个主要的参数。</p>\n<p>useradd [-u UID] [-g 初始群组] [-G 次要群组] [-m\\M] [-c 说明] [-d 家目录绝对路径] [-s shell] 账号名</p>\n<p>-c, --comment COMMENT         \t用户说明</p>\n<p>-d, --home-dir HOME_DIR       \t用户的家目录</p>\n<p>-D, --defaults                \t\t\t默认的用户配置</p>\n<p>-e, --expiredate EXPIRE_DATE  \t用户的失效日期，这里需要指定的是从 1970 年 1 月 1 日开始计算出来的数字，比如 16925 代表 2016 年 5 月 4 日过期，对应密码文件的第 8 部分</p>\n<p>-f, --inactive INACTIVE       \t\t指定密码过期的时间，这里指定的是数字，比如 10 代表密码在过期的 10 天内还可以登入但是登入后需要强制修改密码， 对应密码文件的第 7 部分</p>\n<p>-g, --gid GROUP               \t\t用户的 GID</p>\n<p>-G, --groups GROUPS           \t\t列出用户还能加人的组、次要组<br>\n - h, --help                    \t\t\t帮助信息</p>\n<p>-k, --skel SKEL_DIR           \t\tuse this alternative skeleton directory</p>\n<p>-K, --key KEY=VALUE           \t\toverride /etc/login.defs defaults</p>\n<p>-l, --no-log-init             \t\t\tdo not add the user to the lastlog and faillog databases</p>\n<p>-m, --create-home             \t\t强制需要创建家目录</p>\n<p>-M, --no-create-home          \t\t强制不创建家目录</p>\n<p>-N, --no-user-group           \t\t不创建用户的组名和用户名一样</p>\n<p>-o, --non-unique              \t\t允许创建的用户 uid 相同，默认情况下用户的 UID 是唯一的，加上 - o 参数可以创建相同 UID 的不用用户<br>\n - p, --password PASSWORD       \t指定创建用户的密码，这里的密码存储的是密文，所以还需要知道密文对应的明文密码是多少</p>\n<p>-r, --system                 \t\t\t创建一个系统用户</p>\n<p>-s, --shell SHELL             \t\t指定用户的 shell</p>\n<p>-u, --uid UID                 \t\t\t指定用户的 uid</p>\n<p>-U, --user-group              \t\t创建的用户组名同用户名，这是默认的</p>\n<p>-Z, --selinux-user SEUSER     \t\tuse a specific SEUSER for the SELinux user mapping</p>\n<h4 id=\"131创建test用户\"><a class=\"markdownIt-Anchor\" href=\"#131创建test用户\">#</a> 1.3.1 创建 test 用户</h4>\n<p>创建用户不加参数默认会创建一个同名的用户组、密码为空，用户的 UID 和 GID 都是 500 之后在现有的 UID 和 GID 的基础上往后自动添加、默认会创建一个同名的家目录家目录的默认权限是普通用户</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625205584609-e2563e80-9903-4914-83c1-4b3910167109.png\" alt=\"img\"></p>\n<h4 id=\"132创建用户new备注用户为test指定用户uid为600用户的组初始组为test用户次要组为yuchen指定用户的失效日期注意这里的失效日期也是需要通过1970年1月1日进行换算-指定用户的过期天数\"><a class=\"markdownIt-Anchor\" href=\"#132创建用户new备注用户为test指定用户uid为600用户的组初始组为test用户次要组为yuchen指定用户的失效日期注意这里的失效日期也是需要通过1970年1月1日进行换算-指定用户的过期天数\">#</a> 1.3.2 创建用户 new 备注用户为 test，指定用户 uid 为 600，用户的组初始组为 test，用户次要组为 yuchen，指定用户的失效日期（注意这里的失效日期也是需要通过 1970 年 1 月 1 日进行换算）、指定用户的过期天数</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625206730251-631c0348-d51a-40a7-b2c7-7ae49ed6174a.png\" alt=\"img\"></p>\n<h4 id=\"133创建系统用户old\"><a class=\"markdownIt-Anchor\" href=\"#133创建系统用户old\">#</a> 1.3.3 创建系统用户 old</h4>\n<p>创建的系统用户虽然在用户文件中有指定家目录，但是实际上在 home 目录下并不会创建对应用户的目录，且不会创建用户邮件通知目录。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625206836970-641ae550-30d4-4372-9422-93b3a33b7b4d.png\" alt=\"img\"></p>\n<h4 id=\"134创建不允许登入的用户\"><a class=\"markdownIt-Anchor\" href=\"#134创建不允许登入的用户\">#</a> 1.3.4 创建不允许登入的用户</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625206939397-b5e29001-28cb-461d-bfca-0119ef0ed2b4.png\" alt=\"img\"></p>\n<h4 id=\"135指定用户家目录\"><a class=\"markdownIt-Anchor\" href=\"#135指定用户家目录\">#</a> 1.3.5 指定用户家目录</h4>\n<p>先创建用户家目录</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625207169365-368c6863-9fa1-4efd-b158-0e9e8d3772f9.png\" alt=\"img\"></p>\n<p>创建用户并指定家目录</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625207183234-e594ddd4-0cec-4253-95d9-31eff550a3fb.png\" alt=\"img\"></p>\n<p>注意：这里的家目录是绝对路径，也就是你指定了那个目录家目录就是哪个目录不会在你指定的目录下再创建目录，这里会有警告说用户不能拷贝文件到家目录，因为家目录的权限还是之前创建目录用户的权限，这个时候需要给家目录赋予用户拥有者。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625207315995-9a591b51-7d63-46b9-a01e-443fc6946050.png\" alt=\"img\"></p>\n<h4 id=\"14删除用户\"><a class=\"markdownIt-Anchor\" href=\"#14删除用户\">#</a> 1.4 删除用户</h4>\n<p>userdel [options] LOGIN</p>\n<p>-f, --force                   \t\t强制删除用户，不管该用户是否在使用<br>\n - h, --help                    \t\t帮助信息<br>\n - r, --remove                  \t删除用户和组并且删除用户的家目录和邮件通知目录</p>\n<p>-Z, --selinux-user            \t删除 SELinux 用户</p>\n<h4 id=\"141不加参数删除用户\"><a class=\"markdownIt-Anchor\" href=\"#141不加参数删除用户\">#</a> 1.4.1 不加参数删除用户</h4>\n<p>userdel testuser</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625207496561-79626833-298b-4c7b-92b8-661ae93d0980.png\" alt=\"img\"></p>\n<h4 id=\"142删除用户同时删除用户的家目录和邮件通知目录\"><a class=\"markdownIt-Anchor\" href=\"#142删除用户同时删除用户的家目录和邮件通知目录\">#</a> 1.4.2 删除用户同时删除用户的家目录和邮件通知目录</h4>\n<p>userdel -r test</p>\n<p>使用 - r 参数删除用户会同时删除用户的家目录和用户的邮件通知目录，如果用户的用户组是使用其它用户的用户组，其它用户组不会被删除。</p>\n<h4 id=\"15用户组\"><a class=\"markdownIt-Anchor\" href=\"#15用户组\">#</a> 1.5 用户组</h4>\n<h4 id=\"151创建用户组\"><a class=\"markdownIt-Anchor\" href=\"#151创建用户组\">#</a> 1.5.1 创建用户组</h4>\n<p>groupadd groupname</p>\n<h4 id=\"152删除用户组\"><a class=\"markdownIt-Anchor\" href=\"#152删除用户组\">#</a> 1.5.2 删除用户组</h4>\n<p>groupdel groupname</p>\n<h4 id=\"153修改用户组\"><a class=\"markdownIt-Anchor\" href=\"#153修改用户组\">#</a> 1.5.3 修改用户组</h4>\n<p>修改用户组名</p>\n<p>groupmod -h newname oldname</p>\n<p>修改用户组 ID</p>\n<p>groupmod -g newgid oldgid</p>\n<h3 id=\"2文件及文件夹权限管理\"><a class=\"markdownIt-Anchor\" href=\"#2文件及文件夹权限管理\">#</a> 2. 文件及文件夹权限管理</h3>\n<h4 id=\"1文件的权限\"><a class=\"markdownIt-Anchor\" href=\"#1文件的权限\">#</a> ①文件的权限</h4>\n<ul>\n<li>文件权限的查看</li>\n</ul>\n<p>命令：ls -l</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625208363096-01db518c-8f92-42ca-a65b-6772bc623650.png\" alt=\"img\"></p>\n<p>可以使用 ll 命令代替 ls -l</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625208385249-5adfe4d1-4948-4264-9086-c87bd14ed820.png\" alt=\"img\"></p>\n<ul>\n<li>ls -l 所包含的信息</li>\n</ul>\n<p>（1）权限信息 （-rw-r–r-- ）</p>\n<p>一共有 10 位</p>\n<p>a. 第一位：表示文件信息</p>\n<p>-：表示普通文件</p>\n<p>d：表示目录</p>\n<p>l：表示软连接（快捷方式）</p>\n<p>b：设备</p>\n<p>p：管道文件</p>\n<p>b. 第 2-4 这三位表示属主的权限 -----------------》字母 u 代替</p>\n<p>-：表示没有权限</p>\n<p>r：读取文件的权限</p>\n<p>w：修改文件的权限</p>\n<p>x：执行文件的权限</p>\n<p>c. 第 5-7 这三位表示属组的权限 -------------------》字母 g 代替</p>\n<p>-：表示没有权限</p>\n<p>r：读取文件的权限</p>\n<p>w：修改文件的权限</p>\n<p>x：执行文件的权限</p>\n<p>d. 第 8-10 这三位表示其他人的权限 ----------------》字母 o 代替</p>\n<p>-：表示没有权限</p>\n<p>r：读取文件的权限</p>\n<p>w：修改文件的权限</p>\n<p>x：执行文件的权限</p>\n<p>（2）安全性</p>\n<p>权限信息后紧跟的是一个点，这个是和 selinux 相关的，表示的是 linux 的安全性，selinux 是一个安全软件。</p>\n<p>（3）硬连接数</p>\n<p>点之后是数字，表示的是硬连接数。</p>\n<p>（4）属主</p>\n<p>之后的 root 表示属主，文件的拥有者。</p>\n<p>（5）属组</p>\n<p>属主之后的 root 表示属组。</p>\n<p>（6）文件大小</p>\n<p>2000 表示文件的创建大小。</p>\n<p>（7）文件创建时间</p>\n<p>之后的时间表示文件的创建时间</p>\n<p>（8）文件名称</p>\n<p>最后一项表示文件名称</p>\n<ul>\n<li>修改权限</li>\n</ul>\n<p>修改权限命令关键词：chmod (change mod)</p>\n<ol>\n<li>\n<ol>\n<li>修改属主权限：chmod u+x 文件路径（追加权限）或者 chmod u=r 文件路径（覆盖权限）</li>\n</ol>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625210938497-9c1819e6-4e02-4b69-b796-e938889f9f55.png\" alt=\"img\"></p>\n<ol>\n<li>\n<ol>\n<li>修改属组权限：与属主权限的修改类似，可以使用（‘+’，‘-’）号进行权限的修改，也可以使用赋值的方式。</li>\n</ol>\n</li>\n</ol>\n<p>chmod  g+rw 文件路径</p>\n<p>chmod g=— 文件路径 （此处也可以用一个‘-’表示）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625211059776-445716fa-1eaf-4bca-8d33-3ff5295a03b4.png\" alt=\"img\"></p>\n<ol>\n<li>\n<ol>\n<li>修改其他人的权限：同以上修改权限的方法相同</li>\n</ol>\n</li>\n</ol>\n<p>chmod o=rwx 文件路径</p>\n<p>chnod  o-x  文件路径</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625211148784-744ca0c1-b420-4d78-b147-84e783c55522.png\" alt=\"img\"></p>\n<ol>\n<li>\n<ol>\n<li>写文件的权限</li>\n</ol>\n</li>\n</ol>\n<p>vim 编辑器用于打开文件并进行编辑，vim  文件路径 ------》a 或者 i 进入编辑模式 ----------》进行编辑 ------\t\t-》esc 退出编辑模式 -------》：（shift+：）-------》wq 保存文件</p>\n<p>如果存在 w 的权限则可以进行编辑，如果没有就不可以。</p>\n<p>注：如果一个人没有读的权限但有写的权限，当他每次写完后，会把文件中原先的内容覆盖掉。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625211207597-8fe75689-ccb4-48b6-b1f2-6c8e48c55245.png\" alt=\"img\"></p>\n<ol>\n<li>\n<ol>\n<li>执行可执行文件的权限（x）</li>\n</ol>\n</li>\n</ol>\n<p>注：执行命令有以下的方式</p>\n<p>./ 文件路径</p>\n<p>sh 文件路径</p>\n<p>bash 文件路径</p>\n<ol>\n<li>\n<ol>\n<li>将用户添加到组，从而拥有组权限</li>\n</ol>\n</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625212385967-97802389-953d-4967-bc23-06e215e5d8c6.png\" alt=\"img\"></p>\n<h4 id=\"2目录的权限\"><a class=\"markdownIt-Anchor\" href=\"#2目录的权限\">#</a> ②目录的权限</h4>\n<p>查看目录的命令：ll -d 文件夹路径</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625214828181-cdc67528-76c5-40ef-b1c4-29b4a985f502.png\" alt=\"img\"></p>\n<p>目录的 r 权限</p>\n<p>可以 ls 该目录下的文件以及子目录</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625214838578-8850375b-e60d-49dc-8fd2-1ad855735a18.png\" alt=\"img\"></p>\n<p>目录的 w 权限</p>\n<p>添加文件权限</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625214848032-efaf0592-ec6b-4608-a1b0-729c179c59ea.png\" alt=\"img\"></p>\n<p>删除文件的权限</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625214857821-c5ab5a68-d2b2-45d9-832e-bf59f14c5ff0.png\" alt=\"img\"></p>\n<p>重命名文件</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625214867489-13b0ab79-15df-486a-9dd2-8dcb9384b1fa.png\" alt=\"img\"></p>\n<p>目录的可执行权限</p>\n<p>目录的 x 权限就是 cd 命令</p>\n<p>注：目录中船舰文件必须需要有执行权限，w 的权限是不够的，因为需要 cd 进目录中进行创建</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625215247645-27745cb8-ef82-4603-9106-44e620c01429.png\" alt=\"img\"></p>\n<p>注：权限不受 root 以及属主限制，即使修改了权限限制</p>\n<h4 id=\"3属主属组的更改\"><a class=\"markdownIt-Anchor\" href=\"#3属主属组的更改\">#</a> ③属主，属组的更改</h4>\n<p>更改属主、属组关键字 chown (change owner)</p>\n<p>属主更改</p>\n<p>chown 属主 文件或者目录路径</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625215831719-940c32b8-2931-448a-ae6a-619bcd72f90f.png\" alt=\"img\"></p>\n<p>属组更改</p>\n<p>chown . 属组 文件或者目录路径</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625215884205-d26d1484-3813-4d8e-ac91-8d5118136157.png\" alt=\"img\"></p>\n<p>属主、属组都进行修改</p>\n<p>chown 属主。属组 文件或者目录路径</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625215894512-1c48bd60-0d88-4d93-ad7d-3a78701640da.png\" alt=\"img\"></p>\n<h4 id=\"4基于数字的权限管理\"><a class=\"markdownIt-Anchor\" href=\"#4基于数字的权限管理\">#</a> ④基于数字的权限管理</h4>\n<p>属主、属组以及其他人的权限更改还可以使用数字进行权限的更改</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625216303102-30f4d111-b63b-45c0-9edd-228a021d705c.png\" alt=\"img\"></p>\n<h3 id=\"3特殊权限suid\"><a class=\"markdownIt-Anchor\" href=\"#3特殊权限suid\">#</a> 3. 特殊权限 SUID</h3>\n<h4 id=\"1setuid的功能\"><a class=\"markdownIt-Anchor\" href=\"#1setuid的功能\">#</a> 1：SetUID 的功能</h4>\n<p>只有可以执行的二进制程序才能设定 SUID 权限。（给其他文件设置没有意义），命令执行者要对该程序拥有 x（执行）权限，命令执行者在执行该程序时获得该程序文件所有着的身份（在执行程序的过程中灵魂附体为文件的属主，相当于变身命令），SetUID 权限指在该程序执行过程中有效，也就是说身份改变只在程序执行过程中有效。</p>\n<p>passwd 命令拥有 SetUID 权限，所以普通用户可以修改自己的密码</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625216451672-6b808dfb-a05e-4424-81ff-a00ce145cee7.png\" alt=\"img\"></p>\n<p>在所有者的权限里面有 s 就是 SUID 权限，在所属组里面有 s 就是 SGID 权限，在其他人里面有 s 就是 SBID</p>\n<p>cat 命令没有 SetUID 权限，所以普通用户不能查看 /etc/shadow 文件内容</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625216961490-bb2f832a-fe56-4205-8b4d-0d854e598bcc.png\" alt=\"img\"></p>\n<h4 id=\"2设定setuid的方法\"><a class=\"markdownIt-Anchor\" href=\"#2设定setuid的方法\">#</a> 2. 设定 SetUID 的方法</h4>\n<p>4 代表 SUID，2 表示 SGID，1 表示 SBID    7 表示 SUID,SGID,SBID 都有，chmod 4755 文件名； chmod u+s 文件名</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625217254485-53544eb7-f6af-4c06-bab3-e383dcbfe855.png\" alt=\"img\"></p>\n<p>如果使用 chmod u+s test</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625217343589-f0e0095d-fb2d-42b2-85c1-4664907bb6c4.png\" alt=\"img\"></p>\n<p>s 是大写的这是因为出错了，因为 SetUID 的功能说明中强调命令执行者要对该程序有执行权限，所以会报错</p>\n<h4 id=\"3取消setuid的方法\"><a class=\"markdownIt-Anchor\" href=\"#3取消setuid的方法\">#</a> 3. 取消 SetUID 的方法</h4>\n<p>使用 chmod 命令吧文件的权限修改为以前的，或者使用 u-s 文件名来修改</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1625217588791-1d00ff85-488d-401a-9775-e1db3f2e87e6.png\" alt=\"img\"></p>\n<h4 id=\"4危险的setuid\"><a class=\"markdownIt-Anchor\" href=\"#4危险的setuid\">#</a> 4. 危险的 SetUID</h4>\n<p>最好不要随便修改</p>\n<iframe style=\"width: 1px; height: 1px; position: absolute; left: -100px; bottom: -100px; display: none;\" src=\"https://tracert.alipay.com/cross.html\"></iframe>",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/03/08/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%89%E5%91%A8/linux%E5%8F%91%E5%B1%95%E4%B8%8E%E5%9F%BA%E7%A1%80/",
            "url": "https://sun-spots.github.io/2022/03/08/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%89%E5%91%A8/linux%E5%8F%91%E5%B1%95%E4%B8%8E%E5%9F%BA%E7%A1%80/",
            "title": "linux的发展与基础",
            "date_published": "2022-03-08T07:36:55.741Z",
            "content_html": "<h1 id=\"linux的发展与基础\"><a class=\"markdownIt-Anchor\" href=\"#linux的发展与基础\">#</a> linux 的发展与基础</h1>\n<h2 id=\"1linux发展历史\"><a class=\"markdownIt-Anchor\" href=\"#1linux发展历史\">#</a> 1：linux 发展历史</h2>\n<h3 id=\"11linux发展历史\"><a class=\"markdownIt-Anchor\" href=\"#11linux发展历史\">#</a> 1.1：Linux 发展历史</h3>\n<h4 id=\"1诞生\"><a class=\"markdownIt-Anchor\" href=\"#1诞生\">#</a> ①：诞生</h4>\n<p>20 世纪 60 年代，出现并流行交互式操作系统，即分时操作系统。其中 multics 就是一套由贝尔实验室、麻省理工学院及美国通用电气公司的 1964 年共同参与研发出的安装在大型主机上实现多人多工的操作系统。但由于资金的超支及贝尔实验室的退出等因素而被 “放弃”。</p>\n<p>随后贝尔实验室的 Ken Thompson 使用 B 语言开发出了名为 Unics 操作系统，后改名为 UNIX 操作系统。</p>\n<p>由于 B 语言进行系统编程时不够强大，因此 Thompson 联合 Ritchie 对其进行了改造，并于 1971 年共同发明了 C 语言。1973 年 Thompson 和 Ritchie 用 C 语言重写了 UNIX。自此到 20 世纪 90 年代 UNIX 已经成为大学中的主流操作系统。与此同时，UNIX 转向商业化，价格昂贵。而唯一低廉的选择就是 MINIX，这是一个功能有限的类似 UNIX 的操作系统，作者 Andrew Tanenbaum 开发它的目的是用于教学。</p>\n<p>1991 年初，Linus Torvalds 接触到 UNIX 操作系统，通过学习 MINIX 成功地将自己开发的 bash 移植到了 minix 上，并于 1991 年 10 月正式向外宣布 Linux 内核的诞生。同年，GNU 计划已经开发出了许多工具软件，最受期盼的 GNU C 编译器已经出现，GNU 的操作系统核心 HURD 一直处于实验阶段，没有任何可用性，实质上也没能开发出完整的 GNU 操作系统，但是 GNU 奠定了 Linux 用户基础和开发环境。<br>\nLinux 本身只是操作系统的内核。内核是使其它程序能够运行的基础。它实现了多任务和硬件管理，用户或者系统管理员交互运行的所有程序实际上都运行在内核之上。其中有些程序是必需的，比如说，命令行解释器（shell），它用于用户交互和编写 shell 脚本。 Linux 没有自己去开发这些应用程序，而是使用已有的自由软件。许多重要的软件，包括 C 编译器，都来自于自由软件基金 GNU 项目。因此，把 Linux 也称为 GNU/Linux。</p>\n<h4 id=\"2linux-诞生大事件\"><a class=\"markdownIt-Anchor\" href=\"#2linux-诞生大事件\">#</a> ②：Linux 诞生大事件</h4>\n<p>1965 年，Bell 实验室、MIT、GE（通用电气公司）开发 Multics（Multiplexed Information and Computing Service）系统。</p>\n<p>1969 年，Ken Thompson（C 语言之父）利用汇编语言（B 语言）开发了 File Server System（Unics，即 UNIX 的原型）。</p>\n<p>1973 年，Dennis Ritchie 和 Ken Thompson 发明了 C 语言，随后二人使用 C 语言重写 UNIX 的内核。</p>\n<p>1977 年，Berkeley 大学的 Bill Joy （ Sun 公司的创始人）针对他的机器修改了 UNIX 源码，称为 BSD（Berkeley Software Distribution）操作系统。</p>\n<p>1979 年，UNIX 发布 System V，用于个人计算机；1984 年，因为 UNIX 规定 “不能对学生提供源码”，作为老师的 Andrew Tanenbaum 编写兼容于 UNIX 的 Minix，用于教学。</p>\n<p>1984 年，Richard Stallman 开始 GNU（GNU’s Not Unix）项目，创办 FSF（Free Software Foundation）基金会。该组织倡导 “自由软件”，开发了 GCC、Emacs、Bash Shell、GLIBC 等产品；GNU 的软件缺乏一个开放的平台运行，只能在 UNIX 上运行；自由软件指用户可以对软件做任何修改，甚至再发行，但要遵守 GPL 的版权规定；自由软件是可以卖的，但是不能只卖软件，而是卖服务、手册等。</p>\n<p>1985 年，为了避免 GNU 开发的自由软件被其他人用作专利软件，因此创建 GPL（General Public License）版权声明。</p>\n<p>1988 年，MIT 为了开发 GUI，成立了研发 XFree86 的组织。</p>\n<p>1991 年，芬兰赫尔辛基大学的研究生 Linus Torvalds 基于 gcc、bash 开发了针对 386 机器的 Linux 内核。</p>\n<p>1994 年，Torvalds 发布 Linux-v1.0。</p>\n<p>1996 年，Torvalds 发布 Linux-v2.0，确定了 Linux 的吉祥物：企鹅。</p>\n<h4 id=\"3unix进化史\"><a class=\"markdownIt-Anchor\" href=\"#3unix进化史\">#</a> ③：UNIX 进化史</h4>\n<p>Unix 是较早被广泛使用的计算机操作系统之一，它的第一版于 1969 年由 Ken Thompson 在 AT&amp;T 贝尔实验室实现，1973 年 Ken Thompson 与 Dennis Ritchie 用 C 语言重写了 Unix 的第三版内核。</p>\n<p>1969 年，Unix 系统的第一个版本（由 Ken Thompson 在 AT&amp;T 贝尔实验室实现）</p>\n<p>20 世纪 70 年代末：AT&amp;T 成立 Unix 系统实验室</p>\n<p>20 世纪 70 年代末：CSRG（加州大学伯克利分校计算机系统研究小组）使用 Unix 对操作系统进行研究</p>\n<p>BSD Unix 和 Unix System V 形成了当今 Unix 的两大主流</p>\n<h3 id=\"12linux发行版本\"><a class=\"markdownIt-Anchor\" href=\"#12linux发行版本\">#</a> 1.2：linux 发行版本</h3>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1624002003577-d9e2daa8-2dba-4d96-95b8-d5da34604cba.png\" alt=\"img\"></p>\n<h4 id=\"debian-家族\"><a class=\"markdownIt-Anchor\" href=\"#debian-家族\">#</a> Debian 家族</h4>\n<p>Debian 最早由 Ian Murdock 于 1993 年创建，是社区类 Linux 的典范，也是迄今为止最遵循 GNU 规范的 Linux 系统。Debian 在服务器和桌面电脑领域都有着广泛的应用，最具特色的是 apt-get /dpkg 包管理方式。</p>\n<p>Ubuntu 是基于 Debian 发展而来，界面友好，易于上手，而且对硬件的支持也很全面，比较适用于桌面系统。Ubuntu 本身又有很多不同的版本，比如基于 KDE 的 Kubuntu，基于极致轻量的 LXDE 的 Lubuntu，中国定制版的 Ubuntu Kylin 等。</p>\n<p>Linux Mint 由 Linux Mint Team 团队于 2006 年开始发行，基于 Ubuntu 衍生，是专注于个人用户的桌面系统，界面更加美观。</p>\n<h4 id=\"red-hat家族\"><a class=\"markdownIt-Anchor\" href=\"#red-hat家族\">#</a> Red Hat 家族</h4>\n<p>Red Hat 红帽公司创建于 1993 年，是目前世界上最知名的 Linux 厂商之一。Red Hat 公司产品主要包括：</p>\n<p>RHEL (Red Hat Enterprise Linux 红帽企业版 Linux)，是商业版本，源代码公开，技术支持需要付费，提供原厂服务。</p>\n<p>Fedora 是基于 Red Hat Linux 的社区版，由 Fedora Project 社区开发、红帽公司赞助。Fedora 会采用最新的技术，尝试很多新功能、新特性，取得成功后会应用到 RHEL 版本中，可以理解为是 RHEL 的个人桌面版和前期测试版。</p>\n<p>CentOS 全称 Community Enterprise Operating System（社区企业操作系统），可以理解为是 RHEL 的社区克隆版。完全免费，并且开源。其独有的 yum 命令支持系统在线升级，可以即时更新。CentOS 稳定性较好，在中国应用比较广泛。</p>\n<h4 id=\"slackware家族\"><a class=\"markdownIt-Anchor\" href=\"#slackware家族\">#</a> SlackWare 家族</h4>\n<p>SLES SUSE Linux Enterprise Server ，企业版，基于 SlackWare Linux 发展而来，由德国的 SuSE Linux AG 公司与 1994 年发行。</p>\n<p>OpenSuse 是 SLES 的社区版本。2004 年 SuSE Linux AG 被 Novell 公司收购以后，成立了 OpenSUSE 社区，于是推出了 OpenSuse 版本，比较适用于桌面系统。它和 SLES 有点类似于 Fedora 和 RHEL 的关系。</p>\n<h4 id=\"其他-linux-版本\"><a class=\"markdownIt-Anchor\" href=\"#其他-linux-版本\">#</a> 其他 Linux 版本</h4>\n<p>Linux 还有很多其他的版本，比如 Gentoo Linux, 它的标志是追求极限的性能，在同样的硬件环境下拥有最快的运行速度。不过它需要采用源码包编译安装操作系统，非常复杂，但这也并不妨碍大量的的用户和开发者拥入它的怀抱。</p>\n<p>下面我用一张表格来总结 Linux 不同家族和发行版本的关系与特点：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1624002060229-df09cbe1-b4f2-4b93-bf08-356890bef725.png\" alt=\"img\"></p>\n<h4 id=\"linux-mint\"><a class=\"markdownIt-Anchor\" href=\"#linux-mint\">#</a> linux mint</h4>\n<p>Linux Mint 是一个基于 Ubuntu 的发行版，最早于 2006 年由居住在爱尔兰的法国出生的 IT 专家 Clement Lefebvre 发布。最初维护一个专门为新 Linux 用户提供帮助，技巧和文档的 Linux 网站，笔者看到了开发 Linux 发行版的必要性，该发行版致力于解决那些技术性较强的产品的使用问题，让它们更易于使用。在他的网站上向访问者征求反馈意见之后，他继续把许多人提到的 “改进的 Ubuntu” 或 “Ubuntu 完善版” 的东西建立起来。注：Ubuntu 就是以易用，对新手友好著称的。可想而知 Mint 的目标更进一步，让 Linux 更加的贴近了普通用户。</p>\n<p>但是，Linux Mint 不仅仅是一个具有新的应用程序和更新的桌面主题的 Ubuntu。自开始以来，开发人员一直在增加各种 Mint 下的图形工具以提高可用性；这包括 mintDesktop – 用于配置桌面环境的实用程序，mintMenu – 一个新的，优雅的菜单结构，以方便导航，mintInstall – 一个易于使用的软件安装程序，mintUpdate – 一个软件更新程序，提供了一些更突出的几个工具和数百个额外的改进。该项目还开发了很多替代的专有程序以避免一些潜在的法律版权问题，其中包括专利和专利设计的多媒体编解码器，这些编解码器在很多发行版中通常是不存在的。因此，Mint 在易用性方面的声誉得到了进一步的加强，也许 Linux Mint 的最佳特性之一就是开发人员倾听用户的意见，并总是快速地实施好的建议。</p>\n<p>因为 Linux Mint 是可以免费下载，因此该项目通过捐赠，广告和专业支持服务获得收入。它没有固定的发布时间表或者计划的功能列表，但是在每个 Ubuntu 长期支持版本发布几周后，可以预期 Linux Mint 的新版本。除 Mint 的 MATE 和 Cinnamon 桌面两个主要版本之外，该项目还使用包括 KDE 和 Xfce 在内的其他桌面版本构建版本。这些版本通常在两个 “主要” 版本几周后完成，有时可能会缺少一些主要分支中中的一些 “Mint” 工具和其他功能。 Mint 系列的另一个版本是基于 Debian 稳定版分支的 “Debian 版”。 Linux Mint 的 Debian 版本提供了非常稳定的基础，而桌面软件包的更新速度比 Mint 的 “主要分支” 版本更快。 Linux Mint 不适用软件自由原则，也不会发布安全公告。</p>\n<p>优点：精心整理的内部开发的 “Mint” 工具，数百个用户友好的增强功能，包含多媒体编解码器缺点：“社区” 版本，因此可能并不总是包含最新的功能。另外，项目不会发布安全建议软件包管理： mintInstall 包管理器，使用 DEB 包（与 Ubuntu 兼容）可用的版本：“主” 版本（MATE 和 Cinnamon 桌面），“社区” 版本（KDE 和 Xfce 桌面），Linux Mint “Debian” 版本（MATE 或 Cinnamon 桌面）替代选择：Ubuntu, elementary OS, Zorin OS, Lubuntu, Xubuntu, Peppermint OS</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002266219-56b266f9-3e89-436c-a41c-6da5633b65ee.jpeg\" alt=\"img\"></p>\n<h4 id=\"ubuntu\"><a class=\"markdownIt-Anchor\" href=\"#ubuntu\">#</a> Ubuntu</h4>\n<p>Ubuntu 的推出是在 2004 年 9 月首次宣布的。尽管这个项目在 Linux 发行版中是一个相对较新的，但是它的邮件列表很快就被热情的用户和开发人员所占领。随后的几年中，Ubuntu 发展成为最受欢迎的桌面 Linux 发行版，并为开发易于使用和免费的桌面操作系统做出了巨大贡献，该操作系统成为市场上专有桌面操作系统强有力的竞争者。</p>\n<p>Ubuntu 成功的原因是什么？首先，这个项目是由南非千万富翁，前 Debian 开发人员和全球第二位太空游客 Mark Shuttleworth 共同创建的，该公司是位于马恩岛的 Canonical Ltd 公司，目前正在为该项目提供资金。其次，Ubuntu 从其他类似项目的错误中吸取教训，并从一开始就避免了这些错误 – 它创建了一个优秀的基于 Web 的基础架构，其中包含 Wiki 风格的文档，创造性的 bug 报告功能以及专业的管理方法。第三，由于其富有的创始人，Ubuntu 能够向所有感兴趣的用户免费发送 CD，从而有助于分发的快速普及。</p>\n<p>在技术方面，Ubuntu 基于 Debian “Sid”（不稳定分支），但是使用的是 GNOME，Firefox 和 LibreOffice 等一些著名软件包的最新版本。它使用称为 “Unity” 独创的用户界面。它具有可预测的 6 个月发布时间表，外加一个长期支持（LTS）版本，支持 5 年的安全更新，具体取决于版本（非 LTS 版本支持 9 个月）。 Ubuntu 的其他特殊功能包括可安装的 Live DVD，独占应用和桌面主题，Windows 用户的迁移助理，支持 3D 桌面效果等最新技术，为 ATI 和 NVIDIA 图形卡以及无线网络轻松安装专有设备驱动程序，并为非免费或专利设计的媒体编解码器提供按需支持。</p>\n<p>优点：固定发布周期和支持期；具有 5 年安全更新的长期支持（LTS）变体；新手友好；丰富的文档，官方和用户无私贡献缺点：与 Debian 有一定的兼容性问题；频繁的重大更新可能流失一些用户，Unity 用户界面被批评为更适合移动设备，而不是电脑；非 LTS 版本只有 9 个月的安全支持软件包管理：使用 DEB 包的高级包工具（APT）其他衍生版：Ubuntu，Kubuntu，Xubuntu，Lubuntu，Ubuntu GNOME，Ubuntu MATE，Ubuntu Budgie，Ubuntu Kylin，适用于 64 位（x86_64）处理器的 Ubuntu Studio; 基于 Ubuntu 的发行版： Linux Mint (桌面版本), elementary OS (桌面版本), Zorin OS (桌面版本), Pinguy OS (桌面版本),Trisquel GNU/Linux (自由软件), Bodhi Linux (Enlightenment 桌面)</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002328952-cbdde6fb-09e7-4179-9b40-53afb406a37d.jpeg\" alt=\"img\"></p>\n<h4 id=\"debian-gnu-linux\"><a class=\"markdownIt-Anchor\" href=\"#debian-gnu-linux\">#</a> Debian GNU / Linux</h4>\n<p>Debian GNU / Linux 于 1993 年首次公布。它的创始人 Ian Murdock 的初始想法是在空闲时间创建一个由数百名志愿者开发的完全非商业项目。当时怀疑论者远远超过乐观主义者，似乎注定要夭折收尾，但实际情况却恰恰相反。 Debian 不仅幸存下来，而且还在不到十年的时间里成为了最大的 Linux 发行版，也是有史以来创建的最大的协作软件项目！</p>\n<p>Debian GNU / Linux 的成功可以用下面的数字来说明。它由 1000 多名志愿者开发，它的软件库包含近 50,000 个二进制包（编译为 8 个处理器架构），有 120 个基于 Debian 的发行版和 live CD。这些数字是任何其他基于 Linux 的操作系统无法比拟的。 Debian 主要有三个主要分支（或四个，如果包括增加稳定性的 “实验” 分支）：“unstable”（也称为 “sid”），“testing” 和 “stable ”。软件包和功能的逐步整合和稳定性，以及项目完善的质量控制机制，使得 Debian 获得了今天可用的最佳测试和无缺陷发行版之一的声誉。</p>\n<p>然而，这种冗长而复杂的开发风格也有一些缺点：Debian 的稳定版本并不是特别新，特别是因为新的稳定版本每 1 – 3 年才会发布一次。那些喜欢最新软件包和技术的用户被迫使用 Debian testing (测试) 或 unstable (不稳定) 分支。 Debian 高度民主的结构导致了有争议的决定，并引发了开发者之间的分歧。这导致了项目的停滞不前，没有能将项目快速推进。</p>\n<p>优点：非常稳定；卓越的质量控制；包括超过 30,000 个软件包；支持比任何其他 Linux 发行版更多的处理器体系结构缺点：保守 – 由于支持许多处理器架构，并不总是包含更新的技术；缓释周期（每 1 – 3 年稳定释放一次）; 对开发者邮件列表和博客的讨论有时是不可能的软件包管理：使用 DEB 包的高级包工具（APT）可用的版本：12 个处理器架构的安装 CD/DVD 和 live CD 映像，包括来自 Intel，AMD，Power 和其他所有 32 位和 64 位处理器基于 Debian 的替代方案：Ubuntu, SparkyLinux (Enlightenment, JWM, LXDE, MATE, Openbox, Razor-qt, Xfce 桌面), SolydXK (Xfce 或 KDE), KNOPPIX (LXDE), Tanglu (GNOME, KDE), siduction (LXQt)</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002364222-a25a8ac9-b939-4d7e-be35-3c9c0df9f096.jpeg\" alt=\"img\"></p>\n<h4 id=\"mageia\"><a class=\"markdownIt-Anchor\" href=\"#mageia\">#</a> Mageia</h4>\n<p>Mageia 可能是这个列表中的最新发行版，但它的来源可以追溯到 1998 年 7 月，当时 GalDuval 发布了 Mandrake Linux。当时它只是一个红帽 Linux 的分支，KDE 作为默认的桌面，更完善的硬件支持和一些用户友好的功能，加上媒体的积极评论，它获得了一定的知名度。Mandrake Linux 后来变成了一个商业版本，并在 2010 年几乎破产之前更名为 Mandriva（为了避免一些与商标有关的麻烦，并纪念与巴西的 Conectiva 合并），最终由一家俄罗斯风险投资公司拯救了，新管理层因为巨大的开支而决定在该公司巴黎总部裁减大部分的 Mandriva 开发人员。在没有工作的情况下，他们决定组建一个 Mageia，这个社区项目是 Mandrake 和 Mandriva 的核心延续，或许比 Mandriva 本身更为合理。</p>\n<p>Mageia 主要是一个桌面版本。其最受欢迎的功能是最优秀的软件应用，精良的系统管理套件（Mageia 控制中心），吸引了大量志愿者贡献者以及广泛的国际化支持。它具有最简单但功能强大的系统安装程序之一，同时还可以使用 KDE 或 GNOME 桌面和全面的语言支持。而且可以来直接从桌面安装系统，无需刻录到 U 盘。该发行版具有良好的软件包管理功能，具有强大的命令行选项和图形化软件管理模块，可以轻松访问数千个软件包。独特的 Mageia 控制中心随着每个版本的不断改进，为 Linux 的新手提供了一个强大的工具来配置他们的计算机的任何方面，而无需使用终端命令行。</p>\n<p>尽管 Mageia 自 2010 年 9 月成立以来一直处于起步阶段，但仍有人担心其是否有能力维持长期开发的工作，毕竟大部分工作是由志愿者在完成的。此外，它缺乏一些更大的 Linux 发行版的完善的基础架构。项目的文档也需要做一些改进，而 9 个月的发布周期在引起新闻和媒体兴趣方面也可以被视为一个缺点，特别是与其他使用 6 个月的短期开发过程的主要发行版相比。</p>\n<p>优点：适合初学者；优秀的中央配置工具；支持数十种语言的开箱即用支持；可安装的 Live 镜像缺点：与 Mandriva 分开之后，缺乏声誉和资源，有人担心开发者没有能力长期维持开发软件包管理：使用 RPM 软件包，Rpmdrake（URPMI 的图形前端）的 URPMI 包管理器可用版本：用于 32 位（i586）和 64 位（x86_64）处理器的安装 DVD; 可安装 32 位（i586）处理器的 live CD</p>\n<p>其他选择：OpenMandriva，ROSA</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002492988-99da62d5-9803-407d-8d88-0966779088ca.jpeg\" alt=\"img\"></p>\n<h4 id=\"fedora\"><a class=\"markdownIt-Anchor\" href=\"#fedora\">#</a> Fedora</h4>\n<p>虽然 Fedora 仅在 2004 年 9 月才正式发布，但它的起源可追溯到 1995 年，当时它是由 Bob Young 和 Marc Ewing 以 Red Hat Linux 的名义发布的。该公司的第一款产品 Red Hat Linux 1.0 “母亲节” 在同一年发布，之后很快又进行了一些错误修复更新。 1997 年，红帽公司推出了革命性的 RPM 软件包管理系统，具有依赖解决方案和其他先进功能，极大地促进了分发的迅速普及并超越 Slackware Linux 成为世界上使用最广泛的 Linux 发行版。在以后的几年中，红帽将按照正常的 6 个月发布时间表进行开发。</p>\n<p>在 2003 年刚发布 Red Hat Linux 9 之后，该公司对其产品系列进行了一些根本性的改变。它保留了红帽商业产品的商标，特别是红帽企业 Linux，并引入了 Fedora Core（后来改名为 Fedora），这是一个红帽赞助的，但面向社区的发行版，专为 “Linux 爱好者” 设计。从刚开始的批评后，Linux 社区接受了 “新的” 发行版作为 Red Hat Linux 的核心延续版本。 Fedora 重新成为一个高质量的版本，成为市场上最受欢迎的操作系统之一。与此同时，红帽公司迅速成为全球规模最大，盈利能力最强的 Linux 公司，拥有创新的产品阵容，出色的客户支持以及红帽认证工程师（RHCE）认证计划等其他受欢迎的计划。</p>\n<p>尽管 Fedora 的方向仍然由 Red Hat，Inc. 主要控制，并且该产品有时被看作是对红帽企业 Linux 的测试平台 (小白鼠)，无论是正确的还是错误的，无可否认，Fedora 是最具创新性的分发版之一。它对 Linux 内核，glibc 和 GCC 的贡献是众所周知的，它最近集成了 SELinux 功能，虚拟化技术，系统服务管理器，先进的日志文件系统以及其他企业级功能， 。不利的一面是，Fedora 仍然缺乏明确的面向桌面的策略，以使产品更容易用于 “Linux 爱好者” 目标以外的用户。</p>\n<p>优点：高度创新；突出的安全功能；大量支持的软件包；严格遵守自由软件的理念；具有许多流行桌面环境的 Live CD 的可用性缺点：Fedora 的优先级倾向于倾向于企业功能，而不是桌面可用性；一些出色的边缘功能，比如早期切换到 KDE 4 和 GNOME 3，偶尔会疏远一些桌面用户软件包管理：使用 RPM 软件包的 YUM 图形和命令行工具可用的版本：用于 32 位（i386）和 64 位（x86_64）处理器的 Fedora; 还有 GNOME，KDE，LXDE，MATE 和 Xfce 桌面的 CD 版本基于 Fedora 的替代方案：Korora（GNOME，KDE，LXDE 桌面或 Xfce 桌面的 Live DVD）基于红帽的备选方案：CentOS，Scientific Linux</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002653298-1f30d30a-67ba-4afb-8c9b-202809a38448.jpeg\" alt=\"img\"></p>\n<h4 id=\"opensuse\"><a class=\"markdownIt-Anchor\" href=\"#opensuse\">#</a> openSUSE</h4>\n<p>openSUSE 的诞生始于 1992 年，当时四位德国 Linux 爱好者 Roland Dyroff，Thomas Fehr，Hubert Mantel 和 Burchard Steinbild 以 SuSE（Software und System Entwicklung）Linux 的名义推出了该项目。在早期，这家年轻的公司出售了一套包含德语版 Slackware Linux 的软盘，但是在 SuSE Linux 于 1996 年 5 月成为独立发行版 4.2 之后不久，在随后的几年里，开发人员采用了 RPM 软件包管理格式，并推出了易于使用的图形系统管理工具 YaST。在欧洲和北美地区，SuSE Linux 的发布频繁，出色的文档和易用性使得发行日益受到欢迎。</p>\n<p>SuSE Linux 于 2003 年底被 Novell 收购，然后于 2010 年并入 Attachmate。随着第一次收购，SUSE Linux 的开发，许可和可用性发生了重大变化 – YaST 在 General Public 许可证（GPL）中，ISO 映像是从公共下载服务器免费发布的，最重要的是，发行版的开发首次向公众开放。自从 2005 年 10 月发布 openSUSE 项目并发布 10.0 版本以来，这个发行版就变得完全免费了。 openSUSE 代码已成为 Novell 商用产品的基础系统，首先命名为 Novell Linux，后来又重新命名为 SUSE Linux Enterprise Desktop 和 SUSE Linux Enterprise Server。</p>\n<p>今天，openSUSE 拥有大量满意的用户。 openSUSE 获得用户好评的主要原因是令人愉悦和精美的桌面环境（KDE 和 GNOME），卓越的系统管理工具（YaST）。然而，Novell 和微软之间的臭名昭着的交易，显然承认微软对 Linux 拥有知识产权的说法，已经引起许多 Linux 人士的谴责，并促使一些用户转换发行版。尽管 Novell 低调处理，微软尚未行使任何权利，这一问题仍然成为非常友善的社区 Linux 公司的郁结。</p>\n<p>优点：全面而直观的配置工具；大型软件包库，优秀的网站基础设施和印刷文档缺点：2006 年 11 月，Novell 与微软的专利协议似乎使微软对 Linux 的知识产权声称合法化；其资源沉重的桌面设置和图形工具有时被视为 “臃肿和缓慢” 软件包管理：使用 RPM 包的 YaST 图形和命令行实用程序可用的版本：openSUSE for 32 位（i386），64 位（x86_64）处理器（也可安装 live CD 版）; 适用于 i586，IA64，PowerPC，s390，s390x 和 x86_64 体系结构的 SUSE Linux Enterprise Desktop/Server</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002741779-846a9db1-b435-4aa5-b4ea-c6c40329468b.jpeg\" alt=\"img\"></p>\n<h4 id=\"arch-linux\"><a class=\"markdownIt-Anchor\" href=\"#arch-linux\">#</a> Arch Linux</h4>\n<p>Arch Linux 的 KISS（保持简单愚蠢）哲学是在 2002 年由加拿大计算机科学专业毕业生 Judd Vinet 在 2002 年推出的，几年来，它一直是一个为中级和高级 Linux 用户设计的边缘项目。但是它 “滚动更新”，只需要安装一次，然后保持一直更新，不要从头安装新的系统。这都要感谢其强大的包管理器和一个总是最新的软件库。因此，Arch Linux 的 “发行版” 很少，而且现在只限于一个基本的安装光盘，只有在基本系统发生相当大的变化时，才会发行新的安装介质。</p>\n<p>Arch Linux 除了拥有备受推崇的 “滚动发布” 更新机制之外，还以其快速和强大的软件包管理器 “Pacman” 而闻名，能够从源代码安装软件包，并且由于其 AUR 基础架构，以及经过充分测试的软件包不断增加的软件库。其高度重视的文档，以及卓越的 Arch Linux 手册，使得一些高级 Linux 用户可以自行安装和定制分发。用户可以使用的强大工具意味着发行版可以无限定制到最细微的细节，并且没有两个安装可能是相同的。</p>\n<p>不利的一面是，任何滚动更新更新机制都有其危险性：人为错误，库或依赖关系丢失，已存在于存储库中的应用程序的新版本有一个尚未报告的严重错误都可能导致系统的不稳定。在 Pacman 升级之后，最终导致无法启动的系统是经常遇到的。因此，Arch Linux 是一种需要用户警觉并具有足够的知识来解决任何这种可能的问题的发行版。此外，偶尔安装的发行版意味着有时由于重要的系统更改或在较早的 Linux 内核中缺少硬件支持而无法使用旧版本。</p>\n<p>优点：优秀的软件管理基础设施无与伦比的定制和调整选项；一流的在线文档缺点：偶尔会出现不稳定和风险软件包管理：使用 TAR.XZ 软件包的 “Pacman” 包管理器可用的版本：64 位（x86_64）处理器的最小安装 CD 和网络安装 CD 映像基于 Arch Linux 的发行版：Manjaro Linux（与 Cinnamon，Enlightenment，KDE，LXDE，MATE，Openbox，Xfce 一起使用），Antergos（与 GNOME 3 一起使用），ArchBang Linux（使用 Openbox 的轻量级），Chakra GNU / Linux （使用 KDE 的 Live CD），Bridge Linux（使用 GNOME，KDE，LXDE 和 Xfce），Parabola GNU / Linux（免费软件），KaOS（使用 KDE）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002794497-79a8eda8-ed6c-444c-b019-296d6b4340d0.jpeg\" alt=\"img\"></p>\n<h4 id=\"centos\"><a class=\"markdownIt-Anchor\" href=\"#centos\">#</a> centos</h4>\n<p>CentOS 于 2003 年底推出，是一个社区项目，目标是将红帽企业 Linux（RHEL）的源代码重建为可安装的 Linux 发行版，并为所有包含的软件包提供及时的安全更新。更直白地说，CentOS 是一个 RHEL 克隆版。这两个发行版之间唯一的技术差异就是品牌 – CentOS 用自己的所有代码取代了所有的红帽商标和标识。尽管如此，红帽与 CentOS 之间的关系仍然保持友好，许多 CentOS 开发者与 Red Hat 保持着紧密的联系，甚至直接受雇于 Red Hat。</p>\n<p>CentOS 经常被看作是一个可靠的服务器发行版。它配备了经过良好测试和稳定的 Linux 内核和软件包，构成了其母公司 Red Hat Enterprise Linux 的基础。尽管是志愿者维护的一个社区项目，但它已经赢得了市场上更高端服务器产品（尤其是经验丰富的 Linux 系统管理员）的稳定，免费替代品的声誉。 CentOS 也适合作为企业桌面解决方案，特别是在稳定性，可靠性和长期支持优于最新软件和功能的地方。像 RHEL 一样，CentOS 支持大约 7 – 10 年的安全更新。</p>\n<p>尽管有其优势，CentOS 可能不是所有部署方案中的最佳解决方案。那些喜欢使用最新的 Linux 技术和最新的软件包进行发布的用户应该到别处去看看。主要的 CentOS 版本是在 RHEL 版本的基础上发布的，每 2 – 3 年才会发布一次，而小版本（例如 5.1）则以 6 到 9 个月为间隔。小发行通常不包含任何主要功能（虽然有时包括支持更新的硬件），只有少数软件包可能会更新到新版本。 Linux 内核，基本系统和大多数应用程序版本保持不变，但偶尔也可以在试验的基础上提供重要软件包（例如 LibreOffice 或 Firefox）的新版本。当然也有一个分支项目，CentOS 也为其发行版的用户构建了更新的软件包，但是包含它们的软件库默认是不启用的，因为它们可能会破坏上游的兼容性。</p>\n<p>优点：非常稳定和可靠；免费下载和使用；有 7 年以上的免费安全更新；缺点：缺乏最新的 Linux 技术；有时该项目未能履行其及时提供安全更新和新稳定版本的承诺软件包管理：使用 RPM 软件包的 YUM 图形和命令行工具可用版本：用于 i386 和 x86_64 处理器的安装 DVD 和可安装的 Live CD（GNOME）; 旧版本（3.x 和 4.x）也可用于 Alpha，IA64 和 IBM z 系列（s390，s390x）处理器。其他 RHEL 克隆和基于 CentOS 的发行版：Scientific Linux，Springdale Linux，SME 服务器，Rocks Cluster Distribution，Oracle Enterprise Linux</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002883620-302fbe80-e317-4ae2-8294-5c1e5b58e1d6.jpeg\" alt=\"img\"></p>\n<h4 id=\"pclinuxos\"><a class=\"markdownIt-Anchor\" href=\"#pclinuxos\">#</a> PCLinuxOS</h4>\n<p>PCLinuxOS 于 2003 年由比尔・雷诺兹（Bill Reynolds）首先宣布，被称为 “Texstar”。在创建自己的发行版之前，Texstar 已经是 Mandrake Linux 社区用户的知名开发人员构建的最新的 RPM 包，并提供免费下载。 2003 年，他决定建立一个新的发行版，最初基于 Mandrake Linux，但有几个显著的可用性改进。理念是应该对初学者是友好的，具有专有内核模块，浏览器插件和媒体编解码器的开箱即用的支持，并应作为一个简单直观的图形安装程序的 Live CD。</p>\n<p>几年后的发展，PCLinuxOS 正在迅速接近其预期的状态。就可用性而言，该项目为大多数 Windows 到 Linux 移民希望从他们的新操作系统中获得的许多技术提供了开箱即用的支持。在软件方面，PCLinuxOS 是一个面向 KDE 的发行版，具有定制且始终最新版本的流行桌面环境。不断增长的软件存储库包含其他桌面，并为许多常见任务提供各种各样的桌面软件包。对于系统配置，PCLinuxOS 保留了很多 Mandriva 优秀的控制中心，但是用 APT 和 Synaptic（一个图形化的包管理前端）取代了它的包管理系统。</p>\n<p>不利的一面是，PCLinuxOS 缺乏任何形式的路线图或发布目标。尽管越来越多的社区参与这个项目，大多数的发展和决策仍然掌握在 Texstar 的手中，他们在判断发布的稳定性时倾向于保守的一面。因此，PCLinuxOS 的开发过程往往是艰巨的。例如，尽管频繁要求 64 位版本，但开发者直到最近才开始生产 64 位版本。此外，该项目不提供任何安全建议，而是依靠用户通过所包括的管理工具保持系统最新的状态。</p>\n<p>优点：对图形驱动程序，浏览器插件和媒体编解码器的开箱即用支持；滚动更新机制；最新的软件缺点：对非英语语言没有开箱即用的支持；缺乏发布计划和安全建议软件包管理：使用 RPM 包的高级包工具（APT）可用的版本：KDE，完整的 Monty，KDE Minime，LXDE，LXDE Mini，Openbox，Openbox 盆景，用于 64 位（x86_64）处理器体系结构的 KDE</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624002971118-8b766f7f-4c51-479e-86c7-e26652141e66.jpeg\" alt=\"img\"></p>\n<h4 id=\"slackware-linux\"><a class=\"markdownIt-Anchor\" href=\"#slackware-linux\">#</a> Slackware Linux</h4>\n<p>由 Patrick Volkerding 于 1992 年创建的 Slackware Linux 是现存最古老的 Linux 发行版。从现在停止开发的 SLS 项目中分离出来，Slackware 1.0 拥有 24 个软盘，并建立在 Linux 内核版本 0.99pl11-alpha 之上。它很快成为最受欢迎的 Linux 发行版，据估计 1995 年其市场份额占所有 Linux 安装量的 80％。随着 Red Hat Linux 和其他更友好的发行版的出现，其受欢迎程度急剧下降，但 Slackware Linux 仍然是面向更技术导向的系统管理员和桌面用户的一个备受赞赏的操作系统。</p>\n<p>Slackware Linux 是一个高度技术性的，干净的发行版，只有非常有限的自定义实用程序。它使用一个简单的，基于文本的系统安装程序和一个比较原始的软件包管理系统，它不能解决软件依赖问题。因此，Slackware 被认为是目前可用的最干净和最不稳定的发行版之一 – 缺乏特定于 Slackware 的增强功能可以降低新问题引入系统的可能性。所有配置都是通过编辑文本文件完成的。 Linux 社区有一种说法，如果你学习红帽，你就会认识红帽，但是如果你学习了 Slackware，你就会知道 Linux。今天尤其如此，当许多其他 Linux 发行版继续开发大量定制产品以满足技术较少的 Linux 用户的需求时。</p>\n<p>虽然这种简单的理念有其迷，但事实是，在当今世界，Slackware Linux 越来越成为构建新的定制解决方案的 “核心系统”，而不是具有各种支持的软件的完整发行版。唯一的例外是服务器市场，Slackware 仍然很受欢迎，虽然在这里，发行版的复杂升级过程和缺乏官方支持的安全更新自动化工具使得它日益失去竞争力。 Slackware 对系统基本组件的保守态度意味着它需要大量的手动安装后工作，才能被调整到现代桌面系统。</p>\n<p>优点：高度稳定，干净，基本上没有错误，坚决遵守 UNIX 原则缺点：正式支持的应用程序数量有限；在基础包选择方面保守；复杂的升级程序软件包管理：使用 TXZ 软件包的 “pkgtool” 可用版本：适用于 32 位（i486）和 64 位（x86_64）处理器的安装 CD 和 DVD 基于 Slackware 的替代品：Zenwalk Linux（桌面），Salix（桌面，Live CD），Porteus（带有 KDE，LXDE，MATE，Razor-qt 或 Xfce 的 live CD），VectorLinux 其他类似发行版本：Arch Linux，Frugalware Linux</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624003105221-1df988fd-8621-441c-ab3d-34859321bcac.jpeg\" alt=\"img\"></p>\n<h4 id=\"freebsd\"><a class=\"markdownIt-Anchor\" href=\"#freebsd\">#</a> FreeBSD</h4>\n<p>FreeBSD 是 AT＆T UNIX 通过 Berkeley Software Distribution（BSD）的间接后裔，它的历史可以追溯到 1993 年。与 Linux 发行版不同，Linux 发行版被定义为由 Linux 内核和数千个软件应用程序组成的集成软件解决方案， 而 FreeBSD 是一个紧密集成的操作系统，由 BSD 内核和所谓的 “用户空间” 构成（因此即使没有额外的应用程序也可以使用）。一旦安装在普通的计算机系统上，这种区别就不明显了 – 就像许多 Linux 发行版一样，大量易于安装的（大部分）开源应用程序也是可支持 FreeBSD 核心。</p>\n<p>FreeBSD 已经发展成为一个快速，高性能和非常稳定的操作系统，尤其适用于 Web 服务和类似的任务。许多具有关键任务计算基础设施的大型网络搜索引擎和组织已经在他们的计算机系统上部署和使用 FreeBSD 多年。与 Linux 相比，FreeBSD 是在一个限制少得多的许可证下分发的，它允许为任何目的而实际上不受限制的重用和修改源代码。即使是苹果公司的 Mac OS X 也是从 FreeBSD 派生出来的。除了核心操作系统之外，该项目还提供了超过 24,000 个二进制和源代码形式的软件应用程序，以方便安装在 FreeBSD 核心上。</p>\n<p>虽然 FreeBSD 当然可以用作桌面操作系统，但是它与这个部门中流行的 Linux 发行版并没有很好的比较。文本模式系统安装程序在硬件检测或系统配置方面提供的功能很少，在安装后的设置中将大部分配置工作留给了用户。在对现代硬件的支持方面，FreeBSD 通常落后于 Linux，尤其是在支持诸如无线网卡或数码相机等，高端的台式机和笔记本电脑方面。那些试图在桌面或工作站上开发项目的用户，以充分利用 FreeBSD 的速度和稳定性，而不是 FreeBSD 本身。</p>\n<p>优点：快速稳定；安装 24000 多个软件应用程序（或 “端口”）的可用性；非常好的文档缺点：在支持新颖和异乎寻常的硬件方面，往往落后于 Linux，商业应用程序的可用性有限；缺少图形化配置工具软件包管理：使用二进制包或基于源的 “端口”（TBZ）的完整命令行包管理基础架构，可用版本：用于 AMD64，ARM / ARMEL，i386，IA64，MIPS / MIPSEL，PC98 PowerPC，SPARC64 和 Xbox 处理器的安装 CD 基于 FreeBSD 的替代方案：PC-BSD（桌面），GhostBSD（带有 GNOME 的 live DVD）其他 BSD 的替代品：OpenBSD，NetBSD，DragonFly BSD</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2942226/1624003046181-1f78feae-ad57-4029-870e-2ea4f1e19fea.jpeg\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">centos镜像</span><br><span class=\"line\">链接：https://pan.baidu.com/s/1yiExTXdBjYZLath0It6zTw </span><br><span class=\"line\">提取码：7pff </span><br></pre></td></tr></table></figure>\n<h2 id=\"2linux文件操作命令\"><a class=\"markdownIt-Anchor\" href=\"#2linux文件操作命令\">#</a> 2：linux 文件操作命令</h2>\n<p><strong>查看文件</strong></p>\n<p>cd \t\t\t\t\t\t\t\t\t\t\t切换目录位置</p>\n<p>ls 目录    \t\t\t\t\t\t\t\t\t\t查看指定目录所有文件  -- 缺省当前目录</p>\n<p>ls -l 目录 \t\t\t\t\t\t\t\t\t\t查看指定目录所有文件的详细信息 -- 同 ll 命令</p>\n<p>ls -a 目录   \t\t\t\t\t\t\t\t\t查看指定目录所有文件 (包含隐藏文件)</p>\n<p>ls -la 目录  \t\t\t\t\t\t\t\t\t查看指定目录所有文件的详细信息 (包含隐藏文件) -- 同 ll -a 命令</p>\n<p>ls -lh 目录  \t\t\t\t\t\t\t\t\t查看指定目录所有文件的详细信息 (显示文件大小单位，人性化) -- 同 ll -h 命令</p>\n<p>cat 文件 \t\t\t\t\t\t\t\t\t\t查看文件全部 (内容较少)</p>\n<p>more 文件 \t\t\t\t\t\t\t\t\t翻页查看 (内容很多)  -- 空格 (下一页)  b (上一页)</p>\n<p>less 文件   \t\t\t\t\t\t\t\t\t翻页查看 (内容很多) -- 不仅可以翻页，还可以翻行查看</p>\n<p>tail - 行数 f 文件 \t\t\t\t\t\t\t\t显示最后几行 (行数) -- 适合用来查看 log 日志文件</p>\n<p>head - 行数 文件  \t\t\t\t\t\t\t\t显示开头几行 (行数)</p>\n<p>grep -v 字符 文件 \t\t\t\t\t\t\t\t查看文件，过滤显示，-v 是过滤排除，字符作用是指包含该字符的行不显示，多个字符用 &quot;[abc]&quot;</p>\n<p>grep -E (i) 字符 文件   \t\t\t\t\t\t\t查看文件，过滤多个项，-E “a|b|c”; -Ei “A|b|C” 忽略大小写。注:grep -E 命令 == egrep 命令</p>\n<p>grep 字符 文件 \t\t\t\t\t\t\t\t查看文件，过滤显示，字符作用是指包含该字符的行才显示，多个字符用 &quot;[abc]&quot;  -- 与 - v 相反</p>\n<p>sed -n / 字符 /p 文件  \t\t\t\t\t\t\t查看文件，过滤显示，字符作用是指包含该字符的行才显示，多个字符用 &quot;[abc]&quot;</p>\n<p>sed -n 数字，数字 p 文件 \t\t\t\t\t\t\t查看文件 指定行号的内容</p>\n<p>awk -F “分隔符” ‘{print $0}’ 文件名 \t\t\t\t查看文件，指定分隔符，显示分隔后的列 “$0” 表示显示整行，1 表示第一列，以此类推</p>\n<p><strong>查找文件</strong></p>\n<p>find 目录 文件名 \t\t\t\t\t\t\t\t查找文件</p>\n<p>find 目录 -type f -name 文件名 \t\t\t\t\t查找文件，指定查找的类型 f 表示文件</p>\n<p>find 目录 -type f -name 文件名 | xargs rm -f \t\t把查找出来的文件删除</p>\n<p><strong>创建文件</strong></p>\n<p>touch 文件名 \t\t\t\t\t\t\t\t\t创建文件</p>\n<p>mkdir 目录名 \t\t\t\t\t\t\t\t\t创建目录 (文件夹)</p>\n<p>mkdir -p 目录名 / 目录名 / 目录名 \t\t\t\t\t递归创建目录</p>\n<p>ln -s 目标文件 链接文件 \t\t\t\t\t\t创建链接文件 (软连接，目标文件不能删除)</p>\n<p>ln 目标文件 链接文件  \t\t\t\t\t\t\t创建链接文件 (硬链接，目标文件可以删除，删了一样可以访问，相当于 copy 了一份)</p>\n<p><strong>编辑文件</strong></p>\n<p>echo “内容” &gt; 文件名  \t\t\t\t\t\t\t文件不存在，则创建文件，文件存在，则覆盖原文件内容</p>\n<p>echo “内容” &gt;&gt; 文件名 \t\t\t\t\t\t\t追加内容，问价不存在则自动创建</p>\n<p>vi 文件名 \t\t\t\t\t\t\t\t\t进入编辑模式</p>\n<p><strong>移动文件 (重命名)</strong></p>\n<p>mv 文件名 目录名 \t\t\t\t\t\t\t\t移动文件到指定目录下</p>\n<p>mv 文件名 新文件名 \t\t\t\t\t\t\t在源目录下移动，相当于重命名</p>\n<p>mv 文件名 指定目录下文件名 \t\t\t\t\t将文件移动到指定目录下，并创建新文件</p>\n<p><strong>删除文件</strong></p>\n<p>rmdir 目录名 \t\t\t\t\t\t\t\t\t删除空目录</p>\n<p>rm 文件  \t\t\t\t\t\t\t\t\t\t删除文件 (默认有提示)</p>\n<p>rm -f 文件  \t\t\t\t\t\t\t\t\t强制删除 (无提示)</p>\n<p>rm -r 目录  \t\t\t\t\t\t\t\t\t有提示 递归删除</p>\n<p>rm -rf 目录 \t\t\t\t\t\t\t\t\t递归删除该目录下所有的文件和目录</p>\n<p><strong>复制文件 (copy)</strong></p>\n<p>cp 文件名 指定目录 \t\t\t\t\t\t\tcopy 文件到指定目录</p>\n<p>cp 文件名 新文件名   \t\t\t\t\t\t\tcopy 文件到指定目录并创建新文件</p>\n<p>cp -r 目录名 目标目录名 \t\t\t\t\t\tcopy 目录到指定目录 (该目录下的所有东西都会被 copy)</p>\n<p>\\cp 文件名 指定目录  \t\t\t\t\t\t\tcopy 文件到指定目录 (没有提示，直接覆盖)</p>\n<p><strong>文件比较</strong></p>\n<p>diff 文件 1 文件 2   \t\t\t\t\t\t\t\t比较两个文件内容 (只能自己看内容比较)</p>\n<p>vimdiff 文件 1 文件 2 \t\t\t\t\t\t\t比较两个文件内容 (不一样的内容会高亮)</p>\n<p><strong>下载文件</strong></p>\n<p>wget 文件链接  \t\t\t\t\t\t\t\t远程下载文件</p>\n<h2 id=\"3linux网络操作命令\"><a class=\"markdownIt-Anchor\" href=\"#3linux网络操作命令\">#</a> 3：linux 网络操作命令</h2>\n<h3 id=\"31网络设备操作命令\"><a class=\"markdownIt-Anchor\" href=\"#31网络设备操作命令\">#</a> 3.1：网络设备操作命令</h3>\n<h4 id=\"1-hostname\"><a class=\"markdownIt-Anchor\" href=\"#1-hostname\">#</a> 1. hostname</h4>\n<p>hostname 没有选项，显示主机名字</p>\n<p>hostname –d 显示机器所属域名</p>\n<p>hostname –f 显示完整的主机名和域名</p>\n<p>hostname –i 显示当前机器的 ip 地址</p>\n<h4 id=\"2-ping\"><a class=\"markdownIt-Anchor\" href=\"#2-ping\">#</a> 2. ping</h4>\n<p>ping 将数据包发向用户指定地址。当包被接收，目标机器发送返回数据包。ping 主要有两个作用：</p>\n<ul>\n<li>用来确认网络连接是畅通的。</li>\n<li>用来查看连接的速度信息。</li>\n</ul>\n<p>如果你 ping <span class=\"exturl\" data-url=\"aHR0cHM6Ly96aGFuZ2dlLm5ldC8=\">zhangge.net</span>  它将返回它的 ip 地址 。你可以通过 ctrl+C 来停止命令。</p>\n<h4 id=\"3-ifconfig\"><a class=\"markdownIt-Anchor\" href=\"#3-ifconfig\">#</a> 3. ifconfig</h4>\n<p>查看用户网络配置。它显示当前网络设备配置。对于需要接收或者发送数据错误查找，这个工具极为好用。</p>\n<h4 id=\"4-iwconfig\"><a class=\"markdownIt-Anchor\" href=\"#4-iwconfig\">#</a> 4. iwconfig</h4>\n<p>iwconfig 工具与 ifconfig 和 ethtool 类似。是用于无线网卡的。你可以用他查看设置基本的 Wi-Fi 网络信息，例如 SSID, channel 和 encryption. 还有其他很多配置你也可以查看和修改，, 包括 接收灵敏度，RTS/CTS, 发送数据包的分片大小，以及无线网卡的重传机制。</p>\n<h4 id=\"5-nslookup\"><a class=\"markdownIt-Anchor\" href=\"#5-nslookup\">#</a> 5. nslookup</h4>\n<p>nslookup 这个命令在 有 ip 地址时，可以用这个命令来显示主机名，可以找到给定域名的所有 ip 地址。而你必须连接到互联网才能使用这个命令。</p>\n<p>例子. nslookup <span class=\"exturl\" data-url=\"aHR0cDovL21hcnNnZS5jbg==\">marsge.cn</span></p>\n<p>你也可以使用 nslookup 从 ip 获得主机名或从主机名获得 ip。</p>\n<h4 id=\"6-traceroute\"><a class=\"markdownIt-Anchor\" href=\"#6-traceroute\">#</a> 6. traceroute</h4>\n<p>一个方便的工具。可用来查看数据包在提交到远程系统或者网站时候所经过的路由器的 IP 地址、跳数和响应时间。同样你必须链接到互联网才能使用这个命令。</p>\n<h4 id=\"7-finger\"><a class=\"markdownIt-Anchor\" href=\"#7-finger\">#</a> 7. finger</h4>\n<p>查看用户信息。显示用户的登录名字、真实名字以及登录终端的名字和登录权限。这是 unix 一个很老的命令，现在已很少使用了。</p>\n<h4 id=\"8-telnet\"><a class=\"markdownIt-Anchor\" href=\"#8-telnet\">#</a> 8. telnet</h4>\n<p>通过 telnet 协议连接目标主机，如果 telnet 连接可以在任一端口上完成即代表着两台主机间的连接良好。<br>\ntelnet hostname port – 使用指定的端口 telnet 主机名。这通常用来测试主机是否在线或者网络是否正常。</p>\n<h4 id=\"9-ethtool\"><a class=\"markdownIt-Anchor\" href=\"#9-ethtool\">#</a> 9. ethtool</h4>\n<p>ethtool 允许你查看和更改网卡的许多设置（不包括 Wi-Fi 网卡）。你可以管理许多高级设置，包括 tx/rx、校验及网络唤醒功能。下面是一些你可能感兴趣的基本命令：</p>\n<p>ethtool -i 显示一个特定网卡的驱动信息，检查软件兼容性时尤其有用</p>\n<p>ethtool -p 启动一个适配器的指定行为，比如让适配器的 LED 灯闪烁，以帮助你在多个适配器或接口中标识接口名称</p>\n<p>ethtool -s 显示网络统计信息</p>\n<p>ethtool speed &lt;10|100|1000&gt; 设置适配器的连接速度，单位是 Mbps</p>\n<h4 id=\"10-netstat\"><a class=\"markdownIt-Anchor\" href=\"#10-netstat\">#</a> 10. netstat</h4>\n<p>发现主机连接最有用最通用的 Linux 命令。你可以使用”netstat -g” 查询该主机订阅的所有多播组（网络）</p>\n<p>netstat -nap | grep port 将会显示使用该端口的应用程序的进程 id</p>\n<p>netstat -a or netstat –all 将会显示包括 TCP 和 UDP 的所有连接</p>\n<p>netstat –tcp or netstat –t 将会显示 TCP 连接</p>\n<p>netstat –udp or netstat –u 将会显示 UDP 连接</p>\n<p>netstat -g 将会显示该主机订阅的所有多播网络。</p>\n<h4 id=\"11ifup\"><a class=\"markdownIt-Anchor\" href=\"#11ifup\">#</a> 11.ifup</h4>\n<p>ifup 命令用于重新启动指定的网络设备。ifup 命令的格式为：ifup 网络设备文件名。</p>\n<h4 id=\"12ifdown\"><a class=\"markdownIt-Anchor\" href=\"#12ifdown\">#</a> 12.ifdown</h4>\n<p>ifdown 命令用于关闭指定的网络设备。ifdown 命令的格式为：ifdown 网络设备文件名。</p>\n<h4 id=\"13mii-tool\"><a class=\"markdownIt-Anchor\" href=\"#13mii-tool\">#</a> 13.mii-tool</h4>\n<p>mii-tool 命令用于查看或修改指定网卡的通信协商方式。</p>\n<h4 id=\"14route\"><a class=\"markdownIt-Anchor\" href=\"#14route\">#</a> 14.route</h4>\n<p>route 命令用于查看或修改主机和网络的路由信息。</p>\n<h4 id=\"15service\"><a class=\"markdownIt-Anchor\" href=\"#15service\">#</a> 15.service</h4>\n<p>service 命令能够将目录 “/etc/init.d/” 中有关网络服务或系统服务脚本程序以一种统一的格式执行，格式为：“service 脚本程序 选项”，常用选项有：status、stop、start、restart。</p>\n<h4 id=\"16ftp\"><a class=\"markdownIt-Anchor\" href=\"#16ftp\">#</a> 16.ftp</h4>\n<p>ftp：既能操作服务器文件又能下载服务器文件<br>\n使用 ftp 复制或传送文件 ftp（File Transfer Protocol）允许用户对远地主机复制文件，用户毋须考虑操作系统类型，即能向或从任何具有 TCP/IP 的系统复制文件。 ftp 命令允许复制目录中的一个文件或所有文件，但不能复制多层 次目录。使用 ftp 时， 必需在远地主机上设有帐户。 当 ftp 注册到远地系统时，并未得到 shell ，而是通过 ftp 命令解释程序同远地主机进行通讯。</p>\n<h3 id=\"32网络配置文件操作\"><a class=\"markdownIt-Anchor\" href=\"#32网络配置文件操作\">#</a> 3.2：网络配置文件操作</h3>\n<p>1、vi /etc/sysconfig/network ：这是一个重要的网络配置文件 NETWORKING=YES ：是否允许 IPv4</p>\n<p>NETWORKING_IPV6=YES ：是否允许 IPv6</p>\n<p>HOSTNAME=RHEL ：配置主机名</p>\n<p>GATEWAY=192.168.202.1 ：配置 IPv4 网关</p>\n<p>2、vi /etc/sysconfig/network-scripts/ifcfg-eth0 ：这是第一个以太网卡的配置文件</p>\n<p>DEVICE=eth0 ：设备名称</p>\n<p>BOOTPROTO=static ：地址获取方式：静态配置</p>\n<p>BROADCAST=192.168.202.255 ：IPv4 广播地址</p>\n<p>HWADDR=00:0C:29:97:2B:B8 ：MAC 地址</p>\n<p>IPADDR=192.168.202.5 ：IPv4 地址</p>\n<p>IPV6ADDR=2001::5/64 ：IPv6 地址</p>\n<p>IPV6INIT=yes ：是否开机时启用 IPv6 配置</p>\n<p>IPV6_AUTOCONF=no ：是否使用 IPv6 地址的自动配置</p>\n<p>NETMASK=255.255.255.0 ：IPv4 子网掩码</p>\n<p>NETWORK=192.168.202.0 ：IPv4 网络地址</p>\n<p>ONBOOT=yes ：是否开机时启用 IPv4 配置</p>\n<p>重新启动网络 service network restart</p>\n<p>3、vi /etc/resolv.conf ：这是 DNS 服务器配置文件</p>\n<p>nameserver 192.168.202.5 ：配置主 DNS 服务器</p>\n<p>nameserver 219.146.0.130 ：配置辅 DNS 服务器</p>\n<p>4、ifconfig ：显示或修改 IP 地址配置</p>\n<p>5、route：显示路由表，配置静态路由</p>\n<p>route add -net 172.16.0.0 netmask 255.255.0.0 dev eth0</p>\n<p>添加了一条静态路由，目标网络为 172.16.0.0，子网掩码为 255.255.0.0，本地出口为 eth0 。</p>\n<p>6、ip：强大的命令</p>\n<p>ip address show：显示 IP 地址配置信息</p>\n<p>ip address add 192.168.202.10 dev eth0：给 eth0 网卡添加一个 IP 地址</p>\n<p>ip address del 192.168.202.10 dev eth0：删除 IP 地址</p>\n<p>ip route show ：显示路由表</p>\n<p>ip route add 172.20.10.0/24 dev eth0：使用本地出口配置静态路由</p>\n<p>ip route add 172.20.20.0/24 via 192.168.202.1：使用下一条 IP 地址配置静态路由</p>\n<p>7、ping：发送 ICMP echo request 测试网络连通性</p>\n<p>ping 192.168.202.1 ：按 Ctrl+C 结束 ping</p>\n<p>8、traceroute：发送递增 TTL 数据包跟踪网络路由</p>\n<p>traceroute -n 219.146.0.130：显示到达 219.146.0.130 经过的所有路由器接口地址，不解析域名</p>\n<p>9、netstat：显示 TCP/UDP/IP 网络连接信息</p>\n<p>netstat -nutlp：显示本机所有监听连接</p>\n<p>netstat -anutlp：显示所有网络连接 socket</p>\n<h2 id=\"4进程与服务\"><a class=\"markdownIt-Anchor\" href=\"#4进程与服务\">#</a> 4：进程与服务</h2>\n<h3 id=\"41进程操作命令\"><a class=\"markdownIt-Anchor\" href=\"#41进程操作命令\">#</a> 4.1：进程操作命令</h3>\n<ul>\n<li>\n<p>pstree: 以树状图的方式展现进程</p>\n</li>\n<li>\n<p>ps: 报告当前系统的进程状态</p>\n</li>\n<li>\n<p>pgrep: 以名称为依据从运行进程队列中查找进程，并显示查找到的进程 id</p>\n</li>\n<li>\n<p>pidof: 查找正在运行进程的 PID</p>\n</li>\n<li>\n<p>uptime: 显示系统总共运行了多长时间和系统的平均负载</p>\n</li>\n<li>\n<p>free: 显示当前系统 未使用的内存空间，已使用的内存空间，内核使用的内存缓冲区</p>\n</li>\n<li>\n<p>kill：结束或杀死进程</p>\n</li>\n</ul>\n<h3 id=\"42服务操作命令\"><a class=\"markdownIt-Anchor\" href=\"#42服务操作命令\">#</a> 4.2：服务操作命令</h3>\n<ul>\n<li>\n<p>top：显示系统中程序得执行状态</p>\n</li>\n<li>\n<p>vmstat：监视虚拟内存</p>\n</li>\n<li>\n<p>ipcs：分析共享内存、信号量和消息队列</p>\n<p>文件的解压缩</p>\n<p>tar  -cvf   文件名   压缩文件</p>\n<p>tar  -xvf   文件名    解压文件</p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/21/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.5%E5%9F%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/",
            "url": "https://sun-spots.github.io/2022/01/21/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.5%E5%9F%9F%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA%E4%B8%8E%E7%AE%A1%E7%90%86/",
            "title": "域环境搭建与管理",
            "date_published": "2022-01-21T15:12:00.188Z",
            "content_html": "<h1 id=\"第五天域环境搭建与管理\"><a class=\"markdownIt-Anchor\" href=\"#第五天域环境搭建与管理\">#</a> 第五天：域环境搭建与管理</h1>\n<h1 id=\"有待修整\"><a class=\"markdownIt-Anchor\" href=\"#有待修整\">#</a> 有待修整…</h1>\n<h1 id=\"一内网渗透基础\"><a class=\"markdownIt-Anchor\" href=\"#一内网渗透基础\">#</a> 一：内网渗透基础</h1>\n<p>内网也是指计算机网络中根据地理范围划分中的局域网 (Local Area Network)，即 <code>内网等同于局域网</code>   。</p>\n<p>内网渗透又叫做后渗透，区别于前渗透的 WEB 渗透，内网渗透是指从获取 WEB 服务器的 shell 之后到拿下内网全部主机的过程叫做内网渗透。</p>\n<ul>\n<li>什么是计算机网络？<br>\n计算机网络是将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接，在网络操作系统，网络管理软件及网络通信协议管理和协调下，实现资源共享和信息传递的计算机系统。</li>\n</ul>\n<h3 id=\"1工作组\"><a class=\"markdownIt-Anchor\" href=\"#1工作组\">#</a> 1: 工作组</h3>\n<p>工作组（Work Group）：将不同的计算机按照功能或部门分别列入到不同的工作组中。</p>\n<ul>\n<li>\n<p>默认工作组： <code>WORKGROUP</code></p>\n</li>\n<li>\n<p>加入工作组时，如果名称不存在就相当于新建了一个工作组</p>\n</li>\n<li>\n<p>工作组没有集中管理的作用，在工作组里的所有计算机都是平等的没有服务器和客户机之分</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624324022852-b6c0ea53-434e-4d64-a26f-5f2797bb4538.png\" alt=\"img\"></p>\n<h3 id=\"2域\"><a class=\"markdownIt-Anchor\" href=\"#2域\">#</a> 2: 域</h3>\n<p>需求：希望某台计算机的账户可以访问每台计算机的资源或者在每台计算机上进行登录！</p>\n<ul>\n<li>\n<p><code>域</code> ：(Domain) 是一个有安全边界的计算机集合。（安全边界：在两个域环境中一个域的用户无法访问另一个域中的资源）</p>\n</li>\n<li>\n<p><code>域</code> ：与工作组相比，域的安全管理控制机制更加严格。</p>\n</li>\n<li>\n<p><code>域控制器</code> ：(Domain Controller,DC) 是域中的一台类似于管理服务器的计算机，类似于单位的门禁系统，负责所有连入的计算机和用户的验证工作。</p>\n</li>\n<li>\n<p><code>域控制器</code> ：存在由这个域的账户。密码。属于这个域的计算机等信息构成的数据库–&gt; <code>活动目录</code> 。</p>\n</li>\n<li>\n<p><code>域控制器</code> ：是整个域的通信枢纽，所有的权限身份验证都在域控制器上进行；简单来说域内所有用来验证身份的账号和密码散列值都保存在域控制器当中–&gt; <code>活动目录</code> 。</p>\n</li>\n</ul>\n<h4 id=\"21域环境分类\"><a class=\"markdownIt-Anchor\" href=\"#21域环境分类\">#</a> 2.1 域环境分类</h4>\n<ol>\n<li>\n<p><code>单域</code> ：一个有安全边界的计算机集合，单域内至少两台域服务器，一台作为 DC 另一台作为备份 DC，活动目录的数据库 (域用户 / 计算机 / 网络设备) 是存储在 DC 中的，没有备份 DC 一旦瘫痪，域内其他用户就不能登录该域。</p>\n</li>\n<li>\n<p><code>父域子域</code> ：第一个域称为父域，各分部的域称为该域名的子域。<br>\n例 1：把不同地点的分公司放在同一个域内，那么主机之间的信息交互花费时间就比较长，占用宽带就比较大。<br>\n例 2：公司某部门希望使用特定的安全策略 (账号密码策略)，就可以将部门作为子域来单独管理。</p>\n</li>\n<li>\n<p><code>域树</code> ：多个域通过建立信任关系组成的集合。</p>\n</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li>两个域之间相互访问，需要建立信任关系；</li>\n<li>在一个域树种，父域可以包含多个子域；</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>一个。代表一个层次，放在最后的子域称之为一级域，前面的子域称之为二级域；</li>\n<li>子域只能使用父域的名字作为其域名的后缀；</li>\n</ul>\n</li>\n</ul>\n<ol>\n<li>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624324022870-c658ef92-75e7-4391-8f99-7301e02fea2a.png\" alt=\"img\"></p>\n</li>\n<li>\n<p><code>域森林</code> ：多个域树通过建立信任关系组成的集合。<br>\n<img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624324022869-f655bf3d-3d3f-46de-a6a7-1e9af98e5860.png\" alt=\"img\"></p>\n</li>\n<li>\n<p><code>域名服务器</code> ：DNS (Domain Name Server) 是指用于实现域名和 IP 地址解析的服务器，分为正向解析与反向解析。</p>\n</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li>正向解析：域名–&gt;IP 地址</li>\n<li>反向解析：IP 地址–&gt; 域名</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>域内计算机使用 DNS 来定位域控制器 / 服务器 / 其他计算机，所以域名 ==&gt;DNS 域的名字</li>\n<li><strong>在内网渗透中，通过寻找 DNS 服务器来确定域控制器的位置</strong>：DNS 服务器和域控制器通常配置在同一台机器上！！！</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"3活动目录\"><a class=\"markdownIt-Anchor\" href=\"#3活动目录\">#</a> 3: 活动目录</h3>\n<p>Active Directory (AD) 是指域环境中提供目录服务的组件，目录用于存储有关网络对象 (用户 / 组 / 计算机 / 共享资源 / 打印机 / 联系人) 的信息。</p>\n<h4 id=\"31活动目录功能\"><a class=\"markdownIt-Anchor\" href=\"#31活动目录功能\">#</a> 3.1 活动目录功能</h4>\n<ul>\n<li>\n<p>账号集中管理：所有账号存储在服务器中，以便执行命令和重置密码；</p>\n</li>\n<li>\n<p>软件集中管理：统一推送软件 (软件安装)，安装网络打印机 (硬件设备)；</p>\n</li>\n<li>\n<p>环境集中管理：统一客户端界面 (统一桌面不知)/IE (安全性策略)/… 等设置；</p>\n</li>\n<li>\n<p>增强安全性：统一部署杀毒软件和病毒扫描任务 / 集中管理用户的计算机权限 / 统一制定用户密码策略等；</p>\n</li>\n<li>\n<p>更可靠，更短的宕机时间：利用活动目录控制用户方位权限</p>\n</li>\n<li>\n<p><strong>活动目录是微软提供的统一管理平台，ISA/Exchange/SMS 等都依赖这个平台</strong></p>\n</li>\n</ul>\n<h3 id=\"4域控和活动目录区别\"><a class=\"markdownIt-Anchor\" href=\"#4域控和活动目录区别\">#</a> 4: 域控和活动目录区别</h3>\n<p><code>活动目录：</code> 将计算机 / 用户 / 用户组 / 打印机 / 共享文件 / 等分别分类存放在数据库中，以便查找，管理和使用这些资源。那么拥有这个层次结构的数据库就是活动目录数据库，简称 AD 库。</p>\n<p><code>域控：</code> 安装了 AD 库就变成了域控 (用于存储活动目录的数据库的计算机)。</p>\n<h3 id=\"5安全域的划分\"><a class=\"markdownIt-Anchor\" href=\"#5安全域的划分\">#</a> 5: 安全域的划分</h3>\n<p>划分安全域的目的是将一组安全等级相同的计算机划入同一网段。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624324022853-2d2f8767-38cb-4443-a1c0-84c01071ee92.png\" alt=\"img\"></p>\n<p>路由器连接的内网中可以划分三个区域：</p>\n<p>1:<strong> 安全级别最高的内网</strong></p>\n<p>2:<strong> 安全级别中等的 DMZ 区域</strong></p>\n<p>3:<strong> 安全级别最低的外网</strong></p>\n<p>三个区域负责完成不同的任务，因此需要设置不同的的网络访问策略，当有 DMZ 区域时我们应定义如下的访问控制策略，以实现屏障保护的功能：</p>\n<ul>\n<li>\n<p>内网可以访问外网：满足内网用户上网查阅资料办公的需求；</p>\n</li>\n<li>\n<p>内网可以访问 DMZ：是管理者可以管理 DMZ 区域当中的服务器设备；</p>\n</li>\n<li>\n<p>外网不能访问内网：内网存储公司重要资料，可以使用 VPN 来访问；</p>\n</li>\n<li>\n<p>外网可以访问 DMZ：DMZ 区域中的服务器对外界提供服务，需要由防火墙来完成对外地址到服务器实际地址的转换；</p>\n</li>\n<li>\n<p>DMZ 不能访问内网：当服务器沦陷保护内网主机不受入侵；</p>\n</li>\n<li>\n<p>DMZ 不能访问外网：限制入侵黑客的通信隧道，邮件服务器除外；</p>\n</li>\n</ul>\n<p><strong>补充</strong></p>\n<ol>\n<li>内网分为 <code>办公区</code> 和 <code>核心区</code></li>\n<li>进入内网的攻击手法： <code>鱼叉攻击；水坑攻击；社会工程学</code></li>\n</ol>\n<h3 id=\"6域内计算机分类\"><a class=\"markdownIt-Anchor\" href=\"#6域内计算机分类\">#</a> 6: 域内计算机分类</h3>\n<p>工作组环境内计算机之间身份是平等的没有服务器和客户机之分，而在域环境下的网络中，则有 <code>域控制器；成员服务器；客户机；独立服务器</code> 之分。</p>\n<ul>\n<li>\n<p>域控制器：用于管理所有的网络访问，包括登录服务器，访问共享目录及资源</p>\n</li>\n<li>\n<p>成员服务器：安全了服务器系统并加入了域，主要任务是提供服务</p>\n</li>\n<li>\n<p>客户机：安装了个人系统的计算机并加入了域</p>\n</li>\n<li>\n<p>独立服务器：能够对外提供服务但是没有加入域</p>\n</li>\n</ul>\n<h3 id=\"7域内权限\"><a class=\"markdownIt-Anchor\" href=\"#7域内权限\">#</a> 7: 域内权限</h3>\n<p>组是用户账号的集合，通过组可以更好的管理用的权限；域环境下有 <code>本地组；全局组；通用组</code> 。</p>\n<table>\n<thead>\n<tr>\n<th>组类型</th>\n<th>主要作用</th>\n<th>嵌套关系</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>本地组</td>\n<td>授予本地域内资源的访问权限</td>\n<td>本地组不能嵌套在其他组中</td>\n</tr>\n<tr>\n<td>全局组</td>\n<td>实现单域用户访问多域资源</td>\n<td>全局组可以嵌套在其他组中</td>\n</tr>\n<tr>\n<td>通用组</td>\n<td>实现域森林的跨域访问资源</td>\n<td>通用组成员可以来自域森林中的任何域的用户 / 全局组和其他通用组</td>\n</tr>\n</tbody>\n</table>\n<p>** 知识点：** 域本地组来自全林，作用于本域；全局组来自本域，作用于全林；通用组来自全林，作用于全林；</p>\n<h4 id=\"71a-g-dl-p策略\"><a class=\"markdownIt-Anchor\" href=\"#71a-g-dl-p策略\">#</a> 7.1A-G-DL-P 策略</h4>\n<p>A-G-DL-P 策略是指将用户账号添加到全局组中，将全局组添加到与本地组中，然后为域本地组分配资源权限；</p>\n<ul>\n<li>\n<p>A：用户账号（Account）</p>\n</li>\n<li>\n<p>G：全局组（Global Group）</p>\n</li>\n<li>\n<p>U：通用组（Univresal Group）</p>\n</li>\n<li>\n<p>DL：域本地组（Domain Local Group）</p>\n</li>\n<li>\n<p>p：资源权限（permssion）</p>\n</li>\n</ul>\n<p>安装域控时，系统会自动生成一些组，为内置组；内置组定义了一些常用的权限–&gt;Builtin 和 Users 组织单元的组就是内置组；</p>\n<ul>\n<li>内置的域本地组在 <code>Builtin</code>  组织单元中</li>\n<li>内置的全局组和通用组在 <code>Users</code>  组织单元中</li>\n</ul>\n<table>\n<thead>\n<tr>\n<th>域本地组</th>\n<th>权限</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>administrators</td>\n<td>管理员组，成员可以不受限制的的存取计算机和域内的资源</td>\n</tr>\n<tr>\n<td>Remote Desktop Users</td>\n<td>远程登录组，成员具有远程登录权限</td>\n</tr>\n<tr>\n<td>Account Operators</td>\n<td>账号操作员组，创建和管理域内用户和组，不能更改 administrators 和 Domain Admins 组账户</td>\n</tr>\n<tr>\n<td>Domain Admins</td>\n<td>域管理员组，成员在所有加入域的服务器 / 域控和 AD 中均默认拥有完整的管理员权限，用户称为域系统管理员可加入</td>\n</tr>\n<tr>\n<td>Domain Users</td>\n<td>域用户组，默认是内置域的 User 组的成员</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"二内网环境搭建\"><a class=\"markdownIt-Anchor\" href=\"#二内网环境搭建\">#</a> 二：内网环境搭建</h1>\n<p>通常所说的内网渗透测试很大程度上就是域渗透测试</p>\n<h4 id=\"1网络拓扑\"><a class=\"markdownIt-Anchor\" href=\"#1网络拓扑\">#</a> 1: 网络拓扑</h4>\n<table>\n<thead>\n<tr>\n<th>操作系统</th>\n<th>安装服务</th>\n<th>计算机名</th>\n<th>IP 地址</th>\n<th>DNS 服务器地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows server 2012 R2</td>\n<td>AD/DC</td>\n<td>DC</td>\n<td>192.168.1.1</td>\n<td>192.168.1.1</td>\n</tr>\n<tr>\n<td>Windows server 2012 R2</td>\n<td>加入域</td>\n<td>WEB</td>\n<td>192.168.1.2</td>\n<td>192.168.1.1</td>\n</tr>\n<tr>\n<td>Windows 10</td>\n<td>加入域</td>\n<td>WIN10</td>\n<td>192.168.1.3</td>\n<td>192.168.1.1</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"2搭建步骤\"><a class=\"markdownIt-Anchor\" href=\"#2搭建步骤\">#</a> 2: 搭建步骤</h4>\n<p><strong>Windows server 2012R2 操作流程</strong></p>\n<p>更改 IP 地址–&gt; 更改计算机名–&gt; 安装域控和 DNS 服务–&gt; 升级服务器–&gt; 创建 AD 域–&gt; 创建用户</p>\n<p><strong>windows server 2008R2 操作流程</strong></p>\n<p>更改 IP 地址与 DNS 服务器地址–&gt; 更改计算机名–&gt; 加入域</p>\n<p><strong>windows7 操作流程</strong></p>\n<p>更改 IP 地址与 DNS 服务器地址–&gt; 更改计算机名–&gt; 加入域</p>\n<p><strong>&gt;&gt;&gt;<strong> 详细操作请看：域环境搭建</strong> &lt;&lt;&lt;</strong></p>\n<h4 id=\"3扩展知识点\"><a class=\"markdownIt-Anchor\" href=\"#3扩展知识点\">#</a> 3. 扩展知识点</h4>\n<p>搭建具有漏洞的环境，更好的模拟内网入侵的过程</p>\n<table>\n<thead>\n<tr>\n<th>漏洞靶场</th>\n<th>环境描述</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Metasploit2</td>\n<td>一个 Ubuntu Linux 的虚拟机，内置了常见的漏洞其默认的用户名和密码都是 msfadmin；</td>\n</tr>\n<tr>\n<td>Metasploit3</td>\n<td>Metasploit3 的升级版，默认密码还是 msfadmin</td>\n</tr>\n<tr>\n<td>OWASPBWA</td>\n<td>一款基于虚拟机的渗透测试工具，提供一个存在大量漏洞的网站应用程序环境</td>\n</tr>\n<tr>\n<td>DVWA</td>\n<td>显而易见这是个 WEB 漏洞靶场…</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.2FTP-DNS%E6%9C%8D%E5%8A%A1/",
            "url": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.2FTP-DNS%E6%9C%8D%E5%8A%A1/",
            "title": "FTP/DNS服务",
            "date_published": "2022-01-19T10:29:52.065Z",
            "content_html": "<h1 id=\"第二天ftpdns服务\"><a class=\"markdownIt-Anchor\" href=\"#第二天ftpdns服务\">#</a> 第二天：FTP/DNS 服务</h1>\n<h1 id=\"一ftp服务\"><a class=\"markdownIt-Anchor\" href=\"#一ftp服务\">#</a> 一：FTP 服务</h1>\n<p>FTP 是 File Transfer Protocol（文件传输协议）的缩写，用来在两台计算机之间互相传送文件。相比于 HTTP，FTP 协议要复杂得多。复杂的原因，是因为 FTP 协议要用到两个 TCP 连接，一个是命令链路，用来在 FTP 客户端与服务器之间传递命令；另一个是数据链路，用来上传或下载数据。</p>\n<p>20 号端口用来传输数据，21 号端口用来传输指令。</p>\n<p>》》》http 协议，ftp 协议，邮件协议（smtp，pop）最早的三个应用级协议《《《</p>\n<p>基于 C/S 结构：FTP 服务与客户端连接采用双通道连接协议，一个通道负责传输指令连接以及协商数据传输的随机端口，一个通道负责传输数据连接</p>\n<p>FTP 协议有两种工作方式：PORT 方式和 PASV 方式，中文意思为主动式和被动式。<br>\nPORT（主动）方式的连接过程是：客户端向服务器的 FTP 端口（默认是 21）发送连接请求，服务器接受连接，建立一条命令链路。当需要传送数据时，客户端在命令链路上用 PORT 命令告诉服务器：“我打开了 XXXX 端口，你过来连接我”。于是服务器从 20 端口向客户端的 XXXX 端口发送连接请求，建立一条数据链路来传送数据。<br>\nPASV（被动）方式的连接过程是：客户端向服务器的 FTP 端口（默认是 21）发送连接请求，服务器接受连接，建立一条命令链路。当需要传送数据时，服务器在命令链路上用 PASV 命令告诉客户端：“我打开了 XXXX 端口，你过来连接我”。于是客户端向服务器的 XXXX 端口发送连接请求，建立一条数据链路来传送数据。</p>\n<h3 id=\"11ftp软件介绍\"><a class=\"markdownIt-Anchor\" href=\"#11ftp软件介绍\">#</a> 1.1：FTP 软件介绍</h3>\n<p>FTP 服务器：<br>\nWu-ftpd，Proftpd，Pureftpd，ServU，IIS<br>\nvsftpd:Very Secure FTP Daemon，CentOS 默认 FTP 服务器 高速，稳定，下载速度是 WU-FTP 的两倍 ftp,redhat.com 数据：单机最多可支持 15000 个并发</p>\n<p>客户端软件： ftp，lftp，lftpget，wget，curl<br>\nftp -A ftpserver port -A 主动模式 –p 被动模式<br>\n lftp –u username ftpserver<br>\nlftp username@ftpserver<br>\nlftpget <span class=\"exturl\" data-url=\"ZnRwOi8vZnRwc2VydmVyL3B1Yi9maWxl\">ftp://ftpserver/pub/file</span><br>\ngftp: GUI centos5 最新版 2.0.19 (11/30/2008)<br>\n filezilla（开源免费的 linuxftp 客户端软件，支持 ssh 协议），CuteFtp，FlashFXP，LeapFtp<br>\nIE <span class=\"exturl\" data-url=\"ZnRwOi8vdXNlcm5hbWU6cGFzc3dvcmRAZnRwc2VydmVy\">ftp://username:password@ftpserver</span></p>\n<h3 id=\"12ftp服务介绍\"><a class=\"markdownIt-Anchor\" href=\"#12ftp服务介绍\">#</a> 1.2：FTP 服务介绍</h3>\n<p>1XX：信息 125：数据连接打开<br>\n 2XX：成功类状态 200：命令 OK 230：登录成功<br>\n 3XX：补充类 331：用户名 OK<br>\n4XX：客户端错误 425：不能打开数据连接<br>\n 5XX：服务器错误 530：不能登录</p>\n<h3 id=\"13基本ftp服务搭建\"><a class=\"markdownIt-Anchor\" href=\"#13基本ftp服务搭建\">#</a> 1.3：基本 FTP 服务搭建</h3>\n<p>步骤一：在 Windows server 2012R2 中打开服务器管理器–&gt; 点击 ** 添加角色与功能–&gt;** 一路回车到达选择服务器角色界面勾上 FTP 服务–&gt; 一路回车到达安装界面点击安装即可。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473229730-08b73c62-c33d-4942-8d42-69ebb93dccb8.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473264525-ffa9789a-972d-42d8-9213-cbb553cd6b75.png\" alt=\"img\"></p>\n<p>步骤二：创建相关的用户 (ftpadmin) 和组 (ftpuser) 并将创建的用户添加到 ftpuser 组中，方便进行统一的权限管理。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473423755-270ff1ef-ff63-481d-badf-3f71f50f213c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473472481-efa87e97-cf44-4573-abb6-2c3fd0d04068.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473520827-0ce5e79e-5a9f-43e1-9544-d0684319b07b.png\" alt=\"img\"></p>\n<p>步骤三：创建 FTP 站点并进行相关配置</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473675531-fce4a2b5-d4eb-4e9f-bd3e-fddae37a8f2d.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473704430-3b551762-3276-4107-9065-fda2fb0f2324.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473755097-4ccfec89-cf17-439b-b651-107d39a25123.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473810392-1d54e976-8d0f-4579-9952-1ff244eb5f9d.png\" alt=\"img\"><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625473832468-93d47636-1799-4b1b-a2dd-f38c3014bb43.png\" alt=\"img\"></p>\n<p>第四部：在客户端 IE 浏览器中访问 <code>ftp://192.168.0.240/</code>  并进行登录验证，再使用 Winscp 等 FTP 客户端工具对其目录中写入文件，并回到服务器进行验证！！！</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625531518742-21012f4b-7db3-4a34-8881-baa3861c2f21.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625531524834-fd362a41-e75c-4ab5-adf6-120182f83e8f.png\" alt=\"img\"><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625531533293-3898b987-a175-4857-a5cb-9e8d620dab0b.png\" alt=\"img\"></p>\n<p>1.x：待扩展</p>\n<h1 id=\"二dns服务\"><a class=\"markdownIt-Anchor\" href=\"#二dns服务\">#</a> 二：DNS 服务</h1>\n<p>DNS (Domain Name System) 是 “域名系统” 的英文缩写，是一种组织成域层次结构的计算机和网络服务命名系统，使用的是 UDP 协议的 53 号端口，它用于 TCP/IP 网络，它所提供的服务是用来将主机名和域名转换为 IP 地址的工作。DNS 就是这样的一位 “翻译官”，它的基本工作原理可用下图来表示。</p>\n<p>DNS 服务一般分为正向解析与反向解析</p>\n<p>正向解析：域名–&gt;IP 地址</p>\n<p>反向解析：IP 地址–&gt; 域名</p>\n<h3 id=\"21搭建dns服务\"><a class=\"markdownIt-Anchor\" href=\"#21搭建dns服务\">#</a> 2.1：搭建 DNS 服务</h3>\n<p>步骤一：配置好静态 IP 地址，并将 DNS 服务器地址改为本地的回环地址；打开服务器管理器–&gt; 添加角色和功能–&gt; 一路回车到达选择服务器角色页面勾选 DNS 服务器并继续…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625532431445-857dd129-6e95-4d77-a017-73dba5c9e8d5.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625533844314-d4bcd58c-d2cb-4273-9965-3c5766b29716.png\" alt=\"img\"></p>\n<p>步骤二：继续并且到安装界面进行安装–&gt; 安装完成后点击服务器管理器–&gt; 工具–&gt;DNS 之后打开 DNS 控制台界面…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625532572754-c6698643-d1f8-4d96-9dc5-111a52ed90b9.png\" alt=\"img\"><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625533181518-3f352e3e-bc79-49c5-9a33-638022c53f19.png\" alt=\"img\"></p>\n<h3 id=\"22正向解析\"><a class=\"markdownIt-Anchor\" href=\"#22正向解析\">#</a> 2.2：正向解析</h3>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>服务器</th>\n<th>客户机</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>IP 地址</td>\n<td>192.168.0.40</td>\n<td>192.168.0.</td>\n</tr>\n<tr>\n<td>安装服务</td>\n<td>DNS/WEB</td>\n<td>无</td>\n</tr>\n<tr>\n<td>DNS 指向地址</td>\n<td>127.0.0.1</td>\n<td>192.168.0.40</td>\n</tr>\n</tbody>\n</table>\n<p>步骤一：在客户端中使用浏览器通过 IP 地址访问服务器已搭建好的 WEB 服务，并将 DNS 服务器地址指向服务器！</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625533808650-fd72b15c-dae0-47ee-be04-e69bea574518.png\" alt=\"img\"></p>\n<p>步骤二：在服务器管理中–工具–&gt;DNS 服务–&gt; 正向查找区域右键–&gt; 新建区域–&gt; 区域类型选择主要区域–&gt; 区域名称自定–一路回车默认安装</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625533986914-1d55e4cf-2f38-46ac-9526-7ad7e541b7c4.png\" alt=\"img\"><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534006466-40e4bb33-a627-4f21-9e12-4eb7aa7af2e2.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534110005-3651f0ac-8456-4227-bc38-df3980f90426.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534142913-82bf2076-6b0f-4c37-9061-4165f0bff149.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534152023-ee6c4ae6-d21d-4dbd-9dd8-ff8d87f73196.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534161793-138d5593-e031-469b-966c-dd67446325e5.png\" alt=\"img\"></p>\n<p>步骤三：点进刚才创建的区域 warsec.com 并新建主机记录即可创建正向解析</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534227241-dbdd649e-9732-4114-b10c-80fe835984ad.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534297716-967d4fcc-b8b1-458c-8076-c1db99f6085c.png\" alt=\"img\"></p>\n<p>步骤四：创建好主机记录后再客户机再浏览器中使用域名进行访问访问成功即可…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534401666-11840034-a416-4323-9f48-95130009acf1.png\" alt=\"img\"></p>\n<h3 id=\"23反向解析\"><a class=\"markdownIt-Anchor\" href=\"#23反向解析\">#</a> 2.3：反向解析</h3>\n<p>&gt;&gt;&gt; 使用环境延续正向解析环境 &lt;&lt;&lt;</p>\n<p>步骤一：DNS 管理器控制面板中右键反向查找区域并新建区域–&gt; 主要区域–&gt;IPV4 反向查找区域–&gt; 网络 ID–&gt;… 完成</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534552583-279002c4-347f-4f58-b744-0bdcda7276df.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534564915-85089af6-5f28-476e-9b58-e3b3daaf2c77.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534576354-ded72d80-e157-4b7a-a74c-067b76ce09bd.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534585593-9d264c2e-fcb2-4eec-b9db-968bc10cf0bf.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534594451-f29affbb-c308-485c-a2ed-53ef053b0860.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534603489-2e9734f0-b8e4-45e7-ba2b-685cc883cbcc.png\" alt=\"img\"></p>\n<p>步骤二：反向查找区出创建好后点击进去并右键新建指针–&gt; 填写好 IP 地址并选定好主机名–&gt; 完成…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534725734-7531496d-6e7f-45cf-b099-2210243c3873.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534783663-e40eaabc-8484-4774-a797-2f7d24eb7ba2.png\" alt=\"img\"></p>\n<p>步骤三：在客户端 CMD 里使用 nslookup 命令进行反向解析测试…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625534930448-1e947106-f7b9-41ee-8000-fe13da96897d.png\" alt=\"img\"></p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.1WEB-CA%E8%AF%81%E4%B9%A6/",
            "url": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.1WEB-CA%E8%AF%81%E4%B9%A6/",
            "title": "WEB/CA证书",
            "date_published": "2022-01-19T10:27:16.093Z",
            "content_html": "<h1 id=\"第一天webca证书\"><a class=\"markdownIt-Anchor\" href=\"#第一天webca证书\">#</a> 第一天：WEB/CA 证书</h1>\n<h1 id=\"一http服务\"><a class=\"markdownIt-Anchor\" href=\"#一http服务\">#</a> 一：HTTP 服务</h1>\n<p>IIS 说的是互联网信息服务，全名：Internet Information Services。是微软提供的基于运行 Windows 的互联网基本服务。基本的 windows 版本都支持 IIS 配置，XP,win8 等家庭版的 IIS 一般只够支持开发等小团队使用。windows 服务版支持发布站点使用。</p>\n<h3 id=\"实验一搭建http服务\"><a class=\"markdownIt-Anchor\" href=\"#实验一搭建http服务\">#</a> 实验一：搭建 HTTP 服务</h3>\n<table>\n<thead>\n<tr>\n<th>服务器 IP 地址</th>\n<th>服务器操作系统</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>192.168.1.225</td>\n<td>Windows server 2012R2</td>\n</tr>\n</tbody>\n</table>\n<p>步骤一：打开服务器管理器 (cmd：servermanager)–&gt; 选择<strong>添加角色和功能</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624932711467-5d4c5cb5-332b-4ffc-bea1-1f26169ac773.png\" alt=\"img\"></p>\n<p>步骤二：一路回车到<strong>服务器角色</strong>，选择 WEB 服务 (IIS)</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624932895168-eb19f35b-b994-4df4-aae2-0bac93d5f6ed.png\" alt=\"img\"></p>\n<p>步骤三：在角色服务中根绝不同的需求进行添加，一般选择默认即可</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624933120813-1776a570-d64f-4a42-adcf-1f7d2b4fdfae.png\" alt=\"img\"></p>\n<p>步骤四：一路回车等待安装成功并在服务器管理器–&gt; 工具–&gt;Internet Information Servers (iis) 管理器打开 IIS 的控制台并在客户机器浏览器中访问</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624933354992-9bcd2fb0-9bf9-4b6b-9114-87f9387dbe41.png\" alt=\"img\"></p>\n<h3 id=\"实验二创建http站点\"><a class=\"markdownIt-Anchor\" href=\"#实验二创建http站点\">#</a> 实验二：创建 HTTP 站点</h3>\n<p>步骤一：打开 IIS 控制台 (Inetmgr)–&gt; 网站列表右键–&gt; 新建网站</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624933923177-27fd9217-e55b-4691-b238-8eabe5f8f776.png\" alt=\"img\"></p>\n<p>步骤二：在网站根目录下创建网站的首页文件 index.html 并在客户端进行访问</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624934073547-b0e8a3ac-6ac9-4272-848b-cea706f53b3f.png\" alt=\"img\"></p>\n<h3 id=\"实验三创建虚拟目录\"><a class=\"markdownIt-Anchor\" href=\"#实验三创建虚拟目录\">#</a> 实验三：创建虚拟目录</h3>\n<p>步骤一：在刚才已经创建好的网站右键–&gt; 添加虚拟目录–&gt; 别名为访问该虚拟目录路径–&gt; 指定虚拟目录的物理路径创建好之后在该网站下会出现文件夹的链接</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624934438118-00862ff8-b6bd-42ba-906e-2510b78b7218.png\" alt=\"img\"></p>\n<p>步骤二：客户端访问并验证</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624934530522-10d10b36-27b6-4aa7-8e00-40901a3c1053.png\" alt=\"img\"></p>\n<h3 id=\"实验四iis搭建多个站点\"><a class=\"markdownIt-Anchor\" href=\"#实验四iis搭建多个站点\">#</a> 实验四：IIS 搭建多个站点</h3>\n<ul>\n<li>\n<p><strong>相同<strong><strong> IP</strong></strong> 不同端口配置</strong></p>\n</li>\n<li>\n<p><strong>不同的<strong><strong> IP</strong></strong> 相同的端口配置</strong></p>\n</li>\n<li>\n<p><strong>相同的<strong><strong> IP</strong></strong> 相同的端口显示不同的网站（可不做）</strong></p>\n</li>\n</ul>\n<ol>\n<li>相同 IP 不同端口配置验证</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624966366968-b79aab09-c90b-4a11-b49b-b71eb77283eb.png\" alt=\"img\"></p>\n<ol>\n<li>不同的 IP 相同的端口配置验证</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624966637176-f0b7a8e2-e517-4dce-85df-d2baf8492d15.png\" alt=\"img\"></p>\n<ol>\n<li>相同的 IP 相同的端口显示不同的网站验证 (可不做)</li>\n</ol>\n<p>详细步骤：在 DNS 服务其中创建两个区域分别创建两条主机记录，在从站点基本设置中绑定不同的域名设置好客户端的 DNS 服务器测试.</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624967295401-8093aad5-72b9-4268-a91e-38986430c11d.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624967377848-9190d5ad-7457-440f-b230-5f4f3d9f34b4.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624967224052-6159b27f-ee46-42f2-acdd-676e885d44aa.png\" alt=\"img\"></p>\n<h3 id=\"实验五ip地址黑白名单\"><a class=\"markdownIt-Anchor\" href=\"#实验五ip地址黑白名单\">#</a> 实验五：IP 地址黑白名单</h3>\n<p>步骤一：在网站主页选择<strong> IP 地址和域限制</strong>并打开功能–&gt; 添加允许条目为白名单 / 添加拒绝条目为黑名单</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624934873837-92624c5f-16d9-4f4f-a451-83370839594c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624935551843-8b851406-e39e-4676-b4a8-d6e5750e5be1.png\" alt=\"img\"></p>\n<p>步骤二：添加好拒绝条目之后重启站点并在客户端浏览器访问验证</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624935664426-90336449-6971-4e1f-82ef-9ed0e362dcdb.png\" alt=\"img\"></p>\n<h3 id=\"实验六搭建aspaccess站点\"><a class=\"markdownIt-Anchor\" href=\"#实验六搭建aspaccess站点\">#</a> 实验六：搭建 ASP+Access 站点</h3>\n<table>\n<thead>\n<tr>\n<th>服务器 IP 地址</th>\n<th>服务器系统</th>\n<th>CMS 源码</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>192.168.1.</td>\n<td>Windows server 2012 R2</td>\n<td>天人文章管理系统 5.8</td>\n</tr>\n</tbody>\n</table>\n<p>CMS 源码下载地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubXljb2Rlcy5uZXQvMjEvODcxOS5odG0=\">https://www.mycodes.net/21/8719.htm</span></p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：https://pan.baidu.com/s/<span class=\"number\">1</span>G6lu9043AcGF2NcjDNDEbQ </span><br><span class=\"line\">提取码：<span class=\"number\">54</span>fl</span><br></pre></td></tr></table></figure>\n<p>步骤一：将源码文件复制到 C 盘网站存放目录下</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624956726197-eb1f2b37-6856-48bc-9f05-a31e78658bb9.png\" alt=\"img\"></p>\n<p>步骤二：在 IIS 控制台网站列表右键–&gt; 新建站点–&gt; 填写好各个选项</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624964572198-ab7e1aa3-8d04-41b8-9fa6-41c381806802.png\" alt=\"img\"></p>\n<p>步骤三：来到天人网站的主页点进 ASP–&gt;** 启用父路径–&gt;** 若找不到请重新安装 IIS 的 ASP 组件</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624964747736-e8d22653-9104-4e7d-8aa8-57122b7af02f.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624964768985-19c3d8ad-ba43-4d72-a47b-868cd09fad0e.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624956545922-c8da3437-8c62-4c81-b0f3-5e088a4628d2.png\" alt=\"img\"></p>\n<p>步骤四：再次来到天人网站的主页–&gt; 点进默认文档–添加该 CMS 的首页文件 <code>index.asp</code></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624964965068-a8ed49d5-ae14-460c-92b0-e2e5384e2f79.png\" alt=\"img\"></p>\n<p>步骤五：再次来到天人网站的主页–&gt; 点进目录浏览–选择启用</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624965194503-cab35d63-8ba3-414b-a1c4-4536f667ed4d.png\" alt=\"img\"></p>\n<p>步骤六：点击 IIS 控制器的应用程序池–&gt; 点击 DefaultAppPool–&gt; 点击右边的高级设置–&gt; 将<strong>启用 32 位应用程序</strong>改为 True</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624965396682-682dee72-6a52-49e0-bd20-0d7597e45807.png\" alt=\"img\"></p>\n<p>步骤七：右键天人网站–&gt; 编辑权限–&gt; 选择安全选项卡–&gt; 编辑–&gt; 添加–&gt; 输入 everyone–&gt; 确定–&gt; 给上所有权限–&gt; 重启站点</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624965516792-2e1a1b3b-1671-4c0e-9c14-01993946bbb1.png\" alt=\"img\"></p>\n<p>第八步：访问网站并验证是否搭建成功</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624965565965-c4028b18-525c-4895-9910-f179bfc89aad.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624965597341-bf2b76b4-3a87-4534-a9be-81b81c738843.png\" alt=\"img\"></p>\n<h3 id=\"实验七搭建aspmssql站点\"><a class=\"markdownIt-Anchor\" href=\"#实验七搭建aspmssql站点\">#</a> 实验七：搭建 ASP+Mssql 站点</h3>\n<table>\n<thead>\n<tr>\n<th>操作系统</th>\n<th>数据库操作系统</th>\n<th>源码程序</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows server 2012R2</td>\n<td>SQL Server 2012</td>\n<td>MSSQL-SQLi-Labs-master</td>\n</tr>\n</tbody>\n</table>\n<p>MSSQLi-labs 下载：</p>\n<figure class=\"highlight erlang\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">链接：https://pan.baidu.com/s/<span class=\"number\">1</span>bMEyvEScAZrEAqn26wB2gA </span><br><span class=\"line\">提取码：<span class=\"number\">54</span>fl</span><br></pre></td></tr></table></figure>\n<p>步骤一：搭建好 SQLServer 数据库，并做验证可参照下级目录的 <code>扩展：MSSQL数据库的安装</code></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1624972006387-a4b9169d-0c0b-40ba-ad61-79a419c106f4.png\" alt=\"img\"></p>\n<p>步骤二：进入数据库创建 test 数据库，作为网站程序要连接的数据库</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625015748098-d19aec5a-ff3f-420c-b188-483c016b457e.png\" alt=\"img\"></p>\n<p>步骤三：下载 MSSQLi-Labs 复制到服务器的网站根目录下进行同上的 ASP 站点的配置；修改 <code>config.asp</code>  文件中的配置信息</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625015900888-80f0ee98-c3f6-402f-85c5-c1cf319dcba2.png\" alt=\"img\"></p>\n<p>步骤四：访问网站并进行安装该靶场…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625015951169-b146ab56-22f5-46bc-a614-3de7fd418c0c.png\" alt=\"img\"></p>\n<h3 id=\"img\"><a class=\"markdownIt-Anchor\" href=\"#img\">#</a> <img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625015964657-026e47d6-3cc9-47a7-9c0a-360657cfdd49.png\" alt=\"img\"></h3>\n<h3 id=\"实验八脱裤与数据验证\"><a class=\"markdownIt-Anchor\" href=\"#实验八脱裤与数据验证\">#</a> 实验八：脱裤与数据验证</h3>\n<p>冷少遇到了一个问题，入侵了一台服务器但是想要把数据给脱下来，请问怎样实施 (手动狗头)</p>\n<p>脱裤：使用 Navicat Premium 进行连接并对数据库中的数据库中的表进行导出得到 x.sql 数据文件</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625044188866-b726414e-46a5-4e22-813f-c25a2bf2b9be.png\" alt=\"img\"></p>\n<p>数据验证：等待素材</p>\n<h1 id=\"二https服务\"><a class=\"markdownIt-Anchor\" href=\"#二https服务\">#</a> 二：HTTPS 服务</h1>\n<p>现在的互联网越来越重视网络安全方面的内容，像我们日常生活中浏览的网上银行网站等涉及安全的你都会发现有 https 的标志出现，在 URL 前加 https:// 前缀表明是用 SSL 加密的。 你的电脑与服务器之间收发的信息传输将更加安全。它实际上是对网站进行了加密保护。Web 服务器启用 SSL 需要获得一个服务器证书并将该证书与要使用 SSL 的服务器绑定。http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80, 后者是 443。HTTPS 协议是由 SSL+HTTP 协议构建的可进行加密传输、身份认证的网络协议要比 http 协议安全.</p>\n<ul>\n<li>SSL（Security Socket Layer）全称是加密套接字协议层，它位于 HTTP 协议层和 TCP 协议层之间，用于建立用户与服务器之间的加密通信，确保所传递信息的安全性，同时 SSL 安全机制是依靠数字证书来实现的。</li>\n<li>SSL 基于公用密钥和私人密钥，用户使用公用密钥来加密数据，但解密数据必须使用相应的私人密钥。使用 SSL 安全机制的通信过程如下：用户与 IIS 服务器建立连接后，服务器会把数字证书与公用密钥发送给用户，用户端生成会话密钥，并用公共密钥对会话密钥进行加密，然后传递给服务器，服务器端用私人密钥进行解密，这样，用户端和服务器端就建立了一条安全通道，只有 SSL 允许的用户才能与 IIS 服务器进行通信。</li>\n</ul>\n<p>提示：SSL 网站不同于一般的 Web 站点，它使用的是 “HTTPS” 协议，而不是普通的 “HTTP” 协议。因此它的 URL（统一资源定位器）格式为 “https：// 网站域名”。</p>\n<h3 id=\"实验一ca证书服务搭建\"><a class=\"markdownIt-Anchor\" href=\"#实验一ca证书服务搭建\">#</a> 实验一：CA 证书服务搭建</h3>\n<table>\n<thead>\n<tr>\n<th>服务器操作系统</th>\n<th>角色服务</th>\n<th>IP 地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows server 2012 r2</td>\n<td>CA 证书服务器</td>\n<td>192.168.0.</td>\n</tr>\n<tr>\n<td>Windows server 2012 r2</td>\n<td>WEB 服务器</td>\n<td>192.168.0.</td>\n</tr>\n<tr>\n<td>Windows 7</td>\n<td>客户端验证</td>\n<td>192.168.0.</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"准备一域服务搭建\"><a class=\"markdownIt-Anchor\" href=\"#准备一域服务搭建\">#</a> 准备一：域服务搭建</h4>\n<p>步骤一：搭建 CA 证书服务器，设置固定 IP 地址 (192.168.0.) 与主机名 (DC) 打开服务器管理器–&gt; 点击<strong>添加角色和功能</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121170850-d80c07c3-ae5c-4935-a148-95ea0e13e264.png\" alt=\"img\"></p>\n<p>步骤二：一路回车到达选择服务器角色位置，选中<strong> Active Directory 域服务</strong>继续下一步并进行安装</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121331921-8e3cd691-76a8-4d47-83c3-ce2882a24194.png\" alt=\"img\"></p>\n<p>步骤三：在服务器管理器小旗中选中将此服务器提升为域控制器–在开始界面选择创建新林为 laosec.cn 并依次往下配置</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121353804-979579f1-a5da-4b9d-9085-521379c11971.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121412068-b0647e7f-b789-4bff-8f0f-cd83a2cc9729.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121459146-cc34dd50-7680-436c-9ef3-a949647e76a2.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121504394-93cb834c-b4d5-4722-bc84-9adea4a6cbad.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625121571022-3840b01a-8467-464e-9ed7-0c670135e8b4.png\" alt=\"img\"></p>\n<p>安装完成后重启即可！！！</p>\n<h4 id=\"准备二ca证书服务搭建\"><a class=\"markdownIt-Anchor\" href=\"#准备二ca证书服务搭建\">#</a> 准备二：CA 证书服务搭建</h4>\n<p>步骤一：打开服务器管理器点击–&gt; 添加角色和功能–&gt; 一路回车到选择服务器角色选择 Active Directory 证书服务并继续下一步</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625122661591-525b65aa-66b6-4c42-bc61-86734ccbc341.png\" alt=\"img\"></p>\n<p>步骤二：在选择角色服务中勾选一下内容，一路回车安装即可。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625122712728-247a267f-af2a-46f3-a8d9-20bf43d1f3a4.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625122780359-93de1572-654b-4518-8937-87827af660c8.png\" alt=\"img\"></p>\n<p>步骤三：直接点击安装完成界面上的<strong>配置目标服务器上的 Active Directory 证书服务</strong>即可。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128511813-3ab62b7a-900a-4c27-9e72-103200855d69.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128650525-1bca3d18-3f01-408d-8a45-c4ec1dbfcfc5.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128677643-98bfa647-ed8a-4620-b2c4-a884a341c1cf.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128692281-bc4bcef2-95e1-446a-9b94-5b6012796e1c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128802175-43064bae-ab19-4496-a6a0-7346e5d5b940.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128814613-83ea50cd-ece1-4051-8a75-4d0ebb8983c7.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128825287-a89a7f99-2067-4e2c-ade0-f5775217c2b6.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128837899-11ea50dc-2815-4e21-8bb1-1b768acde4ce.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128975974-4c1d1e38-d597-45c6-8549-8804e7e6af88.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625128991571-02a55755-4c43-42d2-a28d-5debb7973f6b.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129019909-953e3c7e-0a31-442e-9bfd-dd99704458d8.png\" alt=\"img\"></p>\n<p>步骤四：此时 CA 证书服务安装配置成功。从主界面右上角工具栏中打开证书颁发机构，可以看到里面存在证书模板这一项，表示配置成功</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129088259-1dae8fc4-0be2-4b15-b1e4-29dda8cc7841.png\" alt=\"img\"></p>\n<h4 id=\"准备三在iis中添加签名证书\"><a class=\"markdownIt-Anchor\" href=\"#准备三在iis中添加签名证书\">#</a> 准备三：在 IIS 中添加签名证书</h4>\n<p>步骤一：在第二台 Windows server 2012R2 机器中打开 IIS 管理控制台，点进<strong>服务器证书</strong>页面</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129356637-0885717a-ddcc-4f72-835e-49a7812eaa2d.png\" alt=\"img\"></p>\n<p>步骤二：点击创建证书申请–&gt; 在申请证书界面填写好相对应信息，下一步选择好位置创建 certsrv.txt 文件</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129431893-bea352ea-5b24-4aba-960e-401f9fad0bb6.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129525077-8a157462-7821-412e-a02c-e5fd39e9e9fc.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129649107-213c038a-040f-45c3-a050-27fac222feca.png\" alt=\"img\"></p>\n<p>步骤三：打开 certsrv.txt 文档，并复制里面内容；访问 CA 证书服务器 <code>http://192.168.0.27/certsrv</code></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625129798358-f83e810a-1f32-4223-87d4-78c255b5ec96.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130029585-3b22160b-909d-4885-b1e3-cecea29ead47.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130073968-4fce462a-9617-4dad-be96-38ed0e58e432.png\" alt=\"img\"></p>\n<p>步骤四：选择申请证书–&gt; 在选择高级证书申请–&gt; 在选择使用 base64 编码申请</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130213056-383f2d8c-92bf-4e74-ae59-4bd94c01c7cc.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130226190-3c44215c-a51f-4edc-a1b4-0d155092ff9e.png\" alt=\"img\"></p>\n<p>步骤五：将之前文档中复制的所有内容粘贴到文本框中，证书模板选择 “WEB 服务器 “，并提交申请。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130433184-f771c2e3-c0a0-47cc-9932-9fc45fa55738.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130445666-e1e38d4f-f304-416d-9d47-5a8aae819c93.png\" alt=\"img\"></p>\n<p>步骤六：先选择<strong>下载证书</strong>到本地，然后打开 IIS 管理器，完成证书申请</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130534795-612eb09c-7647-41f8-8584-14f8eb6777c2.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130563994-ff3a0f26-5c90-4c7a-92f2-03f989f52af9.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625130606311-e99dba2e-7642-4a9a-92fe-a5e752feafff.png\" alt=\"img\"></p>\n<p>步骤六：在 IIS 里面通过对 https 进行设置 ssl 证书为新添加的证书</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625131262350-87e42f90-f419-415c-bd46-d5e82cdc809c.png\" alt=\"img\"></p>\n<p>步骤七：在客户端浏览器中进行验证</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625131420377-f0f52166-a08d-45e8-b982-72260e090afb.png\" alt=\"img\"></p>\n<h4 id=\"准备四证书导入\"><a class=\"markdownIt-Anchor\" href=\"#准备四证书导入\">#</a> 准备四：证书导入</h4>\n<p>步骤一：访问 <code>http://192.168.0.19/cersrv</code>  下载 CA 证书并保存到本地磁盘</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625131645582-b2b0aedf-162d-44b3-b65f-9440b99df4e7.png\" alt=\"img\"></p>\n<p>步骤二：cmd–&gt;mmc–&gt; 添加证书–&gt; 收信任的根证书颁发机构下–&gt; 证书–&gt; 任务右键导入–&gt; 成功–&gt; 浏览器重新访问</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132113754-14b7871f-4009-4a0b-ba2d-9fdf14a201c2.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132176108-eaaf9392-fdd6-4618-8d71-a095b50b7cc1.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132257502-dd094c66-7c22-41d9-93ee-04693c3cb525.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132267023-9f998719-696d-4675-91e5-cce2b429fe72.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132287248-55470346-6abe-485b-936d-54860b0ce1d5.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132463069-403e5c12-5b9d-4445-81d9-26ba0d96cb4b.png\" alt=\"img\"></p>\n<h3 id=\"实验二只允许https访问\"><a class=\"markdownIt-Anchor\" href=\"#实验二只允许https访问\">#</a> 实验二：只允许 HTTPS 访问</h3>\n<p>步骤一：在 IIS 控制台中点击对应网站在主页点进 SSL 中–&gt; 勾选要求 SSL–&gt; 应用即可–&gt; 客户端浏览器测试访问</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132486681-6035cb81-0cf4-437f-9445-8785cffef6e6.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132709148-3509b62f-1bee-4ca4-ab9d-508966e7f2ab.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1625132773268-7fdab467-e527-44c6-b708-75383ed86247.png\" alt=\"img\"></p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",
            "url": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.2%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",
            "title": "计算机的基本概念",
            "date_published": "2022-01-19T10:10:47.528Z",
            "content_html": "<h1 id=\"第二天计算机网络\"><a class=\"markdownIt-Anchor\" href=\"#第二天计算机网络\">#</a> 第二天：计算机网络</h1>\n<p>》》》课前实验《《《</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.yuque.com/docs/share/8e0c043d-12bc-4ed9-b6e3-869597527c9f?<span class=\"comment\">#（密码：tc8g） 《CNVD-2021-17369：锐捷Smartweb管理系统 密码信息泄露漏洞》</span></span><br><span class=\"line\">https://www.yuque.com/docs/share/e860a614-90b9-40ca-<span class=\"number\">8132</span>-dda9464ba5e6?<span class=\"comment\">#（密码：oxxh） 《CVE-2021-37580：Apache ShenYu JWT认证缺陷漏洞》</span></span><br></pre></td></tr></table></figure>\n<p>熟知计算机网络的构造，才能为以后的流量分析即溯源，打下坚实的基础。</p>\n<h1 id=\"一osi七层参考模型\"><a class=\"markdownIt-Anchor\" href=\"#一osi七层参考模型\">#</a> 一：OSI 七层参考模型</h1>\n<p>计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</p>\n<p><strong>》》》计算机网络的分类《《《</strong></p>\n<table>\n<thead>\n<tr>\n<th>依照</th>\n<th>分类类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>地理范围</td>\n<td>局域网 (LAN)/ 城域网 (MAN)/ 广域网 (WAN)</td>\n</tr>\n<tr>\n<td>交换方式</td>\n<td>线路交换网络 / 报文交换网络 / 分组交换网络</td>\n</tr>\n<tr>\n<td>拓扑结构</td>\n<td>树形网络 / 总线型网络 / 环形网络 / 网状网络</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p><strong>局域网</strong>：是指范围在几百米到十几公里内办公楼群或校园内的计算机相互连接所构成的计算机网络。计算机局域网被广泛应用于连接校园、工厂以及机关的个人计算机或工作站，以利于个人计算机或工作站之间共享资源（如打印机）和数据通信。</p>\n</li>\n<li>\n<p><strong>城域网</strong>：所采用的技术基本上与局域网相类似，只是规模上要大一些。城域网既可以覆盖相距不远的几栋办公楼，也可以覆盖一个城市；既可以是私人网，也可以是公用网。</p>\n</li>\n<li>\n<p><strong>广域网</strong>：通常跨接很大的物理范围，如一个国家。</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641813403231-9375dea7-5391-444b-a7c8-5e584ec4f9e4.png\" alt=\"img\"></p>\n<p><strong>》〉》通信要素《〈《</strong></p>\n<p>在网络上只要利用 IP 地址就可以找到目标主机，因此要攻击某个网络主机就要应该先确定该目标主机的域名或 IP 地址。</p>\n<p>阐述：</p>\n<p>所谓的 ip 地址就是一种主机编址方式，给每个连接在 Intelnet 上的主机分配一个 32bit 的地址，也称为网际协议地址。按照 TCP/IP（Transport Control Protocol/Intelnet Protocol，传输控制协议）协议簇的规定，IP 地址用二进制来表示，每个 IP 地址长 32bit，换算成字节就是 4 字节（Byte）。例如，一个采用二进制形式的 ip 地址是 “000010100000000000000000001”，这么长的地址处理起来很费劲，为了方便使用，IP 地址经常被写成十进制的形式，中间使用 &quot;.&quot; 分割不同的字节，即用 XXX.XXX.XXX.XXX 的形式来表现，每组 XXX 代表小于等于 255 的十进制数，例如 192.168.38.6。IP 地址的这种表示方法称为 “点分十进制表示法”，这显然比二进制的 1 和 0 容易记忆多了</p>\n<p>一个完整的 IP 地址信息应该包括：IP 地址 / 子网掩码 / 默认网关 / 和 DNS… 只有四个协同工作时，用户才可以访问 Internet 并被 Internet 的计算机所访问…</p>\n<p>（采用静态 IP 地址接入 Internet 时候，ISP 应当为用户提供全部 IP 地址信息）</p>\n<ul>\n<li>IP 地址：企业网络使用的合法 IP 地址，由提供 Internet 接入的服务商（ISP）分配公网地址，公网地址可以由网络管理员自由分配。但网络内部的私有 IP 地址不能相同，否则会发生 IP 地址冲突，导致网络连接失败。一般情况，IP 地址可以分为 5 大类别：A 类 / B 类 / C 类 / D 类及 E 类。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A类地址以<span class=\"number\">0</span>开头，第一个字节作为网络号，地址范围为：<span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">127.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>；   </span><br><span class=\"line\">B类地址以<span class=\"number\">10</span>开头，前两个字节作为网络号，地址范围是：<span class=\"number\">128.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">191.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>;</span><br><span class=\"line\">C类地址以<span class=\"number\">110</span>开头，前三个字节作为网络号，地址范围是：<span class=\"number\">192.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">223.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>；</span><br><span class=\"line\">D类地址以<span class=\"number\">1110</span>开头，地址范围是<span class=\"number\">224.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">239.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>，D类地址作为组播地址（一对多的通信）；</span><br><span class=\"line\">E类地址以<span class=\"number\">1111</span>开头，地址范围是<span class=\"number\">240.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>，E类地址为保留地址，供以后使用。</span><br><span class=\"line\">注：只有A,B,C有网络号和主机号之分，D类地址和E类地址没有划分网络号和主机号。</span><br><span class=\"line\"><span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>该IP地址指的是受限的广播地址。受限广播地址与一般广播地址（直接广播地址）的区别在于，受限广播地址只能用于本地网络，路由器不会转发以受限广播地址为目的地址的分组；一般广播地址既可在本地广播，也可跨网段广播。\t\t</span><br><span class=\"line\">例如：主机<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.1</span>/<span class=\"number\">30</span>上的直接广播数据包后，另外一个网段<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.5</span>/<span class=\"number\">30</span>也能收到该数据报；若发送受限广播数据报，则不能收到。</span><br><span class=\"line\">注：一般的广播地址（直接广播地址）能够通过某些路由器（当然不是所有的路由器），而受限的广播地址不能通过路由器。</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">8</span>   </span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>~<span class=\"number\">127.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">被用作回环地址，回环地址表示本机的地址，常用于对本机的测试，用的最多的是<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>。</span><br><span class=\"line\">A、B、C类私有地址</span><br><span class=\"line\">私有地址(private address)也叫专用地址，它们不会在全球使用，只具有本地意义。</span><br><span class=\"line\">A类私有地址：<span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">8</span>，范围是：<span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">10.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">B类私有地址：<span class=\"number\">172.16</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">16</span>，范围是：<span class=\"number\">172.16</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">172.31</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">C类私有地址：<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">24</span>，范围是：<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">192.168</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>子网掩码：子网掩码是于 IP 地址结合使用的一种技术，其主要作用有两个：</li>\n</ul>\n<ol>\n<li>\n<p>用于确定地址中的网络号和主机号</p>\n<p>2. 用于将一个大的 IP 网络划分为若干个小自网络（划分子网）</p>\n</li>\n</ol>\n<p>什么是子网掩码？</p>\n<p>子网掩码是标志两个 IP 地址是否同属于一个子网的，也是 32 位二进制地址，其每一个为 1 代表该位是网络位，为 0 代表主机位。它和 IP 地址一样也是使用点式十进制来表示的。如果两个 IP 地址在子网掩码的按位与的计算下所得结果相同，即表明它们共属于同一子网中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A类地址来说，默认的子网掩码是<span class=\"number\">255.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>；</span><br><span class=\"line\">对于B类地址来说默认的子网掩码是<span class=\"number\">255.255</span><span class=\"number\">.0</span><span class=\"number\">.0</span>；</span><br><span class=\"line\">对于C类地址来说默认的子网掩码是<span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>默认网关：当一台主机找不到可用的网关时，就把数据包发送给指定的默认网关，由这个网关来处理数据包。</li>\n</ul>\n<p>（从一个网络向另一个网络发送消息，也必须经过一道 “关口” 这道关口就是网关）</p>\n<ul>\n<li>DNS 地址：DNS 服务用于将用户的域名请求转换为 IP 地址。如果企业网络没有提供 DNS 服务，则 DNS 服务器的 IP 地址应当是 ISP 的 DNS 服务器。</li>\n</ul>\n<p><strong>》》》OSI 七层参考模型《《《</strong></p>\n<p>有了计算机等设备，也就得考虑如何连接起来他们，这就是他们之间该如何通信的问题。对计算机来说，就是一个硬件设备，如何让计算机与计算机连接起来，必需需要软件的支撑。那么支持计算机通讯的软件是什么呢？就是计算机网络参考模型。这个计算机网络参考模型就是计算机网络软件。最经典的当然是国际化标准的 OSI（Open System InterConnect  开放式系统互联）参考模型。它是通过一个机器上的一个应用进程与另一个机器上的进程进行信息交互。</p>\n<p>OSI 七层模型概念：</p>\n<p>1：OSI (open system Interconnect), 即开放式系统互联。一般叫 OSI 参考模型，是 ISO (国际标准化组织) 组织在 1985 年研究的网络互联模型。</p>\n<p>2：ISO 为了更好的使网络应用更为普及，推出了 OSI 参考模型。其含义就是推荐所有公司使用这个规范来控制网络。这样所有公司都有相同的规范，就能产生互联。</p>\n<p>3：OSI 定义了网络互联的七层框架（物理层、数据链层、网络层、传输层、会话层、表示层、应用层），即 ISO 开放互连系统参考模型。</p>\n<p>4：每一层实现各自的功能和协议，并完成与相邻层的接口通信。OSI 的服务定义详细说明了各层所提供的服务。某一层的服务就是该层及其下各层的一种功能，它同通过接口提供更高一层。各层所提供的服务与这些服务是怎末实现无关。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623377768783-e019cdb1-bd06-4830-b55b-29feed6e84f7.png\" alt=\"img\"></p>\n<p><strong>》》》OSI 七层作用介绍《《《</strong></p>\n<p>1：应用层</p>\n<p>应用层是 OSI 参考模型的最高层，是用户与网络的接口。该层通过应用程序来完成网络用户的应用需求，如文件传输、收发电子邮件等。</p>\n<p>【提供与用户的接口，最终呈现给用户】</p>\n<p>2：表示层</p>\n<p>表示层处理流经结点的数据编码的表示方式问题，以保证一个系统应用层发出的信息可被另一系统的应用层读出。如果必要，该层可提供一种标准表示形式，用于将计算机内部的多种数据表示格式转换成网络通信中采用的标准表示形式。数据压缩和加密也是表示层可提供的转换功能之一。</p>\n<p>【数据的表示 / 安全 / 压缩】</p>\n<p>3：会话层</p>\n<p>会话层主要功能是管理和协调不同主机上各种进程之间的通信（会话），即负责建立、管理和终止应用程序之间的会话。会话层得名的原因是它很类似于两个实体间的会话概念。例如，一个交互的用户会话以登录到计算机开始，以注销结束。</p>\n<p>【建立用户之间的会话关系】</p>\n<p>4：传输层</p>\n<p>传输层的作用是为上层协议提供端到端的可靠的、透明的数据传输服务，包括处理差错控制和流量控制等问题。该层向高层屏蔽了下层数据通信的细节，使高层用户看到的只是在两个传输实体间的一条主机到主机的、可由用户控制和设定的、可靠的数据通路。</p>\n<p>传输层传送的协议数据单元称为段（data segment）或报文（Message）。</p>\n<p>【定义传输数据的协议端口号以及流控和差错校验】</p>\n<p>5：网络层：</p>\n<p>网络层是为其上层传输层提供服务，传送的协议数据单元称为数据包 (Packet) 或分组。该层的主要作用是解决如何使数据包通过各结点传送的问题，即通过路径选择算法（路由）将数据包送到目的地。另外，为避免通信子网中出现过多的数据包而造成的网络阻塞，需要对流入的数据包数量进行控制（拥塞控制）。当数据包要跨越多个通信子网才能到达目的地时，还要解决网际互连的问题。</p>\n<p>类比：网络层相当于邮局中的信件分拣人员。</p>\n<p>网络层的作用：</p>\n<ul>\n<li>\n<p>路由选路</p>\n</li>\n<li>\n<p>拥塞控制、差错检测与恢复</p>\n</li>\n<li>\n<p>网络互联</p>\n</li>\n</ul>\n<p>【进行逻辑地址寻址，实现不同网络之间的路径选择】</p>\n<p>6：数据链层</p>\n<p>数据链路层是为其上层网络层提供服务，解决两个相邻结点之间的通信问题，传送的协议数据单元称为数据帧 (Data frame)。</p>\n<p>数据帧中包含物理地址（又称 MAC 地址）、控制码、数据及校验码等信息。该层的主要作用是通过校验、确认和反馈重发等手段，将不可靠的物理链路转换成对网络层来说无差错的数据链路。</p>\n<p>此外，数据链路层还要协调收发双方的数据传输速率，即进行流量控制，以防止接收方因来不及处理发送方来的高速数据而导致缓冲器溢出及线路阻塞。</p>\n<p>类比：数据链路层相当于邮局中的装拆箱人员。</p>\n<p>数据链层的作用：</p>\n<ul>\n<li>\n<p>物理地址定义 \t\t网络拓扑机构</p>\n</li>\n<li>\n<p>链路参数\t\t\t差错验证</p>\n</li>\n<li>\n<p>物理介质访问\t\t流控制</p>\n</li>\n</ul>\n<p>【进行逻辑链接 / 进行硬件地址寻址 / 差错校验等功能】</p>\n<p>7：物理层</p>\n<p>物理层是 OSI 参考模型的最底层，它利用传输介质为其上层数据链路层提供物理连接。它主要关心的是通过物理链路从一个节点向另一个节点传送比特流（bit），物理链路可能是铜缆、光纤、无线或其他的通讯媒介。它关心的问题有：多少伏电压代表 1？多少伏电压代表 0？时钟速率是多少？采用全双工、半双工还是单工通信？</p>\n<p>总的来说物理层关心的是链路的机械、电气、功能和规程特性。</p>\n<p>类比：物理层相当于邮局中的搬运工人。Physical Layer</p>\n<p>物理层的作用：</p>\n<ul>\n<li>提供传输数据的物理通路，传输数据</li>\n</ul>\n<p>​    \t【建立 / 维护 / 断开物理层链接】</p>\n<p>记忆口诀：应表会传网数物</p>\n<h1 id=\"二tcpip五层模型\"><a class=\"markdownIt-Anchor\" href=\"#二tcpip五层模型\">#</a> 二：TCP/IP 五层模型</h1>\n<p>由于 ISO 指定的 OSI 参考模型过于庞大、复杂、在实现制作过程造成了很多困难，从而招致了很多批评。在现实中，TCP/IP 协议获得了广泛的应用。目前主流的操作系统网络协议基本上都采用了 TCP/IP 协议。而 TCP/IP 与 OSI 在分层模型上稍有区别：OSI 参考模型注重 &quot;通信协议必要的功能是什么&quot;，而 TCP/IP 则更强调 &quot;在计算机上实现协议应该开发那种程序&quot;。</p>\n<ul>\n<li>\n<p>另外一个著名的模型是 TCP/IP 模型，TCP/IP 是传输控制协议 / 网络互联协议的简称；</p>\n</li>\n<li>\n<p>早期的 TCP/IP 协议是一个四层结构，在后来的使用过程中借鉴 OSI 的七层参考模型，形成了一个新的五层结构；</p>\n</li>\n<li>\n<p>TCP/IP 是一系列协议的集合，所以严格的称呼应该是 TCP/IP 协议簇；</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641816411268-9a24cead-13c8-460b-944a-6a38660bc7c3.png\" alt=\"img\"></p>\n<p><strong>》》》TCP/IP 五层与 OSI 七层的区别《《《</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2336202/1641210571031-56562245-f047-4fcb-a39e-ad0d6c01d825.png\" alt=\"img\"></p>\n<p>1：开放式系统互联模型是一个参考标准，解释协议相互之间应该如何相互作用。TCP/IP 协议是美国国防部发明的，是让互联网成为了目前这个样子的标准之一。</p>\n<p>2：开放式系统互联模型中没有清楚地描绘 TCP/IP 协议，但是在解释 TCP/IP 协议很容易想到开放式系统互联模型。两者的主要区别如下：TCP/IP 协议中的应用层处理开放式系统互联模型中的第五层、第六层和第七层的功能。TCP/IP 协议中的传输层并不能总是保证在传输层可靠地传输数据包，而开放式系统互联模型可以做到。TCP/IP 协议还提供一项名为 UDP（用户数据报协议）的选择。UDP 不能保证可靠的数据包传输。</p>\n<p><strong>》》》模型对应的协议《《《</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641816722890-fe61567a-f1fb-4fb9-b4df-d4753fab38fd.png\" alt=\"img\"></p>\n<table>\n<thead>\n<tr>\n<th>应用层</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP（超文本传输协议 80）：用于浏览器和 Web 服务器之间的请求和响应的交互</td>\n</tr>\n<tr>\n<td>DNS（域名系统 53）：用于连接 DNS 服务器</td>\n</tr>\n<tr>\n<td>SMTP（简单邮件传输协议 25）：用于接收邮件</td>\n</tr>\n<tr>\n<td>FTP（文件传输协议 21）：用于控制连接 FTP 服务器</td>\n</tr>\n<tr>\n<td>传输层</td>\n</tr>\n<tr>\n<td>TCP（传输控制协议）和 UDP（用户数据报协议）</td>\n</tr>\n<tr>\n<td>网络层 (本层 TCP/IP 定义了 IP 协议，而 IP 协议又由四个支撑协议组成)</td>\n</tr>\n<tr>\n<td>ARP（地址解析协议）：用于在局域网中根据 IP 地址获取物理地址</td>\n</tr>\n<tr>\n<td>RARP（逆地址解析协议）：用于在局域网中通过 ARP 表根据物理地址请求 IP 地址</td>\n</tr>\n<tr>\n<td>ICMP（网际控制报文协议）：用于验证网络是否畅通</td>\n</tr>\n<tr>\n<td>IGMP（网际组管理协议）：用于主机与组播路由器之间组播通信</td>\n</tr>\n<tr>\n<td>物理层和数据链路层</td>\n</tr>\n<tr>\n<td>IEEE802.3 有线局域网（以太网）标准</td>\n</tr>\n<tr>\n<td>IEEE802.11 无线局域网标准</td>\n</tr>\n</tbody>\n</table>\n<p><strong>》》》TCP 协议《《《</strong></p>\n<p>在 TCP/IP 协议中，TCP 协议提供可靠的连接服务，采用三次握手建立一个连接.</p>\n<p>TCP 是面向连接的通信协议，通过三次握手建立连接，通讯完成时要拆除连接，由于 TCP 是面向连接的所以只能用于端到端的通讯。TCP 提供的是一种可靠的数据流服务，采用 &quot;带重传的肯定确认&quot; 技术来实现传输的可靠性。TCP 还采用一种称为 &quot;滑动窗口&quot; 的方式进行流量控制，所谓窗口实际表示接收能力，用以限制发送方的发送速度。</p>\n<p>建立 TCP 连接，就是指建立一个 TCP 连接时，需要客户端和服务端总共发送 3 个包以确认连接的建立。在 socket 编程中，这一过程由客户端执行 connect 来触发。</p>\n<p><strong>注：seq</strong>:&quot;sequance&quot; 序列号；<strong>ack</strong>:&quot;acknowledge&quot; 确认号；<strong>SYN</strong>:&quot;synchronize&quot; 请求同步标志；<strong>；ACK</strong>:“acknowledge&quot; 确认标志”<strong>；FIN</strong>：&quot;Finally&quot; 结束标志。</p>\n<p>使用 TCP 的协议：</p>\n<ul>\n<li>\n<p>FTP（文件传输协议）21 号端口 20 号端口</p>\n</li>\n<li>\n<p>Telnet（远程登录协议）</p>\n</li>\n<li>\n<p>SMTP（简单邮件传输协议）</p>\n</li>\n<li>\n<p>POP3（和 SMTP 相对，用于接收邮件）</p>\n</li>\n<li>\n<p>HTTP 协议等。</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641818342862-a9572f54-aef6-41d3-ae56-30495c09107e.png\" alt=\"img\"></p>\n<p><strong>第一次握手</strong>：Client 将标志位 SYN 置为 1，随机产生一个值 seq=J，并将该数据包发送给 Server，Client 进入 SYN_SENT 状态，等待 Server 确认。</p>\n<p>SYN：同步序列编号 (Synchronize Sequence Numbers)</p>\n<p><strong>第二次握手</strong>：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立连接，Server 将标志位 SYN 和 ACK 都置为 1，ack=J+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求，Server 进入 SYN_RCVD 状态。</p>\n<p><strong>第三次握手</strong>：Client 收到确认后，检查 ack 是否为 J+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ack=K+1，并将该数据包发送给 Server，Server 检查 ack 是否为 K+1，ACK 是否为 1，如果正确则连接建立成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2336202/1641217203992-87ac02b3-a6fe-4389-917a-887fd4de1e4b.png\" alt=\"img\"></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为什么需要三次握手？</span><br><span class=\"line\">client发出的第一个连接请求报文段并没有丢失，而是在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达server。本来这是一个早已失效的报文段。但server收到此失效的连接请求报文段后，就误认为是client再次发出的一个新的连接请求。于是就向client发出确认报文段，同意建立连接。假设不采用三次握手，那么只要server发出确认，新的连接就建立了。由于现在client并没有发出建立连接的请求，因此不会理睬server的确认，也不会向server发送数据。但server却以为新的运输连接已经建立，并一直等待client发来数据。这样，server的很多资源就白白浪费掉了。采用三次握手的办法可以防止上述现象发生。</span><br></pre></td></tr></table></figure>\n<p>四次挥手（Four-Way Wavehand）即终止 TCP 连接，就是指断开一个 TCP 连接时，需要客户端和服务端总共发送 4 个包以确认连接的断开。在 socket 编程中，这一过程由客户端或服务端任一方执行 close 来触发…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641819982983-b25a8e05-291a-4bdc-83dd-5f9a97964972.png\" alt=\"img\"></p>\n<p><strong>第一次挥手</strong>：Client 发送一个 FIN，用来关闭 Client 到 Server 的数据传送，Client 进入 FIN_WAIT_1 状态。</p>\n<p><strong>第二次挥手</strong>：Server 收到 FIN 后，发送一个 ACK 给 Client，确认序号为收到序号 + 1（与 SYN 相同，一个 FIN 占用一个序号），Server 进入 CLOSE_WAIT 状态。</p>\n<p><strong>第三次挥手</strong>：Server 发送一个 FIN，用来关闭 Server 到 Client 的数据传送，Server 进入 LAST_ACK 状态。</p>\n<p><strong>第四次挥手</strong>：Client 收到 FIN 后，Client 进入 TIME_WAIT 状态，接着发送一个 ACK 给 Server，确认序号为收到序号 + 1， Server 进入 CLOSED 状态，完成四次挥手。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【问题<span class=\"number\">1</span>】为什么连接的时候是三次握手，关闭的时候却是四次握手？</span><br><span class=\"line\">答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，<span class=\"string\">&quot;你发的FIN报文我收到了&quot;</span>。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。</span><br></pre></td></tr></table></figure>\n<p>如果有大量的连接，每次在连接、关闭时都要三次握手，四次挥手，会很明显会造成性能低下，因此，HTTP 有一种叫做 keep connection 的机制，它可以在传输数据后仍然保持连接，当客户端再次获取数据时，直接使用刚刚空闲下的连接而无需再次握手…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641820064122-1df469e4-3437-4dbb-ab08-a45a7438b2fb.png\" alt=\"img\"></p>\n<p><strong>》》》UDP 协议《《《</strong></p>\n<p>UDP 用户数据报协议，是面向无连接的通讯协议，UDP 数据包括目的端口号和源端口号信息，由于通讯不需要连接，所以可以实现广播发送。</p>\n<p>UDP 通讯时不需要接收方确认，属于不可靠的传输，可能会出现丢包现象，实际应用中要求程序员编程验证。</p>\n<p>UDP 与 TCP 位于同一层，但它不管数据包的顺序、错误或重发。因此，UDP 不被应用于那些使用虚电路的面向连接的服务，UDP 主要用于那些面向查询 — 应答的服务，例如 NFS。相对于 FTP 或 Telnet，这些服务需要交换的信息量较小。</p>\n<p>每个 UDP 报文分 UDP 报头和 UDP 数据区两部分。报头由四个 16 位长（2 字节）字段组成，分别说明该报文的源端口、目的端口、报文长度以及校验值。UDP 报头由 4 个域组成，其中每个域各占用 2 个字节，具体如下：</p>\n<ul>\n<li>\n<p>（1）源端口号；</p>\n</li>\n<li>\n<p>（2）目标端口号；</p>\n</li>\n<li>\n<p>（3）数据报长度；</p>\n</li>\n<li>\n<p>（4）校验值。</p>\n</li>\n</ul>\n<p>使用 UDP 协议包括：TFTP（简单文件传输协议）、SNMP（简单网络管理协议）、DNS（域名解析协议）、NFS、BOOTP。</p>\n<p><strong>》》》TCP 和 UDP 的区别《《《</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>：连接方面区别：</span><br><span class=\"line\">i：TCP面向连接（如打电话要先拨号建立连接）。</span><br><span class=\"line\">ii：UDP是无连接的，即发送数据之前不需要建立连接。</span><br><span class=\"line\"><span class=\"number\">2</span>：安全方面的区别：</span><br><span class=\"line\">i：TCP提供可靠的服务，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达。</span><br><span class=\"line\">ii：UDP尽最大努力交付，即不保证可靠交付。</span><br><span class=\"line\"><span class=\"number\">3</span>：传输效率的区别：</span><br><span class=\"line\">i：TCP传输效率相对较低。</span><br><span class=\"line\">ii：UDP传输效率高，适用于对高速传输和实时性有较高的通信或广播通信。</span><br><span class=\"line\"><span class=\"number\">4</span>：连接对象数量的区别：</span><br><span class=\"line\">i：TCP连接只能是点到点、一对一的。</span><br><span class=\"line\">ii：UDP支持一对一，一对多，多对一和多对多的交互通信。</span><br></pre></td></tr></table></figure>\n<p><strong>》》》数据封装与解封装过程《《《</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641820630031-3de6d764-4c7f-4949-90bf-9a79145d217e.png\" alt=\"img\"></p>\n<p>1. 数据封装过程</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>在应用层，用户的数据被转换成二进制数据</span><br><span class=\"line\"><span class=\"number\">2.</span>在传输层，上层数据被分割成很小的数据段，并为每个分段后的数据封装TCP报文头部</span><br><span class=\"line\"><span class=\"number\">3.</span>在网络层，上层数据被封装上新的报文头部——IP头部</span><br><span class=\"line\"><span class=\"number\">4.</span>在数据链路层，上层数据被封装一个MAC头部，其内部有一个关键的字段信息——MAC地址</span><br><span class=\"line\"><span class=\"number\">5.</span>在物理层，无论在之前封装的报文头部还是上层的数据信息都是由二进制数组成的，在物理层，将这些二进制数字组成的比特流转换成电信号在网络中传输</span><br></pre></td></tr></table></figure>\n<p>2. 数据解封装过程</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据被封装完毕通过网络传输到接收方以后，将进入数据的解封装过程，这将是封装过程的一个逆过程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>在物理层，首先将电信号转换成二进制数据，并将数据数据送至数据链路层</span><br><span class=\"line\"><span class=\"number\">2.</span>在数据链路层，查看目标MAC地址，如果吻合就“拆掉”，将剩下的数据送往上一层</span><br><span class=\"line\"><span class=\"number\">3.</span>在网络层，核实目标IP地址是否与自己的IP地址相同，从而确定是否送至上一层</span><br><span class=\"line\"><span class=\"number\">4.</span>在传输层，首先根据TCP头部判断数据送往哪个应用层协议或应用程序，将之前被分组的数据段重组，再送往上一层</span><br><span class=\"line\"><span class=\"number\">5.</span>在应用层，这些二进制数据将经历复杂的解码过程还原成发送者所输送的最初信息</span><br></pre></td></tr></table></figure>\n<p><strong>》》》数据传输基本概念《《《</strong></p>\n<ul>\n<li>\n<p>对于 OSI 模型而言，每一层都是通过协议数据单元来进行通信的，而对于 TCP/IP 五层模型，也可以沿用这个概念</p>\n</li>\n<li>\n<p>PDU（协议数据单元）是指同层之间传递的数据单位</p>\n</li>\n<li>\n<p>应用数据需要经过 TCP/IP 每一层处理之后才能传输到目的端，每一层都使用该层的协议数据单元 PDU 彼此交换信息，不同层的 PDU 中包含有不同的信息，因此 PDU 在不同层被赋予了不同的名称</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641821009877-48ab3553-40e2-4347-befb-2b798c79f016.png\" alt=\"img\"></p>\n<p><strong>》》》硬件设备对应五层模型《《《</strong></p>\n<p>设备属于哪一层要看这个设备主要工作在哪一层，有什么对应的功能…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641821153555-dd2442a2-a3f2-4745-b299-057027fc6ffe.png\" alt=\"img\"></p>\n<p><strong>》》》层间通信协议《《《</strong></p>\n<ul>\n<li>发送方与接收方之间必须采用相同的协议才能建立连接，实现正常的通信</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641821484028-605bd9f5-59d2-4767-baa4-0f9a01a6cec4.png\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">提问:各个层的协议都有哪些？</span><br></pre></td></tr></table></figure>\n<h1 id=\"三局域网络攻击实验扩展\"><a class=\"markdownIt-Anchor\" href=\"#三局域网络攻击实验扩展\">#</a> 三：局域网络攻击实验【扩展】</h1>\n<p><strong>》》》ARP 欺骗攻击《《《</strong></p>\n<p>简介：ARP（Address Resolution Protocol）是地址解析协议，是一种将 IP 地址转化成物理地址的协议。从 IP 地址到物理地址的映射有两种方式：表格方式和非表格方式。ARP 具体说来就是将网络层（也就是相当于 OSI 的第三层）地址解析为数据链路层（也就是相当于 OSI 的第二层）的物理地址 (注：此处物理地址并不一定指 MAC 地址)。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原理：主机A要向主机B发送报文，会查询A本地的ARP缓存表，找到B的IP地址对应的MAC地址后，就会进行数据传输。如果未找到，则A广播一个ARP请求报文（携带主机A的IP地址Ia——物理地址Pa），请求IP地址为Ib的主机B回答物理地址Pb。网上所有主机包括B都收到ARP请求，但只有主机B识别自己的IP地址，于是向A主机发回一个ARP响应报文。其中就包含有B的MAC地址，A接收到B的应答后，就会更新本地的ARP缓存。接着使用这个MAC地址发送数据（由网卡附加MAC地址）。因此，本地高速缓存的这个ARP表是本地网络流通的基础，而且这个缓存是动态的。</span><br></pre></td></tr></table></figure>\n<p>实验网络拓扑：</p>\n<table>\n<thead>\n<tr>\n<th>主机标识</th>\n<th>安装服务</th>\n<th>操作系统</th>\n<th>IP 地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Clinet IP</td>\n<td>None</td>\n<td>Windows 10</td>\n<td>192.168.1.106</td>\n</tr>\n<tr>\n<td>Kali IP</td>\n<td>None</td>\n<td>Kali Linux</td>\n<td>192.168.1.104</td>\n</tr>\n<tr>\n<td>Server IP</td>\n<td>FTP Server</td>\n<td>Windows server 2016</td>\n<td>192.168.1.98</td>\n</tr>\n</tbody>\n</table>\n<p>步骤一：在各个主机之间进行 Ping 测试，并在 Kali 上启动网卡位混杂模式…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"number\">1</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>\n<p>步骤二：在 KALI 上输入 <code>Ettercap -G</code>  命令启动 Ettercap 图形化界面… 并进行以下操作…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641898634363-a778df2e-fc03-48f0-9140-1252820e876c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641898677187-d9ddc981-16f0-4b39-8557-25162077abfc.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980212733-a0d0cd5d-26ef-4cec-803a-b879714062cd.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980247132-968383b8-4339-4b78-86db-6206bcfa2be7.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980272363-075883c2-6a9a-4bbf-8475-e9fb1cfb7556.png\" alt=\"img\"></p>\n<p>步骤三：在 Client 上输入以下地址进行访问，并输入 FTP 服务器账号密码进行访问…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftp:<span class=\"comment\">//192.168.1.98/</span></span><br></pre></td></tr></table></figure>\n<p>步骤四：回到 Kali 的 Ettercap 查看捕获到的信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641898515785-2cdf0138-381f-49bb-bcb9-ba2040fa7eb6.png\" alt=\"img\"></p>\n<p><strong>》》》DNS 欺骗攻击《《《</strong></p>\n<p>步骤一：进行欺骗之前需要对 ettercap 的 dns 文件进行编辑并添加一下内容… 注意添加的内容之前能有 &quot;#&quot; 号键…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install leafpad</span><br><span class=\"line\">leafpad /etc/ettercap/etter.dns</span><br><span class=\"line\">添加以下内容：</span><br><span class=\"line\">baidu.com    A      Kali IP地址</span><br><span class=\"line\">*.baidu.com    A      Kali IP地址</span><br><span class=\"line\">这样的目的是为了，让客户端访问baidu.com时跳转访问攻击者的web服务</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980949136-8d38ae1b-67ea-4b4e-a426-b21c1204e802.png\" alt=\"img\"></p>\n<p>步骤二：前面的步骤与 ARP 欺骗一致，只需要在开始欺骗之前，双击添加一个插件；</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641981354751-b21119ce-a158-4f62-996c-2c3f6c709cfd.png\" alt=\"img\"></p>\n<p>步骤三：在受害者主机进行 ping 命令测试，查看 DNS 是否欺骗成功…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980701483-03d45356-1ca6-4ad6-bece-71d5070c3c76.png\" alt=\"img\"></p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.3DHCP%E4%B8%8EWDS%E6%9C%8D%E5%8A%A1/",
            "url": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%BA%8C%E5%91%A8/2.3DHCP%E4%B8%8EWDS%E6%9C%8D%E5%8A%A1/",
            "title": "DNCP与WDS服务",
            "date_published": "2022-01-19T10:06:07.765Z",
            "content_html": "<p><strong>第三天：DHCP 与 WDS 服务</strong></p>\n<h6 id=\"一dhcp服务\"><a class=\"markdownIt-Anchor\" href=\"#一dhcp服务\">#</a> 一：DHCP 服务</h6>\n<p><img data-src=\"C:/Users/riyun/AppData/Roaming/Typora/typora-user-images/image-20220119182615780.png\" alt=\"image-20220119182615780\"></p>\n<p>动态主机设置协定（Dynamic Host Configuration Protocol, DHCP）DHCP 是一个局域网的网络协议，使用 UDP 协议工作，其前身是 BOOTP 协议。当前的 DHCP 定义可以在 RFC 2131 中找到，而基于 IPv6 的建议标准（DHCPv6）可以在 RFC 3315 中找到。主要有两个用途：</p>\n<ul>\n<li>给内部网络或网络服务供应商自动分配 IP 地址给用户    #自动给当前网络分配 IP 地址信息</li>\n<li>给内部网络管理员作为对所有电脑作中央管理的手段   #更有效的管理 IP 地址资源</li>\n</ul>\n<p>&gt;&gt;&gt; 工作原理 &lt;&lt;&lt;</p>\n<p>动态主机设置协定（DHCP）是一种使网络管理员能够集中管理和自动分配 IP 网络地址的通信协议。在 IP 网络中，每个连接 Internet 的设备都需要分配唯一的 IP 地址。DHCP 使网络管理员能从中心结点监控和分配 IP 地址。当某台计算机移到网络中的其它位置时，能自动收到新的 IP 地址。</p>\n<p>DHCP 使用了租约的概念，或称为计算机 IP 地址的有效期。租用时间是不定的，主要取决于用户在某地联接 Internet 需要多久，这对于教育行业和其它用户频繁改变的环境是很实用的。通过较短的租期，DHCP 能够在一个计算机比可用 IP 地址多的环境中动态地重新配置网络。</p>\n<h3 id=\"11dhcp服务搭建\"><a class=\"markdownIt-Anchor\" href=\"#11dhcp服务搭建\">#</a> 1.1：DHCP 服务搭建</h3>\n<p>步骤一：在 Windows server 2012R2 中设置好静态 IP 地址并将网卡链接模式设置为仅主机模式 (不开启 DHCP 服务)…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179278819-41f3675e-e721-4548-a37c-3d7e49ffa0cd.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180280643-161d90a1-b487-4ef9-a74d-df4537e5ea16.png\" alt=\"img\"></p>\n<p>步骤二：打开服务器管理器开始安装服务–&gt; 添加角色和功能–&gt; 并到选择服务器角色选择 DHCP 服务并进行安装</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179496360-891da956-33fa-41a4-865d-68ba7d27fb6d.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179655842-e08aec28-baaf-441d-883e-1463a8ecfe2c.png\" alt=\"img\"></p>\n<p>步骤二：在服务器管理器面板中–&gt; 工具–&gt;DHCP–&gt; 打开 DHCP 控制界面进行配置…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179739856-39e8dcf5-930b-4f22-9fff-5e60c370e9d1.png\" alt=\"img\"></p>\n<h3 id=\"12dhcp服务应用\"><a class=\"markdownIt-Anchor\" href=\"#12dhcp服务应用\">#</a> 1.2：DHCP 服务应用</h3>\n<table>\n<thead>\n<tr>\n<th>角色</th>\n<th>操作系统</th>\n<th>IP 获取地址方式</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DHCP 服务器</td>\n<td>Windows server 2012R2</td>\n<td>192.168.0.40</td>\n</tr>\n<tr>\n<td>客户端验证</td>\n<td>Windows 7</td>\n<td>动态获取</td>\n</tr>\n</tbody>\n</table>\n<p>步骤一：打开 DHCP 控制台界面，在当前服务器下方的 IPV4 下右键选择新建作用域填写相对应的信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179867263-0908032c-ed96-4ad4-aaac-07255bf38c34.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179940676-773239e2-d59c-47a7-b682-bfbf600667d3.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626179979281-6e8303a1-70b1-41d9-b770-6de7300159d2.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180060577-8c9afff4-4715-4d96-9be7-3b30f1a1610c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180074023-13175fc2-2c76-4c4f-b658-3abd1a7cfa31.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180083149-ae195ca4-a94c-4636-a8d8-169420f555a8.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180102296-f71a2d23-a223-40b4-b40d-9eadfce532f2.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180115888-3a7c3b1e-9672-4f1b-8e84-279caf190652.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180130359-fa6c7cef-a4db-4379-bbaf-b6f04648eb15.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180141597-d2eae850-9672-4a37-9597-28dfc2e15e0b.png\" alt=\"img\"></p>\n<p>步骤二：打开 windows7 客户端操作以下 CMD 命令进行 IP 地址获取…</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig /release  //释放DHCP获取的IP地址 </span><br><span class=\"line\">ipconfig /renew    //重新获取IP地址</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180378605-546baefd-f9b3-4b0f-a966-ea9e627401d4.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180396284-3b3971d7-e52d-4722-be8a-4c44cc233855.png\" alt=\"img\"></p>\n<h3 id=\"13配置故障转移\"><a class=\"markdownIt-Anchor\" href=\"#13配置故障转移\">#</a> 1.3：配置故障转移</h3>\n<p>步骤一：准备另外一台 Windows server 2012R2 服务器并按照 1.1 的搭建好 DHCP 服务…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626182440360-26a19bcb-928d-401e-a510-f08a32f4d31f.png\" alt=\"img\"></p>\n<p>步骤二：在主服务器上打开 DHCP 的控制端并在作用域右键–&gt; 配置故障转移集群并填写相关信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180880056-6685173e-0039-4189-83f1-237a9d2b74bf.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626180970304-5cc10dfb-9a98-44c2-a4be-1197ab46ce8d.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626182532870-44cf021b-3e57-49bb-9dea-7166038195f7.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626182548886-f0c6f9f2-c8a5-4878-92f3-16efbcb2888c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626182602087-9d507089-5e09-43c3-aa00-513576dee2ee.png\" alt=\"img\"></p>\n<p>步骤三：来到备用的服务器 DHCP 控制台中查看相关信息发现已经同步成功… 并且 DOWN 主服务器备用服务器还能够继续提供 DHCP 服务…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626182735398-0c712a8d-b117-480f-9bf7-dfc5113f7f87.png\" alt=\"img\"></p>\n<h3 id=\"14指定主机保留地址\"><a class=\"markdownIt-Anchor\" href=\"#14指定主机保留地址\">#</a> 1.4：指定主机保留地址</h3>\n<p>DHCP 服务器设置 IP 保留地址。 在网络中，有些特殊计算机需要每次都获得相同的 IP 地址，这需要利用 DHCP 服务器的 “保留” 功能，将特定的 IP 地址与客户端计算机进行绑定，使该 DHCP 客户端每次向 DHCP 服务器请求时，都会获得同一个 IP 地址。</p>\n<p>步骤一：在 Win7 中使用 ipconfig /all 命令查看 MAC 地址…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626184041868-7e8d80bd-fb94-4efd-8215-ee6dce6a9073.png\" alt=\"img\"></p>\n<p>步骤二：在 DHCP 控制界面作用域下–&gt; 保留右键新建保留–&gt; 将要 MAC 地址要绑定的信息写入并添加…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626184200855-2b4869c3-ec2d-4464-bc41-a645ca295819.png\" alt=\"img\"></p>\n<p>步骤三：Win7 客户机使用一下命令重新获取 IP 地址发现还是 192.168.0.150</p>\n<figure class=\"highlight bash\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ipconfig /release  //释放DHCP获取的IP地址 </span><br><span class=\"line\">ipconfig /renew    //重新获取IP地址</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626184324793-5ea16baa-c6c6-44d4-b91b-d29268ea65d1.png\" alt=\"img\"></p>\n<h1 id=\"二wds服务\"><a class=\"markdownIt-Anchor\" href=\"#二wds服务\">#</a> 二：WDS 服务</h1>\n<p>预启动执行环境（Preboot eXecution Environment，PXE）也被称为预执行环境，提供了一种使用网络接口（Network Interface）启动计算机的机制。这种机制让计算机的启动可以不依赖本地数据存储设备（如硬盘）或本地已安装的操作系统。</p>\n<p>Windows 部署服务 Windows Deployment Services 缩写，中文意思是 Windows 部署服务。WDS 适用于大中型企业部署大批量新计算机和重装客户端，通过 WDS 来管理多版本映像以及无人参与安装脚本，并提供人工参与安装和无人参与安装的选项。</p>\n<p>&gt;&gt;&gt;WDS 的作用 &lt;&lt;&lt;</p>\n<p>场景一：</p>\n<p>你现在有 1 台电脑需要装系统，那么很简单，你拿上一个 U 盘安装盘插在这台电脑上，然后从 U 盘启动，之后就可以手动安装系统了；但如果你现在有 100 台电脑，如果你在拿着一个 U 盘安装盘一台台安装，那效率肯定是太低了，这个时候 PXE 就派上用场了。</p>\n<p>场景二：</p>\n<p>某公司对信息安全要求比较高，需要使用无盘系统（系统不在本地电脑上，而在公司特定的服务器上），这个时候也需要使用 PXE。</p>\n<p>场景三：</p>\n<p>你想要一台远程的电脑运行你手上特定的系统，这个时候你就可以在本地布置一个你手上的系统，然后通过 PXE 启动你本地的系统（这个可能需要额外的支持，比如 BMC，因为要远程）。</p>\n<p>&gt;&gt;&gt;WDS 启动原理 &lt;&lt;&lt;</p>\n<p>当计算机引导时，<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9CSU9T\">BIOS</span> 把 PXE Client 调入内存中执行，然后由 PXE <span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS9DbGllbnQ=\">Client</span> 将放置在远端的文件通过网络下载到本地运行。</p>\n<p>&gt;&gt;&gt;PXE 装机优点 &lt;&lt;&lt;</p>\n<table>\n<thead>\n<tr>\n<th>规模化</th>\n<th>同时配置多台服务器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>自动化</td>\n<td>安装系统，配置各种服务</td>\n</tr>\n<tr>\n<td>远程实现</td>\n<td>不需要光盘、U 盘等安装介质</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/jpeg/2699750/1626224524855-96b852aa-a781-4c2e-be85-44250a923273.jpeg\" alt=\"img\"></p>\n<p>&gt;&gt;&gt; 部署 WDS 需要环境 &lt;&lt;&lt;</p>\n<p>AD 域服务器的安装：活动目录服务，主要用于用户的身份验证</p>\n<p>DNS 服务器安装：域名解析服务，主要用于查找域控制器和名称的解析服务</p>\n<p>DHCP 服务器的安装：用于向需要安装操作系统的客户机分配 IP 地址</p>\n<p>WDS 服务安装 注：加载部署的系统镜像</p>\n<p>&gt;&gt;&gt;WDS 部署系统自动化安装流程 &lt;&lt;&lt;</p>\n<ol>\n<li>\n<p>拥有 PXE 兼容网卡的计算机启动，并进入网络引导模式</p>\n</li>\n<li>\n<p>获取 DHCP 服务器分配的 IP 地址</p>\n</li>\n<li>\n<p>查找 WDS 服务器</p>\n</li>\n<li>\n<p>WDS 检查客户端是否拥有授权，检查多播传输设置</p>\n</li>\n<li>\n<p>开始部署</p>\n</li>\n</ol>\n<table>\n<thead>\n<tr>\n<th>操作系统</th>\n<th>安装服务</th>\n<th>作用定位</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Windows server 2012 R2</td>\n<td>AD/DNS/DHCP/WDS</td>\n<td>PXE 服务端</td>\n</tr>\n<tr>\n<td>Windows 10</td>\n<td>裸机</td>\n<td>PXE 客户端</td>\n</tr>\n<tr>\n<td>Windows 7</td>\n<td>无</td>\n<td>DHCP 测试</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"21wds服务搭建\"><a class=\"markdownIt-Anchor\" href=\"#21wds服务搭建\">#</a> 2.1：WDS 服务搭建</h3>\n<p>步骤一：准备一台干净的 Windows Server 2012R2，设置好在<strong>计算机名</strong>并设置<strong>网卡为仅主机模式</strong>和<strong>静态的 IP 地址</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626227560204-4ff0293f-c0c3-4ec7-94aa-39b72b5f1842.png\" alt=\"img\"></p>\n<p>步骤二：电脑重启之后打开服务器管理器点击<strong>添加角色和功能</strong>，一路回车来到选择服务器角色–》勾选【Active Directory 域服务，DHCP 服务器，DNS 服务器，Windows 部署服务】勾选后一路回车默认并到达安装页面进行安装…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626227928955-935fec6c-8d48-45cf-bbe3-f218522edf5e.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228019225-48814606-018a-43ae-9b94-b8cffffa8f3c.png\" alt=\"img\"></p>\n<h3 id=\"22wds部署win10\"><a class=\"markdownIt-Anchor\" href=\"#22wds部署win10\">#</a> 2.2：WDS 部署 Win10</h3>\n<p>步骤一：将指定的服务搭建完成后，在小旗子下方选择【将此服务器提升为域控制器】并以此填写以下信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228231660-2d468936-6634-4864-948b-29a8eccbb53e.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228305838-ff7f77dd-d42e-45db-96a4-44d67cabb1f5.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228358966-a47f449b-bec1-4c04-a4ac-30ec13059a62.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228391136-4d73b02f-ddf3-492b-bef8-7f6c8cf69575.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228475118-ac5d54e9-b99b-48e8-81c5-41b95e79e4fd.png\" alt=\"img\"></p>\n<p>步骤二：重启之后打开服务器管理器在其小旗子下面点击【完成 DHCP 配置】，并填写一下相关信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228760652-442746e2-0c2e-4c10-a23c-1914388631e3.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228772616-84b49e39-2071-462c-8865-ed8a0c2719da.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228784016-3d802ea3-157a-43e4-b6b5-aaa2f1406e99.png\" alt=\"img\"></p>\n<p>步骤三：对 DHCP 服务器进行配置… 创建好作用域之后拿 Win7 客户机进行 DHCP 获取动态 IP 地址进行测试…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228917182-2f92be73-6abc-454d-b82e-4a6b4ca9450b.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228934709-6e52c384-465e-4565-93a6-a0d851959c92.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228951271-77402d9f-1440-49a5-afa7-bb7b4a4d328a.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626228997110-3004f64e-2df1-48d6-9d2e-21ecbef8969f.png\" alt=\"img\"></p>\n<p>开启 Windows7 主机后可以看到在服务器的 DHCP 控制台里的地址租用选项已经获取到动态 IP 地址…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229226160-b425ad1b-5a37-4509-b3b5-a493ea3212bb.png\" alt=\"img\"></p>\n<p>步骤四：将 Windows10 镜像文件通过光驱挂载到服务器上，并打开【WDS 部署服务管理控制台】对服务器进行配置…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229492925-f39efd60-5f11-4e8d-9fdc-9096151a26f9.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229451824-c23f5b43-5107-486c-8d81-7df28cc79cf8.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229555958-ff8659cf-ac07-4ff2-a58e-27c5757ccaf1.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229580080-28bc41aa-6ac2-41dc-af63-9ec3406fe0b1.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229594409-20b22c4c-9e86-4957-bbba-2b3531c77ec9.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229605981-2fbed673-f407-4609-aece-a5193d7030e5.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229617640-129a959f-4976-49d9-913c-9ba93be64c29.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229628071-a5966554-7a10-4ba5-9a1e-ffb986aca195.png\" alt=\"img\"></p>\n<p>步骤五：添加安装镜像与启动镜像</p>\n<ol>\n<li>安装镜像，iso 的 sources 中的 install.wim 即可</li>\n<li>启动映像，右击添加启动映像，打开选择框会自动定位在安装镜像的文件夹内，选择另一个 wim 镜像，即 boot.wim，这个就是启动映像。名字都是自定义的。</li>\n</ol>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229708376-6dd52677-a867-4f8c-a475-8b5a2b3c9578.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229754199-9c7d79e6-228e-47ee-aeb7-c8d4865666f4.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229764618-50cbef46-e4b0-4d5c-800b-57719179883d.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626229776562-19fd28f9-37b8-42e5-a46a-dce5270d4e4c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230002139-62b5c8e5-be2a-4240-8b19-aa44d0206172.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230012983-a1abe622-c747-41ac-b510-67741800a63c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230032897-1a103944-f65c-4c81-897c-c8aa3b6f645f.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230045347-485edd25-15ce-45bc-b3f7-d2bded3f5798.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230061961-1ad94f4a-c15e-43e3-afc2-407edc55dd4c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230073954-82b3e80c-2921-4313-9b0b-2ebec0c016e6.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230121262-6e0ac41e-db62-48af-95ce-139884670273.png\" alt=\"img\"></p>\n<p>步骤六：新建个 windows 10 的虚拟机，并设置网络链接模式为仅主机模式… 开机安装操作系统…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230801249-8af3af47-08a6-4852-9ef2-6e309ad7f838.png\" alt=\"img\"></p>\n<p>在此选择网络引导启动安装，可以的看到在 PXE 服务上获取的信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230842633-9872b6df-bbd5-4fcb-acad-63d1b3af0d96.png\" alt=\"img\"></p>\n<p>正在加载引导文件…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230869472-1be67c39-0d7c-4513-b981-736c44bf9fe5.png\" alt=\"img\"></p>\n<p>进入安装…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230901867-9de335d3-fa0f-4f31-88c3-99f8658640b4.png\" alt=\"img\"></p>\n<p>将域管理员用户密码输入进行身份认证…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230928785-88265b97-9711-4cd9-821b-1b19ddc75d77.png\" alt=\"img\"></p>\n<p>选择安装操作系统版本</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230939824-bc5954ce-6ab8-4321-bda6-a55a88671096.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230955748-e87ad540-4162-429b-81c0-0e6ad8bd8720.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230970182-2bb14cd9-9ebe-40d6-a5f2-f95037e82889.png\" alt=\"img\"></p>\n<p>查看服务端的 DHCP 控制台获取 IP 地址状态…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626230996161-5041d9d8-949f-4fea-a86b-737026114e92.png\" alt=\"img\"></p>\n<p>步骤七：安装完成进行测试…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2699750/1626231733607-81b38f56-1ea1-4679-96db-f47d9210b426.png\" alt=\"img\"></p>\n<p>推介课程：法老:<br>\n 明教教主 乾隆堂   --》网络工程师</p>\n<p>法老:<br>\n 安全牛  --》KALI 渗透测试</p>\n<p>法老:<br>\n 菜鸟腾飞安全网 —》编程 渗透</p>\n<p>法老:<br>\n 黑马程序员 —》Mysql</p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.3HTTP%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/",
            "url": "https://sun-spots.github.io/2022/01/19/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.3HTTP%E9%80%9A%E4%BF%A1%E5%9F%BA%E7%A1%80/",
            "title": "计算机的基本概念",
            "date_published": "2022-01-19T01:45:54.822Z",
            "content_html": "<h1 id=\"第三天http通信基础\"><a class=\"markdownIt-Anchor\" href=\"#第三天http通信基础\">#</a> 第三天：HTTP 通信基础</h1>\n<h2 id=\"web介绍\"><a class=\"markdownIt-Anchor\" href=\"#web介绍\">#</a> WEB 介绍</h2>\n<h3 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h3>\n<p>Web（World Wide Web）即全球广域网，也称为万维网（Internet），它是一种基于超文本和 HTTP 协议的、全球性的、动态交互的、跨平台的分布式图形信息系统。是建立在 Internet 上的一种网络服务，为浏览者在 Internet 上查找和浏览信息提供了图形化的、易于访问的直观界面，其中的文档及超级链接 Internet 上的信息节点组织成一个互为关联的网状结构。</p>\n<p>简单来说，web 是 web 页面的载体，我们通过浏览器上网都是 Web。</p>\n<h3 id=\"通信流程\"><a class=\"markdownIt-Anchor\" href=\"#通信流程\">#</a> 通信流程</h3>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623380303682-a5dc317d-d0a1-4b8b-8ca1-34004e4e9564.png\" alt=\"img\"></p>\n<p><strong>介绍：用户在客户端通过浏览器访问目标网站的域名，客户端通过 DNS 域名解析协议查找该域名所对应的 IP 地址并且返回给用户，后客户端通过 IP 地址进一步访问服务端。服务端对请求进行解析后，随后到资源库（数据库）查询资源，然后资源库将查找到的资源返回到服务端，后服务端将资源进一步返回到客户端，然后客户端将资源渲染到客户端的桌面上，用户便可以看到自己所想要的资源。</strong></p>\n<p>1：<span class=\"exturl\" data-url=\"aHR0cDovL3huLS13d3ctMHYxZW42NXouYmFpZHUuY29t\">输入 www.baidu.com</span></p>\n<p>2：解析成 IP 地址：192.168.0.1</p>\n<p>3：浏览器通过该 IP 访问 web 服务器获取 web 资源</p>\n<p>4：再返回给客户端</p>\n<p>5：最后呈现在用户面前</p>\n<h2 id=\"域名系统dns\"><a class=\"markdownIt-Anchor\" href=\"#域名系统dns\">#</a> 域名系统 DNS</h2>\n<h3 id=\"简介-2\"><a class=\"markdownIt-Anchor\" href=\"#简介-2\">#</a> 简介</h3>\n<p>DNS 是一个简单的<strong>请求 - 响应协议</strong>，是将域名和 IP 地址相互映射的一个分布式数据库，能够使人更方便地访问互联网。<strong>DNS 使用 TCP 和 UDP 协议的 53 端口。</strong></p>\n<h3 id=\"请求与响应\"><a class=\"markdownIt-Anchor\" href=\"#请求与响应\">#</a> 请求与响应</h3>\n<h4 id=\"dns记录\"><a class=\"markdownIt-Anchor\" href=\"#dns记录\">#</a> DNS 记录</h4>\n<ul>\n<li>\n<p><strong>A 记录（正向解析）</strong></p>\n</li>\n<li>\n<ul>\n<li>返回域名对应的 IPv4 地址</li>\n</ul>\n</li>\n<li>\n<p><strong>NS 记录</strong></p>\n</li>\n<li>\n<ul>\n<li>域名服务器</li>\n<li>返回该域名由哪台域名服务器解析</li>\n</ul>\n</li>\n<li>\n<p><strong>PTR 记录（反向解析）</strong></p>\n</li>\n<li>\n<ul>\n<li>反向记录</li>\n<li>从 IP 地址到域名的记录</li>\n</ul>\n</li>\n<li>\n<p><strong>MX 记录</strong></p>\n</li>\n<li>\n<ul>\n<li>电子邮件交换记录</li>\n<li>记录邮件域名对应的 IP 地址</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"响应码\"><a class=\"markdownIt-Anchor\" href=\"#响应码\">#</a> 响应码</h4>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">//NOERROR(无错误)</span><br><span class=\"line\">\t\tNo error condition</span><br><span class=\"line\">\t\t无错误条件 </span><br><span class=\"line\"></span><br><span class=\"line\">//FORMERR(格式错误)</span><br><span class=\"line\">\t\tFormat error - The name server was unable to interpret the query</span><br><span class=\"line\">    格式错误 - 名称服务器无法解释查询</span><br><span class=\"line\"></span><br><span class=\"line\">//SERVFAIL(服务失败)</span><br><span class=\"line\">\t\tServer failure - The name server was unable to process this query due to a problem with the name server</span><br><span class=\"line\">\t\t服务器故障 - 由于名称服务器出现问题，名称服务器无法处理此查询</span><br><span class=\"line\"></span><br><span class=\"line\">//NXDOMAIN</span><br><span class=\"line\">\t\tthis code signifies that the domain name referenced in the query does not exist</span><br><span class=\"line\">\t\t此代码表示查询中引用的域名不存在</span><br><span class=\"line\">    </span><br><span class=\"line\">//NOTIMP(未实现)</span><br><span class=\"line\">\t\tNot Implemented - The name server does not support the requested kind of query</span><br><span class=\"line\">\t\t未实现 - 名称服务器不支持请求的查询类型</span><br><span class=\"line\"></span><br><span class=\"line\">//REFUSED(拒绝)</span><br><span class=\"line\">\t\tRefused - The name server refuses to perform the specified operation for policy reasons</span><br><span class=\"line\">\t\t拒绝 - 名称服务器出于策略原因拒绝执行指定的操作</span><br></pre></td></tr></table></figure>\n<h3 id=\"域名系统工作原理\"><a class=\"markdownIt-Anchor\" href=\"#域名系统工作原理\">#</a> 域名系统工作原理</h3>\n<h4 id=\"解析过程\"><a class=\"markdownIt-Anchor\" href=\"#解析过程\">#</a> 解析过程</h4>\n<p>DNS 解析过程是递归查询的，具体过程如下：</p>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5leGFtcGxlLmNvbQ==\">www.example.com</span>：www 次级域   com 顶级域        顶级域名是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlOUYlOUYlRTUlOTAlOEQ=\">域名</span>的最后一个部分，即是域名最后一点之后的字母</p>\n<ul>\n<li>\n<p>用户要访问域名 www.example.com 时，先查看本机 hosts 是否有记录或者本机是否有 DNS 缓存，如果有，直接返回结果，否则向递归服务器查询该域名的 IP 地址</p>\n</li>\n<li>\n<p>递归缓存为空时，首先向根服务器查询 com 顶级域的 IP 地址</p>\n</li>\n<li>\n<p>根服务器告知递归服务器 com 顶级域名服务器的 IP 地址</p>\n</li>\n<li>\n<p>递归向 com 顶级域名服务器查询负责 example.com 的权威服务器的 IP</p>\n</li>\n<li>\n<p>com 顶级域名服务器返回相应的 IP 地址</p>\n</li>\n<li>\n<p>递归向 example.com 的权威服务器查询 www.example.com 的地址记录</p>\n</li>\n<li>\n<p>权威服务器告知 www.example.com 的地址记录</p>\n</li>\n<li>\n<p>递归服务器将查询结果返回客户端</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1625625284218-64866d9c-d553-4b02-b571-c0944637f847.png\" alt=\"img\"></p>\n<h4 id=\"域传送\"><a class=\"markdownIt-Anchor\" href=\"#域传送\">#</a> 域传送</h4>\n<p>DNS 服务器可以分为主服务器、备份服务器和缓存服务器。域传送是指备份服务器从主服务器拷贝数据，并使用得到的数据更新自身数据库。<strong>域传送是在主备服务器之间同步数据库的机制。</strong></p>\n<h3 id=\"服务器类型\"><a class=\"markdownIt-Anchor\" href=\"#服务器类型\">#</a> 服务器类型</h3>\n<h4 id=\"根服务器\"><a class=\"markdownIt-Anchor\" href=\"#根服务器\">#</a> 根服务器</h4>\n<ul>\n<li>\n<ul>\n<li>根服务器是 DNS 的核心，负责互联网顶级域名的解析，用于维护域的权威信息，并将 DNS 查询引导到相应的域名服务器。</li>\n<li>根服务器在域名树中代表最顶级的 “.” 域， 一般省略。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>全球只有 13 台根服务器，13 台 IPv4 根服务器的域名标号为 a 到 m，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS1hLXB4OGEucm9vdC1zZXJ2ZXJzLnhuLS1vcmdtLXNtOWYucm9vdC1zZXJ2ZXJzLm9yZw==\">即 a.root-servers.org 到 m.root-servers.org</span>，所有服务器存储的数据相同，仅包含 ICANN (互联网名称与数字地址分配机构) 批准的 TLD (顶级域) 域名权威信息。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"权威服务器\"><a class=\"markdownIt-Anchor\" href=\"#权威服务器\">#</a> 权威服务器</h4>\n<ul>\n<li>\n<ul>\n<li>权威服务器上存储域名 Zone 文件，ZONE 文件是 DNS 上保存域名配置（域名与 ip 映射）的文件，维护域内域名的权威信息，递归服务器可以从权威服务器获得 DNS 查询的资源记录。</li>\n<li>权威服务器需要在所承载的域名所属的 TLD 管理局注册，同一个权威服务器可以承载不同 TLD 域名，同一个域也可以有多个权威服务器。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"递归服务器\"><a class=\"markdownIt-Anchor\" href=\"#递归服务器\">#</a> 递归服务器</h4>\n<ul>\n<li>\n<ul>\n<li>递归服务器负责接收用户的查询请求，进行递归查询并响应用户查询请求。在初始时递归服务器仅有记录了根域名的 Hint 文件。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"相关漏洞\"><a class=\"markdownIt-Anchor\" href=\"#相关漏洞\">#</a> 相关漏洞</h3>\n<h4 id=\"dns劫持\"><a class=\"markdownIt-Anchor\" href=\"#dns劫持\">#</a> DNS 劫持</h4>\n<p>DNS 劫持有多种方式，比较早期的攻击方式是通过攻击域名解析服务器，或是伪造 DNS 响应的方法，来将域名解析到恶意的 IP 地址。</p>\n<p>随着互联网应用的不断发展，出现了基于废弃记录的劫持方式。这种方式发生的场景是次级域名的解析记录指向第三方资源，而第三方资源被释放后，解析记录并没有取消，在这种场景下，可以对应申请第三方资源，以获取控制解析记录的能力。</p>\n<h4 id=\"拒绝服务\"><a class=\"markdownIt-Anchor\" href=\"#拒绝服务\">#</a> 拒绝服务</h4>\n<p>DNS 服务通常会开启 UDP 端口，当 DNS 服务器拥有大量二级域 NS 记录时，通过 DNS 的 UDP 反射攻击可以实现高倍的拒绝服务。</p>\n<h2 id=\"http协议\"><a class=\"markdownIt-Anchor\" href=\"#http协议\">#</a> HTTP 协议</h2>\n<p>超文本传输协议（HTTP，HyperText Transfer Protocol) 是互联网上应用最为广泛的一种网络协议。所有的 WWW 文件都必须遵守这个标准。</p>\n<h3 id=\"http请求类型介绍\"><a class=\"markdownIt-Anchor\" href=\"#http请求类型介绍\">#</a> HTTP 请求类型介绍</h3>\n<pre><code>HTTP 协议中共定义了八种方法或者叫“动作”来表明对 Request-URI 指定的资源的不同操作方式，以下为常用的6种：\n</code></pre>\n<ul>\n<li>\n<ul>\n<li>OPTIONS：返回服务器所支持的 HTTP 请求方法。</li>\n<li>HEAD：与 GET 请求相一致的响应，但只返回头部信息，响应体将不会被返回。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>GET：向特定的资源发出请求。</li>\n<li>POST：向指定资源提交数据进行处理请求。数据被包含在请求体中。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>PUT：向指定资源位置上传其最新内容。</li>\n<li>DELETE：请求服务器删除指定资源。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"get和post区别\"><a class=\"markdownIt-Anchor\" href=\"#get和post区别\">#</a> GET 和 POST 区别</h3>\n<h4 id=\"1url可见性\"><a class=\"markdownIt-Anchor\" href=\"#1url可见性\">#</a> 1：URL 可见性</h4>\n<p>i：Get 传参方式是通过地址栏 URL 传递，是可以直接看到 get 传递的参数，get 把请求的数据在 URL 后通过？连接，通过 &amp; 进行参数分割。</p>\n<p>ii：Post 传参方式参数 URL 不可见，post 将参数存放在 HTTP 的请求体中。</p>\n<h4 id=\"2传输数据大小\"><a class=\"markdownIt-Anchor\" href=\"#2传输数据大小\">#</a> 2：传输数据大小</h4>\n<p>i：Get 传递数据是通过 URL 进行传递，对传递的数据长度是受到 URL 大小的限制，URL 最大长度是 2048 个字符。</p>\n<p>ii：Post 所传递的参数没有长度限制。</p>\n<h4 id=\"3后退页面\"><a class=\"markdownIt-Anchor\" href=\"#3后退页面\">#</a> 3：后退页面</h4>\n<p>Get 后退不会有影响，因为 get 传参直接连接在 URL 的后面，浏览器会有缓冲，后退直接显示即可</p>\n<p>Post 后退会重新进行提交，因为 post 请求的所有参数放在请求体中，请求体发送到服务器，浏览器不会有缓冲，所以需要重新情求</p>\n<h4 id=\"4缓存\"><a class=\"markdownIt-Anchor\" href=\"#4缓存\">#</a> 4：缓存</h4>\n<p>i：Get 请求可以被缓存，请求的记录会留在历史记录中。</p>\n<p>ii：Post 不可以被缓存，请求不会留在历史记录。</p>\n<h4 id=\"5编码方式\"><a class=\"markdownIt-Anchor\" href=\"#5编码方式\">#</a> 5：编码方式</h4>\n<p>i：Get  请求只 URL 编码。</p>\n<p>ii：Post 支持多种编码方式。</p>\n<h4 id=\"6字符类型\"><a class=\"markdownIt-Anchor\" href=\"#6字符类型\">#</a> 6：字符类型</h4>\n<p>i：Get  只支持 ASCII 字符。</p>\n<p>ii：Post 没有字符类型限制。</p>\n<h3 id=\"http请求响应过程\"><a class=\"markdownIt-Anchor\" href=\"#http请求响应过程\">#</a> HTTP 请求响应过程</h3>\n<h4 id=\"1域名解析\"><a class=\"markdownIt-Anchor\" href=\"#1域名解析\">#</a> 1：域名解析</h4>\n<p>首先浏览器会解析域名（准确的叫法应该是主机名）得到对应的 IP 地址，那怎么解析到对应的 IP 地址？</p>\n<p>① 浏览器会首先搜索浏览器自身的 DNS 缓存（缓存时间比较短，大概只有 1 分钟，且只能容纳 1000 条缓存），看自身的缓存中是否有该域名对应的条目，而且没有过期，如果有且没有过期则解析到此结束；      （先搜索浏览器本身）</p>\n<p>② 如果浏览器自身的缓存里面没有找到对应的条目，那么浏览器会搜索操作系统自身的 DNS 缓存，如果找到且没有过期则停止搜索解析到此结束；      （自己操作系统本身）</p>\n<p>③ 如果在 Windows 系统的 DNS 缓存也没有找到，那么尝试读取 hosts 文件（位于 C:\\Windows\\System32\\drivers\\etc），看看这里面有没有该域名对应的 IP 地址，如果有则解析成功；      （查找 host 目录）</p>\n<p>④ 如果在 hosts 文件中也没有找到对应的条目，浏览器就会发起一个 DNS 的系统调用，就会向本地配置的首选 DNS 服务器（一般是电信运营商提供的，也可以使用像 Google 提供的 DNS 服务器）发起域名解析请求（通过的是 UDP 协议向 DNS 的 53 端口发起请求，这个请求是递归的请求，也就是运营商的 DNS 服务器必须得提供给我们该域名的 IP 地址），运营商的 DNS 服务器首先查找自身的缓存，找到对应的条目，且没有过期，则解析成功。如果没有找到对应的条目，则有运营商的 DNS 代我们的浏览器发起迭代 DNS 解析请求，它首先是会找根域的 DNS 的 IP 地址（这个 DNS 服务器都内置 13 台根域的 DNS 的 IP 地址），然后进一步请求； 正常情况下通过这四步基本就能解析域名获得 IP 了。     （向 DNS 服务器进行请求）</p>\n<h4 id=\"2发起tcp3次握手\"><a class=\"markdownIt-Anchor\" href=\"#2发起tcp3次握手\">#</a> 2：发起 TCP3 次握手</h4>\n<p>拿到域名对应的 IP 地址之后，User-Agent（一般是指浏览器）会以一个随机端口（1024 &lt; 端口 &lt; 65535）向服务器的 WEB 程序的 80 端口发起 TCP 的连接请求。这个连接请求（原始的 http 请求经过 TCP/IP4 层模型的层层封包）到达服务器端后（这中间通过各种路由设备，局域网内除外），进入到网卡，然后是进入到内核的 TCP/IP 协议栈（用于识别该连接请求，解封包，一层一层的剥开），还有可能要经过 Netfilter 防火墙（属于内核的模块）的过滤，最终到达 WEB 程</p>\n<h4 id=\"3建立tcp连接后发起http请求\"><a class=\"markdownIt-Anchor\" href=\"#3建立tcp连接后发起http请求\">#</a> 3：建立 TCP 连接后发起 HTTP 请求</h4>\n<p>经过 TCP3 次握手之后，浏览器发起了 http 的请求</p>\n<h4 id=\"4服务器端响应http请求浏览器得到html代码\"><a class=\"markdownIt-Anchor\" href=\"#4服务器端响应http请求浏览器得到html代码\">#</a> 4：服务器端响应 http 请求，浏览器得到 html 代码</h4>\n<p>服务器端 WEB 程序接收到 http 请求以后，就开始处理该请求，处理之后就返回给浏览器 html 文件</p>\n<h4 id=\"5浏览器解析html代码并请求html代码中的资源\"><a class=\"markdownIt-Anchor\" href=\"#5浏览器解析html代码并请求html代码中的资源\">#</a> 5：浏览器解析 html 代码，并请求 html 代码中的资源</h4>\n<p>浏览器拿到 html 文件后，就开始解析其中的 html 代码，遇到 js/css/image 等静态资源时，就向服务器端去请求下载（会使用多线程下载，每个浏览器的线程数不一样），这个时候就用上 keep-alive 特性了，建立一次 HTTP 连接，可以请求多个资源，下载资源的顺序就是按照代码里的顺序，但是由于每个资源大小不一样，而浏览器又多线程请求请求资源，所以请求成功显示的顺序并不一定是代码里面的顺序。 浏览器在请求静态资源时（在未过期的情况下），向服务器端发起一个 http 请求（询问自从上一次修改时间到现在有没有对资源进行修改），如果服务器端返回 304 状态码（告诉浏览器服务器端没有修改），那么浏览器会直接读取本地的该资源的缓存文件。</p>\n<h4 id=\"6浏览器对页面进行渲染呈现给用户\"><a class=\"markdownIt-Anchor\" href=\"#6浏览器对页面进行渲染呈现给用户\">#</a> 6：浏览器对页面进行渲染呈现给用户</h4>\n<p>浏览器利用自己内部的工作机制，把请求到的静态资源和 html 代码进行渲染，渲染之后呈现给用户。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623380969565-a743a1be-0431-4721-bf2f-efa990ee75c3.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624897224672-3fd38551-fca1-48da-8d9f-182ed759eea6.png\" alt=\"img\"></p>\n<h3 id=\"http请求报文\"><a class=\"markdownIt-Anchor\" href=\"#http请求报文\">#</a> HTTP 请求报文</h3>\n<h4 id=\"1组成\"><a class=\"markdownIt-Anchor\" href=\"#1组成\">#</a> 1：组成</h4>\n<p>一个 HTTP 请求报文由四个部分组成：请求行、请求头部、空行、请求数据。</p>\n<h4 id=\"2服务器端响应http请求浏览器得到html代码\"><a class=\"markdownIt-Anchor\" href=\"#2服务器端响应http请求浏览器得到html代码\">#</a> 2：服务器端响应 http 请求，浏览器得到 html 代码</h4>\n<ul>\n<li>\n<ul>\n<li>请求行由请求方法字段、URL 字段和 HTTP 协议版本字段 3 个字段组成，它们用空格分隔。比如 GET /data/info.html HTTP/1.1</li>\n<li>方法字段就是 HTTP 使用的请求方法，比如常见的 GET/POST</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>其中 HTTP 协议版本有两种：HTTP1.0/HTTP1.1 可以这样区别：</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>HTTP1.0 对于每个连接都只能传送一个请求和响应，请求就会关闭，HTTP1.0 没有 Host 字段；</li>\n<li>HTTP1.1 在同一个连接中可以传送多个请求和响应，多个请求可以重叠和同时进行，HTTP1.1 必须有 Host 字段。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"3空行\"><a class=\"markdownIt-Anchor\" href=\"#3空行\">#</a> 3：空行</h4>\n<p>它的作用是通过一个空行，告诉服务器请求头部到此为止。</p>\n<h4 id=\"4请求数据\"><a class=\"markdownIt-Anchor\" href=\"#4请求数据\">#</a> 4：请求数据</h4>\n<p>若方法字段是 GET，则此项为空，没有数据；</p>\n<p>若方法字段是 POST, 则通常来说此处放置的就是要提交的数据；</p>\n<p>比如要使用 POST 方法提交一个表单，其中有 user 字段中数据为 “admin”, password 字段为 123456，那么这里的请求数据就是 user=admin&amp;password=123456，使用 &amp; 来连接各个字段。</p>\n<h4 id=\"5http请求报文格式\"><a class=\"markdownIt-Anchor\" href=\"#5http请求报文格式\">#</a> 5：HTTP 请求报文格式</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623382353294-bf11e52b-c4ab-4794-9838-a1c317a02858.png\" alt=\"img\"></p>\n<h4 id=\"6post请求\"><a class=\"markdownIt-Anchor\" href=\"#6post请求\">#</a> 6：POST 请求</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623382365899-56b9ea24-d4eb-4a27-bc87-4255d232a865.png\" alt=\"img\"></p>\n<h4 id=\"7常见的请求头\"><a class=\"markdownIt-Anchor\" href=\"#7常见的请求头\">#</a> 7：常见的请求头</h4>\n<ul>\n<li>\n<p><strong>Accept</strong></p>\n</li>\n<li>\n<ul>\n<li>指定客户端能够接收的内容类型</li>\n<li>Accept: text/plain, text/html</li>\n</ul>\n</li>\n<li>\n<p><strong>Accept-Charset</strong></p>\n</li>\n<li>\n<ul>\n<li>浏览器可以接受的字符编码集</li>\n<li>Accept-Charset: iso-8859-5</li>\n</ul>\n</li>\n<li>\n<p><strong>Accept-Encoding</strong></p>\n</li>\n<li>\n<ul>\n<li>指定浏览器可以支持的 web 服务器返回内容压缩编码类型</li>\n<li>Accept-Encoding: compress, gzip</li>\n</ul>\n</li>\n<li>\n<p><strong>Accept-Language</strong></p>\n</li>\n<li>\n<ul>\n<li>浏览器可接受的语言</li>\n<li>Accept-Language: en,zh</li>\n</ul>\n</li>\n<li>\n<p><strong>Cache-Control</strong></p>\n</li>\n<li>\n<ul>\n<li>指定请求和响应遵循的缓存机制 Cache-Control: no-cache</li>\n</ul>\n</li>\n<li>\n<p><strong>Connection</strong></p>\n</li>\n<li>\n<ul>\n<li>表示是否需要持久连接 // HTTP 1.1 默认进行持久连接</li>\n<li>Connection: close</li>\n</ul>\n</li>\n<li>\n<p><strong>Cookie</strong></p>\n</li>\n<li>\n<ul>\n<li>HTTP 请求发送时，会把保存在该请求域名下的所有 cookie 值一起发送给 web 服务器</li>\n<li>Cookie: role=admin;ssid=1</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Length</strong></p>\n</li>\n<li>\n<ul>\n<li>请求的内容长度</li>\n<li>Content-Length: 348</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Type</strong></p>\n</li>\n<li>\n<ul>\n<li>请求的与实体对应的 MIME 信息</li>\n<li>Content-Type: application/x-www-form-urlencoded</li>\n</ul>\n</li>\n<li>\n<p><strong>Date</strong></p>\n</li>\n<li>\n<ul>\n<li>请求发送的日期和时间</li>\n<li>Date: Tue, 15 Nov 2010 08:12:31 GMT</li>\n</ul>\n</li>\n<li>\n<p><strong>From</strong></p>\n</li>\n<li>\n<ul>\n<li>发出请求的用户的 Email</li>\n<li>From: <span class=\"exturl\" data-url=\"bWFpbHRvOnVzZXJAZW1haWwuY29t\">user@email.com</span></li>\n</ul>\n</li>\n<li>\n<p><strong>Host</strong></p>\n</li>\n<li>\n<ul>\n<li>指定请求的服务器的域名和端口号</li>\n<li>Host: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5naXRodWIuY29t\">www.github.com</span></li>\n</ul>\n</li>\n<li>\n<p><strong>Max-Forwards</strong></p>\n</li>\n<li>\n<ul>\n<li>限制信息通过代理和网关传送的时间</li>\n<li>Max-Forwards: 10</li>\n</ul>\n</li>\n<li>\n<p><strong>Range</strong></p>\n</li>\n<li>\n<ul>\n<li>只请求实体的一部分，指定范围</li>\n<li>Range: bytes=500-999</li>\n</ul>\n</li>\n<li>\n<p><strong>Referer</strong></p>\n</li>\n<li>\n<ul>\n<li>先前网页的地址，当前请求网页紧随其后，即来路</li>\n<li>Referer: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy56Y21oaS5jb20vYXJjaGl2ZXMvNzEuaHRtbA==\">http://www.zcmhi.com/archives/71.html</span></li>\n</ul>\n</li>\n<li>\n<p><strong>TE</strong></p>\n</li>\n<li>\n<ul>\n<li>客户端愿意接受的传输编码，并通知服务器接受接受尾加头信息</li>\n<li>TE: trailers,deflate;q=0.5</li>\n</ul>\n</li>\n<li>\n<p><strong>Upgrade</strong></p>\n</li>\n<li>\n<ul>\n<li>向服务器指定某种传输协议以便服务器进行转换（如果支持）</li>\n<li>Upgrade: HTTP/2.0, SHTTP/1.3, IRC/6.9, RTA/x11</li>\n</ul>\n</li>\n<li>\n<p><strong>User-Agent</strong></p>\n</li>\n<li>\n<ul>\n<li>User-Agent 的内容包含发出请求的用户信息（浏览器的版本号以及操作系统的信息）</li>\n<li>User-Agent: Mozilla/5.0 (Linux; X11)</li>\n</ul>\n</li>\n<li>\n<p><strong>Via</strong></p>\n</li>\n<li>\n<ul>\n<li>通知中间网关或代理服务器地址，通信协议</li>\n<li>Via: 1.0 fred, 1.1 <span class=\"exturl\" data-url=\"aHR0cDovL25vd2hlcmUuY29t\">nowhere.com</span> (Apache/1.1)</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"http响应报文\"><a class=\"markdownIt-Anchor\" href=\"#http响应报文\">#</a> HTTP 响应报文</h3>\n<h4 id=\"1响应行\"><a class=\"markdownIt-Anchor\" href=\"#1响应行\">#</a> 1：响应行</h4>\n<p>响应行一般由协议版本、状态码及其描述组成 比如 HTTP/1.1 200 OK；</p>\n<p>其中协议版本 HTTP/1.1 或者 HTTP/1.0，200 就是它的状态码，OK 则为它的描述。</p>\n<h4 id=\"2响应头\"><a class=\"markdownIt-Anchor\" href=\"#2响应头\">#</a> 2：响应头</h4>\n<p>响应头用于描述服务器的基本信息，以及数据的描述，服务器通过这些数据的描述信息，可以通知客户端如何处理等一会儿它回送的数据。 设置 HTTP 响应头往往和状态码结合起来。例如，有好几个表示 “文档位置已经改变” 的状态代码都伴随着一个 Location 头，而 401 (Unauthorized) 状态代码则必须伴随一个 WWW-Authenticate 头。然而，即使在没有设置特殊含义的状态代码时，指定应答头也是很有用的。应答头可以用来完成：设置 Cookie，指定修改日期，指示浏览器按照指定的间隔刷新页面，声明文档的长度以便利用持久 HTTP 连接，…… 等等许多其他任务。</p>\n<h4 id=\"3响应体\"><a class=\"markdownIt-Anchor\" href=\"#3响应体\">#</a> 3：响应体</h4>\n<p>响应体就是响应的消息体，如果是纯数据就是返回纯数据，如果请求的是 HTML 页面，那么返回的就是 HTML 代码，如果是 JS 就是 JS 代码，如此之类。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623382685076-b0271757-70e6-4c7d-ae9f-52c705370d32.png\" alt=\"img\"></p>\n<h4 id=\"4常见的响应头\"><a class=\"markdownIt-Anchor\" href=\"#4常见的响应头\">#</a> 4：常见的响应头</h4>\n<ul>\n<li>\n<p><strong>Accept-Ranges</strong></p>\n</li>\n<li>\n<ul>\n<li>表明服务器是否支持指定范围请求及哪种类型的分段请求</li>\n<li>Accept-Ranges: bytes</li>\n</ul>\n</li>\n<li>\n<p><strong>Access-Control-Allow-Origin</strong></p>\n</li>\n<li>\n<ul>\n<li>配置有权限访问资源的域</li>\n<li>Access-Control-Allow-Origin: <origin>|*</li>\n</ul>\n</li>\n<li>\n<p><strong>Age</strong></p>\n</li>\n<li>\n<ul>\n<li>从原始服务器到代理缓存形成的估算时间（以秒计，非负）</li>\n<li>Age: 12</li>\n</ul>\n</li>\n<li>\n<p><strong>Allow</strong></p>\n</li>\n<li>\n<ul>\n<li>对某网络资源的有效的请求行为，不允许则返回 405</li>\n<li>Allow: GET, HEAD</li>\n</ul>\n</li>\n<li>\n<p><strong>Cache-Control</strong></p>\n</li>\n<li>\n<ul>\n<li>告诉所有的缓存机制是否可以缓存及哪种类型</li>\n<li>Cache-Control: no-cache</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Encoding</strong></p>\n</li>\n<li>\n<ul>\n<li>web 服务器支持的返回内容压缩编码类型。</li>\n<li>Content-Encoding: gzip</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Language</strong></p>\n</li>\n<li>\n<ul>\n<li>响应体的语言</li>\n<li>Content-Language: en,zh</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Length</strong></p>\n</li>\n<li>\n<ul>\n<li>响应体的长度</li>\n<li>Content-Length: 348</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Location</strong></p>\n</li>\n<li>\n<ul>\n<li>请求资源可替代的备用的另一地址</li>\n<li>Content-Location: /index.htm</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-MD5</strong></p>\n</li>\n<li>\n<ul>\n<li>返回资源的 MD5 校验值</li>\n<li>Content-MD5: Q2hlY2sgSW50ZWdyaXR5IQ==</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Range</strong></p>\n</li>\n<li>\n<ul>\n<li>在整个返回体中本部分的字节位置</li>\n<li>Content-Range: bytes 21010-47021/47022</li>\n</ul>\n</li>\n<li>\n<p><strong>Content-Type</strong></p>\n</li>\n<li>\n<ul>\n<li>返回内容的 MIME 类型</li>\n<li>Content-Type: text/html; charset=utf-8</li>\n</ul>\n</li>\n<li>\n<p><strong>Date</strong></p>\n</li>\n<li>\n<ul>\n<li>原始服务器消息发出的时间</li>\n<li>Date: Tue, 15 Nov 2010 08:12:31 GMT</li>\n</ul>\n</li>\n<li>\n<p><strong>Expires</strong></p>\n</li>\n<li>\n<ul>\n<li>响应过期的日期和时间</li>\n<li>Expires: Thu, 01 Dec 2010 16:00:00 GMT</li>\n</ul>\n</li>\n<li>\n<p><strong>Last-Modified</strong></p>\n</li>\n<li>\n<ul>\n<li>请求资源的最后修改时间</li>\n<li>Last-Modified: Tue, 15 Nov 2010 12:45:26 GMT</li>\n</ul>\n</li>\n<li>\n<p><strong>Location</strong></p>\n</li>\n<li>\n<ul>\n<li>用来重定向接收方到非请求 URL 的位置来完成请求或标识新的资源</li>\n<li>Location: <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy56Y21oaS5jb20vYXJjaGl2ZXMvOTQuaHRtbA==\">http://www.zcmhi.com/archives/94.html</span></li>\n</ul>\n</li>\n<li>\n<p><strong>Refresh</strong></p>\n</li>\n<li>\n<ul>\n<li>应用于重定向或一个新的资源被创造，在 5 秒之后重定向（由网景提出，被大部分浏览器支持）</li>\n<li>Refresh: 5; url=http://www.zcmhi.com/archives/94.html</li>\n</ul>\n</li>\n<li>\n<p><strong>Server</strong></p>\n</li>\n<li>\n<ul>\n<li>web 服务器软件名称</li>\n<li>Server: Apache/1.3.27 (Unix) (Red-Hat/Linux)</li>\n</ul>\n</li>\n<li>\n<p><strong>Set-Cookie</strong></p>\n</li>\n<li>\n<ul>\n<li>设置 Http Cookie Set-Cookie: UserID=JohnDoe; Max-Age=3600; Version=1</li>\n</ul>\n</li>\n<li>\n<p><strong>Strict-Transport-Security</strong></p>\n</li>\n<li>\n<ul>\n<li>设置浏览器强制使用 HTTPS 访问</li>\n<li>max-age: x 秒的时间内 访问对应域名都使用 HTTPS 请求</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>includeSubDomains: 网站的子域名也启用规则</li>\n<li>Strict-Transport-Security: max-age=1000; includeSubDomains</li>\n</ul>\n</li>\n<li>\n<p><strong>Trailer</strong></p>\n</li>\n<li>\n<ul>\n<li>指出头域在分块传输编码的尾部存在 Trailer: Max-Forwards</li>\n</ul>\n</li>\n<li>\n<p><strong>Transfer-Encoding</strong></p>\n</li>\n<li>\n<ul>\n<li>文件传输编码</li>\n<li>Transfer-Encoding:chunked</li>\n</ul>\n</li>\n<li>\n<p><strong>Vary</strong></p>\n</li>\n<li>\n<ul>\n<li>告诉下游代理是使用缓存响应还是从原始服务器请求</li>\n<li>Vary: *</li>\n</ul>\n</li>\n<li>\n<p><strong>Via</strong></p>\n</li>\n<li>\n<ul>\n<li>告知代理客户端响应是通过哪里发送的</li>\n<li>Via: 1.0 fred, 1.1 <span class=\"exturl\" data-url=\"aHR0cDovL25vd2hlcmUuY29t\">nowhere.com</span> (Apache/1.1)</li>\n</ul>\n</li>\n<li>\n<p><strong>WWW-Authenticate</strong></p>\n</li>\n<li>\n<ul>\n<li>表明客户端请求实体应该使用的授权方案</li>\n<li>WWW-Authenticate: Basic</li>\n</ul>\n</li>\n<li>\n<p><strong>X-Content-Type-Options</strong></p>\n</li>\n<li>\n<ul>\n<li>配置禁止 MIME 类型嗅探</li>\n<li>X-Content-Type-Options: nosniff</li>\n</ul>\n</li>\n<li>\n<p><strong>X-Frame-Options</strong></p>\n</li>\n<li>\n<ul>\n<li>配置页面是否能出现在 <frame>, <iframe>, <embed>, <object> 等标签中，防止点击劫持</li>\n<li>X-Frame-Options: deny</li>\n</ul>\n</li>\n<li>\n<p><strong>X-XSS-Protection</strong></p>\n</li>\n<li>\n<ul>\n<li>配置 XSS 防护机制</li>\n<li>X-XSS-Protection: 1; mode=block</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"http响应码\"><a class=\"markdownIt-Anchor\" href=\"#http响应码\">#</a> HTTP 响应码</h3>\n<h4 id=\"1xx临时响应\"><a class=\"markdownIt-Anchor\" href=\"#1xx临时响应\">#</a> 1xx (临时响应)</h4>\n<p>表示临时响应并需要请求者继续执行操作的状态代码。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623383144601-8d2ccf90-52d2-4b09-916c-23e66a95bc42.png\" alt=\"img\"></p>\n<h4 id=\"2xx成功\"><a class=\"markdownIt-Anchor\" href=\"#2xx成功\">#</a> 2xx (成功)</h4>\n<p>表示成功处理了请求的状态代码。（201 的请求方法为 put）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623383374670-6a174b75-90ec-4b8a-85fc-6c580529b8c1.png\" alt=\"img\"></p>\n<h4 id=\"3xx重定向\"><a class=\"markdownIt-Anchor\" href=\"#3xx重定向\">#</a> 3xx (重定向)</h4>\n<p>表示要完成请求，需要进一步操作。 通常，这些状态代码用来重定向。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623383636015-a09ccdf2-ebbb-4821-9e8a-516b2cdc02fd.png\" alt=\"img\"></p>\n<h4 id=\"4xx请求错误\"><a class=\"markdownIt-Anchor\" href=\"#4xx请求错误\">#</a> 4xx (请求错误)</h4>\n<p>这些状态代码表示请求可能出错，妨碍了服务器的处理。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623384149279-0fab9b9f-925a-4222-9d49-299632e915bf.png\" alt=\"img\"></p>\n<h4 id=\"5xx服务器错误\"><a class=\"markdownIt-Anchor\" href=\"#5xx服务器错误\">#</a> 5xx (服务器错误)</h4>\n<p>这些状态代码表示服务器在尝试处理请求时发生内部错误。 这些错误可能是服务器本身的错误，而不是请求出错。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623384337008-f4573aef-9930-4bbd-86c8-57706b78497f.png\" alt=\"img\"></p>\n<h2 id=\"https协议\"><a class=\"markdownIt-Anchor\" href=\"#https协议\">#</a> HTTPS 协议</h2>\n<p>HTTPS (HyperText Transfer Protocol over Secure Socket Layer) 可以理解为 HTTP+SSL/TLS， 即 HTTP 下加入 SSL 层，HTTPS 的安全基础是 SSL。</p>\n<p>HTTPS 默认工作在 TCP 协议 443 端口，它的工作流程一般如以下方式：</p>\n<ul>\n<li>\n<p>1、TCP 三次同步握手</p>\n</li>\n<li>\n<p>2、客户端验证服务器数字证书</p>\n</li>\n<li>\n<p>3、DH 算法协商对称加密算法的密钥、hash 算法的密钥</p>\n</li>\n<li>\n<p>4、SSL 安全加密隧道协商完成</p>\n</li>\n<li>\n<p>5、网页以加密的方式传输，用协商的对称加密算法和密钥加密，保证数据机密性；用协商的 hash 算法进行数据完整性保护，保证数据不被篡改。</p>\n</li>\n</ul>\n<p>证书失效或证书验证失败，网站通常会返回如下页面：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1625052324418-55faa66d-8a07-4a91-a512-fd4bdd8cf030.png\" alt=\"img\"></p>\n<h3 id=\"ca\"><a class=\"markdownIt-Anchor\" href=\"#ca\">#</a> CA</h3>\n<p>CA (Certificate Authority) 是颁发数字证书的机构。是负责发放和管理数字证书的权威机构，并作为电子商务交易中受信任的第三方，承担公钥体系中公钥的合法性检验的责任。</p>\n<h3 id=\"http-与-https-区别\"><a class=\"markdownIt-Anchor\" href=\"#http-与-https-区别\">#</a> HTTP 与 HTTPS 区别</h3>\n<ul>\n<li>\n<p>HTTP 明文传输，数据都是未加密的，安全性较差，HTTPS（SSL+HTTP） 数据传输过程是加密的，安全性较好。</p>\n</li>\n<li>\n<p>使用 HTTPS 协议需要到 CA（Certificate Authority，数字证书认证机构） 申请证书，一般免费证书较少，因而需要一定费用。证书颁发机构如：Symantec、Comodo、GoDaddy 和 GlobalSign 等。</p>\n</li>\n<li>\n<p>HTTP 页面响应速度比 HTTPS 快，主要是因为 HTTP 使用 TCP 三次握手建立连接，客户端和服务器需要交换 3 个包，而 HTTPS 除了 TCP 的三个包，还要加上 ssl 握手需要的 9 个包，所以一共是 12 个包。</p>\n</li>\n<li>\n<p>http 和 https 使用的是完全不同的连接方式，用的端口也不一样，前者是 80，后者是 443。</p>\n</li>\n<li>\n<p>HTTPS 其实就是建构在 SSL/TLS 之上的 HTTP 协议，所以，要比较 HTTPS 比 HTTP 要更耗费服务器资源。</p>\n</li>\n</ul>\n<h3 id=\"https-的工作原理\"><a class=\"markdownIt-Anchor\" href=\"#https-的工作原理\">#</a> HTTPS 的工作原理</h3>\n<p>我们都知道 HTTPS 能够加密信息，以免敏感信息被第三方获取，所以很多银行网站或电子邮箱等等安全级别较高的服务都会采用 HTTPS 协议。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2336202/1641217288680-a87599c1-beb5-4654-bdad-15614a1ddc51.png\" alt=\"img\"></p>\n<p><strong>1、客户端发起 HTTPS 请求</strong></p>\n<p>这个没什么好说的，就是用户在浏览器里输入一个 https 网址，然后连接到 server 的 443 端口。</p>\n<p><strong>2、服务端的配置</strong></p>\n<p>采用 HTTPS 协议的服务器必须要有一套数字证书，可以自己制作，也可以向组织申请，区别就是自己颁发的证书需要客户端验证通过，才可以继续访问，而使用受信任的公司申请的证书则不会弹出提示页面 (startssl 就是个不错的选择，有 1 年的免费服务)。</p>\n<p>这套证书其实就是一对公钥和私钥，如果对公钥和私钥不太理解，可以想象成一把钥匙和一个锁头，只是全世界只有你一个人有这把钥匙，你可以把锁头给别人，别人可以用这个锁把重要的东西锁起来，然后发给你，因为只有你一个人有这把钥匙，所以只有你才能看到被这把锁锁起来的东西。</p>\n<p><strong>3、传送证书</strong></p>\n<p>这个证书其实就是公钥，只是包含了很多信息，如证书的颁发机构，过期时间等等。</p>\n<p><strong>4、客户端解析证书</strong></p>\n<p>这部分工作是有客户端的 TLS 来完成的，首先会验证公钥是否有效，比如颁发机构，过期时间等等，如果发现异常，则会弹出一个警告框，提示证书存在问题。</p>\n<p>如果证书没有问题，那么就生成一个随机值，然后用证书对该随机值进行加密，就好像上面说的，把随机值用锁头锁起来，这样除非有钥匙，不然看不到被锁住的内容。</p>\n<p><strong>5、传送加密信息</strong></p>\n<p>这部分传送的是用证书加密后的随机值，目的就是让服务端得到这个随机值，以后客户端和服务端的通信就可以通过这个随机值来进行加密解密了。</p>\n<p><strong>6、服务端解密信息</strong></p>\n<p>服务端用私钥解密后，得到了客户端传过来的随机值 (私钥)，然后把内容通过该值进行对称加密，所谓对称加密就是，将信息和私钥通过某种算法混合在一起，这样除非知道私钥，不然无法获取内容，而正好客户端和服务端都知道这个私钥，所以只要加密算法够彪悍，私钥够复杂，数据就够安全。</p>\n<p><strong>7、传输加密后的信息</strong></p>\n<p>这部分信息是服务段用私钥加密后的信息，可以在客户端被还原。</p>\n<p><strong>8、客户端解密信息</strong></p>\n<p>客户端用之前生成的私钥解密服务段传过来的信息，于是获取了解密后的内容，整个过程第三方即使监听到了数据，也束手无策。</p>\n<iframe style=\"width: 1px; height: 1px; position: absolute; left: -100px; bottom: -100px; display: none;\" src=\"https://tracert.alipay.com/cross.html\"></iframe>",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/15/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.5MySQL%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%8F%8Asql%E6%B3%A8%E5%85%A5/",
            "url": "https://sun-spots.github.io/2022/01/15/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.5MySQL%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95%E5%8F%8Asql%E6%B3%A8%E5%85%A5/",
            "title": "MySQL基本语法及sql注入",
            "date_published": "2022-01-15T12:05:00.000Z",
            "content_html": "<h1 id=\"mysql基本语法及sql注入\"><a class=\"markdownIt-Anchor\" href=\"#mysql基本语法及sql注入\">#</a> MySQL 基本语法及 sql 注入</h1>\n<h2 id=\"课堂导学\"><a class=\"markdownIt-Anchor\" href=\"#课堂导学\">#</a> 课堂导学：</h2>\n<p>Sql 语句的学习主要为渗透中 Sql 注入漏洞打下坚实基础，这样在学 Sql 注入漏洞时才能一马平川。</p>\n<h2 id=\"知识框架\"><a class=\"markdownIt-Anchor\" href=\"#知识框架\">#</a> 知识框架：</h2>\n<p>1：常见 SQL 语句</p>\n<p>2：SQL 之增删改查</p>\n<p>3：SQL 中 tips</p>\n<p>4：注入中常见的 sql 函数</p>\n<h2 id=\"1常见的sql语句\"><a class=\"markdownIt-Anchor\" href=\"#1常见的sql语句\">#</a> 1：常见的 SQL 语句</h2>\n<h3 id=\"11sql介绍\"><a class=\"markdownIt-Anchor\" href=\"#11sql介绍\">#</a> 1.1：SQL 介绍</h3>\n<ul>\n<li>\n<ul>\n<li>SQL 是用于访问和处理数据库的标准的计算机语言。</li>\n<li>SQL，指结构化查询语言，全称是 Structured Query Language。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 让您可以访问和处理数据库。</li>\n<li>SQL 是一种 ANSI（American National Standards Institute 美国国家标准化组织）标准的计算机语言。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>简单来说就是按照 数据结构来组织、 存储和管理数据的仓库。</li>\n<li>数据库是以一定方式储存在一起、能与多个用户共享、具有尽可能小的冗余度、与应用程序彼此独立的数据集合。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>MySQL 也是一个<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYWlrZS5iYWlkdS5jb20vaXRlbS8lRTUlODUlQjMlRTclQjMlQkIlRTUlOUUlOEIlRTYlOTUlQjAlRTYlOEQlQUUlRTUlQkElOTMlRTclQUUlQTElRTclOTAlODYlRTclQjMlQkIlRTclQkIlOUYvNjk2NTEx\">关系型数据库管理系统</span>，也是最受欢迎的开源软件之一。</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"12sql特点\"><a class=\"markdownIt-Anchor\" href=\"#12sql特点\">#</a> 1.2：SQL 特点</h3>\n<ul>\n<li>\n<ul>\n<li>SQL 面向数据库执行查询</li>\n<li>SQL 可从数据库取回数据</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可在数据库中插入新的记录</li>\n<li>SQL 可更新数据库中的数据</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可从数据库删除记录</li>\n<li>SQL 可创建新数据库</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可在数据库中创建新表</li>\n<li>SQL 可在数据库中创建存储过程</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>SQL 可在数据库中创建视图</li>\n<li>SQL 可以设置表、存储过程和视图的权限</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"13数据库操作\"><a class=\"markdownIt-Anchor\" href=\"#13数据库操作\">#</a> 1.3：数据库操作</h3>\n<h4 id=\"连接数据库\"><a class=\"markdownIt-Anchor\" href=\"#连接数据库\">#</a> 连接数据库</h4>\n<p>明文连接</p>\n<p>mysql -h127.0.0.1 -P3306 -uroot -proot  – 明文</p>\n<p>如果连接本地数据库 -h 可以省略 如果服务器端口是 3306，-P 端口号也可以省略</p>\n<p><strong>-h 后面跟的是访问的主机 IP 地址，-u 后面为数据库的用户名，-p 为数据库的密码，-P 为连接的服务器的端口号</strong></p>\n<p>mysql -uroot -proot\t– 明文</p>\n<p>密文连接</p>\n<p>mysql -uroot -p</p>\n<p>Enter password: ****</p>\n<h4 id=\"退出数据库\"><a class=\"markdownIt-Anchor\" href=\"#退出数据库\">#</a> 退出数据库</h4>\n<p>EXIT       -- 方法一</p>\n<p>quit         -- 方法二</p>\n<p>\\q            -- 方法三</p>\n<p>ctrl+c      -- 方法四</p>\n<h4 id=\"注意\"><a class=\"markdownIt-Anchor\" href=\"#注意\">#</a> 注意</h4>\n<p>sql 语句最后以 “;” 结尾</p>\n<h3 id=\"14常用的sql语句\"><a class=\"markdownIt-Anchor\" href=\"#14常用的sql语句\">#</a> 1.4：常用的 SQL 语句</h3>\n<p>查询当前数据库版本：\t\tselect version ();</p>\n<p>查询当前数据库用户：\t\tselect user ();</p>\n<p>查询当前路径：\t\t\tselect @@basedir;   // 该路径为数据库安装的位置</p>\n<p>查询所有数据库：\t\t\tshow databases;</p>\n<p>选择一个数据库：\t\t\tuse + 数据库名；</p>\n<p>查询当前数据库：\t\t\tselect database ();</p>\n<p>查询所有表名：\t\t\tshow tables;</p>\n<p>创建一个数据库：\t\t\tcreate database 数据库名；</p>\n<p>删除一个数据库：\t\t\tdrop database 数据库名；</p>\n<p>查询一个表的结构：\t\tdesc 表名；</p>\n<h3 id=\"15数据库表字段的运用\"><a class=\"markdownIt-Anchor\" href=\"#15数据库表字段的运用\">#</a> 1.5：数据库表，字段的运用</h3>\n<h4 id=\"数据库表\"><a class=\"markdownIt-Anchor\" href=\"#数据库表\">#</a> 数据库表</h4>\n<ul>\n<li>\n<ul>\n<li>一个数据库通常包含一个或多个表。每个表由一个名字标识（例如 “客户” 或者 “订单”）；表包含带有数据的记录（行）。</li>\n<li>下面的例子是一个名为 “Persons” 的表：</li>\n</ul>\n</li>\n</ul>\n<p>表包含三条记录（每一条对应一个人）和五个列（Id、姓、名、地址和城市），行为一个表的记录，列为一个表的字段</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934373498-e2d668b2-f1d2-45fe-9cb0-cb4ba430c67d.png\" alt=\"img\"></p>\n<h4 id=\"sql-dml-和-ddl\"><a class=\"markdownIt-Anchor\" href=\"#sql-dml-和-ddl\">#</a> SQL DML 和 DDL</h4>\n<p>可以把 SQL 分为两个部分：数据操作语言 (DML) 和 数据定义语言 (DDL)。</p>\n<h4 id=\"sql-的-dml-部分\"><a class=\"markdownIt-Anchor\" href=\"#sql-的-dml-部分\">#</a> SQL 的 DML 部分</h4>\n<ul>\n<li>\n<p>SELECT - 从数据库表中获取数据</p>\n</li>\n<li>\n<p>UPDATE - 更新数据库表中的数据</p>\n</li>\n<li>\n<p>DELETE - 从数据库表中删除数据（删除数据用 delect，删除表、数据库、视图、索引等用 drop）</p>\n</li>\n<li>\n<p>INSERT INTO - 向数据库表中插入数据</p>\n</li>\n</ul>\n<h4 id=\"sql-dml-和-ddl-2\"><a class=\"markdownIt-Anchor\" href=\"#sql-dml-和-ddl-2\">#</a> SQL DML 和 DDL</h4>\n<ul>\n<li>\n<p>CREATE DATABASE - 创建新数据库</p>\n</li>\n<li>\n<p>ALTER DATABASE - 修改数据库</p>\n</li>\n<li>\n<p>CREATE TABLE - 创建新表</p>\n</li>\n<li>\n<p>ALTER TABLE - 变更（改变）数据库表（此处的修改包括对数据表的数据修改和对表修改）</p>\n</li>\n<li>\n<p>DROP TABLE - 删除表</p>\n</li>\n<li>\n<p>CREATE INDEX - 创建索引（搜索键）</p>\n</li>\n<li>\n<p>DROP INDEX - 删除索引</p>\n</li>\n</ul>\n<p><strong>SQL 对大小写不敏感；</strong></p>\n<h4 id=\"创建表\"><a class=\"markdownIt-Anchor\" href=\"#创建表\">#</a> 创建表</h4>\n<p><strong>语法</strong>：create table 数据表名字 (字段 类型 约束 [, 字段 类型 约束]);</p>\n<p>例如：create table student (id int,name varchar (20),add varchar (20),phone varchar (20));</p>\n<p><strong>约束</strong>：</p>\n<p>auto_increment\t表示自动增长\t\t// 表示数值会随着数据的插入数值会相应的自动的增加</p>\n<p>not null \t\t\t表示不能为空</p>\n<p>primary key \t\t表示主键</p>\n<p>foreign key\t       标识该属性为该表的外键，是与之联系某表的主键</p>\n<p>default \t\t\t默认值</p>\n<p>unique        标识该属性的值是唯一的</p>\n<h4 id=\"举例针对表常用命令\"><a class=\"markdownIt-Anchor\" href=\"#举例针对表常用命令\">#</a> 举例 (针对表常用命令)</h4>\n<p>在 class 数据库下创建 student 表 (id、name、age、sex、birthday)</p>\n<p>create table student(id int,name varchar(20),age int,sex varchar(20),birthday int);</p>\n<p>查看表结构</p>\n<p>desc student;</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/1794ff3dcaf4a34d.png\" alt=\"\"></p>\n<p>各字段的含义解释</p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>Null：表示该列是否可以存储 NULL 值（表示该列是否可以为空）。</li>\n<li>Key：表示该列是否已编制索引。PRI 表示该列是表主键的一部分，UNI 表示该列是 UNIQUE 索引的一部分，MUL 表示在列中某个给定值允许出现多次。</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<p>Default：表示该列是否有默认值，如果有，值是多少。</p>\n</li>\n<li>\n<p>Extra：表示可以获取的与给定列有关的附加信息，如 AUTO_INCREMENT （自增）等。</p>\n<p>查看创建表时的 CREATE TABLE 语句</p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>\n<p>SHOW CREATE TABLE 表名 \\G；   如果不加 \\G 参数显示会混乱，加了显示结果易于查看，比较直观。</p>\n<p>该语句的意思是：显示出创建表的 sql 语句。在不适用 “\\G” 是现实出的代码有些凌乱。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/6fe034e7c07f8f03.png\" alt=\"\"></p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/672b3469f7aafbf6.png\" alt=\"\"></p>\n</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>删除表</p>\n<p>drop table student;</p>\n<p>修改表名</p>\n<p>ALTER TABLE 旧表名 RENAME 新表名；</p>\n<h4 id=\"举例针对字段常用命令\"><a class=\"markdownIt-Anchor\" href=\"#举例针对字段常用命令\">#</a> 举例 (针对字段常用命令)</h4>\n<p>修改字段名</p>\n<p>ALTER TABLE 表名 CHANGE 旧字段名 新字段名 新数据类型；</p>\n<p>添加字段</p>\n<p>ALTER TABLE &lt;表名&gt; ADD &lt; 新字段名 &gt; &lt; 数据类型 &gt; [约束条件] [FIRST|AFTER 已存在的字段名]；</p>\n<p>ALTER TABLE admin ADD user_name varchar(20) DEFAULT NULL age int(10) DEFAULT NULL;</p>\n<p>新字段名为需要添加的字段的名称；</p>\n<p>FIRST 为可选参数，其作用是将新添加的字段设置为表的第一个字段；</p>\n<p>AFTER 为可选参数，其作用是将新添加的字段添加到指定的已存在的字段名的后面；</p>\n<p>DEFAULT NULL 默认为 NULL。</p>\n<p>删除字段</p>\n<p>ALTER TABLE 表名 DROP 字段名；</p>\n<h3 id=\"16mysql常见的数据类型\"><a class=\"markdownIt-Anchor\" href=\"#16mysql常见的数据类型\">#</a> 1.6：Mysql 常见的数据类型</h3>\n<h4 id=\"数值类型\"><a class=\"markdownIt-Anchor\" href=\"#数值类型\">#</a> 数值类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934729617-62cc7f2f-4fa9-417a-9e0d-286841d9db06.png\" alt=\"img\"></p>\n<h4 id=\"日期和时间类型\"><a class=\"markdownIt-Anchor\" href=\"#日期和时间类型\">#</a> 日期和时间类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934749713-cf3fa5ec-36f6-4b34-a011-2760b12394c9.png\" alt=\"img\"></p>\n<h4 id=\"字符串类型\"><a class=\"markdownIt-Anchor\" href=\"#字符串类型\">#</a> 字符串类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934764195-2399cd03-1085-434a-b7fc-e3f61a45bc75.png\" alt=\"img\"></p>\n<h4 id=\"mysql整数类型\"><a class=\"markdownIt-Anchor\" href=\"#mysql整数类型\">#</a> MYSQL 整数类型</h4>\n<p>MySQL 主要提供的整数类型有 TINYINT、SMALLINT、MEDIUMINT、INT、BIGINT，其属性字段可以添加 AUTO_INCREMENT 自增约束条件。下表中列出了 MySQL 中的数值类型：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934816867-6ab3d30b-caa2-44e5-a8ca-49c8670ee68e.png\" alt=\"img\"></p>\n<h4 id=\"mysql小数类型\"><a class=\"markdownIt-Anchor\" href=\"#mysql小数类型\">#</a> MYSQL 小数类型</h4>\n<p>浮点类型有两种，分别是单精度浮点数（FLOAT）和双精度浮点数（DOUBLE）：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934874530-d7e8735c-4e13-4881-8525-d2a0fdc21a6b.png\" alt=\"img\"></p>\n<h4 id=\"mysql字符串类型\"><a class=\"markdownIt-Anchor\" href=\"#mysql字符串类型\">#</a> MYSQL 字符串类型</h4>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624934920255-a77063dc-41f8-436c-9786-69ec4238dcf9.png\" alt=\"img\"></p>\n<p>VARCHAR 和 TEXT 类型是变长类型，其存储需求取决于列值的实际长度（在前面的表格中用 L 表示），而不是取决于类型的最大可能尺寸。</p>\n<p>例如，一个 VARCHAR (10) 列能保存一个最大长度为 10 个字符的字符串，实际的存储需要字符串的长度 L 加上一个字节以记录字符串的长度。对于字符 “abcd”，L 是 4，而存储要求 5 个字节。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624935054825-2e99e3c2-c4a7-4934-bef6-ec59345fb975.png\" alt=\"img\"></p>\n<p>对比结果可以看到，CHAR (4) 定义了固定长度为 4 的列，无论存入的数据长度为多少，所占用的空间均为 4 个字节。VARCHAR (4) 定义的列所占的字节数为实际长度加 1。</p>\n<h3 id=\"17mysql主键\"><a class=\"markdownIt-Anchor\" href=\"#17mysql主键\">#</a> 1.7：Mysql 主键</h3>\n<h4 id=\"mysql主键primary-key\"><a class=\"markdownIt-Anchor\" href=\"#mysql主键primary-key\">#</a> MySQL 主键（PRIMARY KEY）</h4>\n<p>&quot;主键（PRIMARY KEY）“的完整称呼是&quot; 主键约束”。</p>\n<h4 id=\"选取设置主键约束的字段\"><a class=\"markdownIt-Anchor\" href=\"#选取设置主键约束的字段\">#</a> 选取设置主键约束的字段</h4>\n<ul>\n<li>\n<ul>\n<li>主键约束即在表中定义一个主键来唯一确定表中每一个记录数据的标识符。主键可以是表中的某一列或者多列的组合，其中由多列组合的主键称为复合主键。主键应该遵守下面的规则：每个表只能定义一个主键。</li>\n<li>主键值必须唯一标识表中的每一行，且不能为 NULL，即表中不可能存在两行数据有相同的主键值。这是唯一性原则。</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>一个列名只能在复合主键列表中出现一次。</li>\n<li>复合主键不能包含不必要的多余列。当把复合主键的某一列删除后，如果剩下的列构成的主键仍然满足唯一性原则，那么这个复合主键是不正确的。这是最小化原则。</li>\n</ul>\n</li>\n</ul>\n<h4 id=\"在创建表时设置主键约束\"><a class=\"markdownIt-Anchor\" href=\"#在创建表时设置主键约束\">#</a> 在创建表时设置主键约束</h4>\n<ul>\n<li>\n<ul>\n<li>在 CREATE TABLE 语句中，主键是通过 PRIMARY KEY 关键字来指定的。</li>\n<li>在定义列的同时指定主键，语法规则如下：</li>\n</ul>\n</li>\n</ul>\n<p>字段名 数据类型 PRIMARY KEY；</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955289317-bb0970b1-e2b8-4571-8b61-1c8940726e06.png\" alt=\"img\"></p>\n<h4 id=\"在创建表时设置复合主键\"><a class=\"markdownIt-Anchor\" href=\"#在创建表时设置复合主键\">#</a> 在创建表时设置复合主键</h4>\n<ul>\n<li>\n<ul>\n<li>主键由多个字段联合组成，语法规则如下：</li>\n</ul>\n</li>\n</ul>\n<p>PRIMARY KEY [字段 1，字段 2，…, 字段 n]；</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955343429-d65002a0-3f2d-4a16-a6d2-6af1919e59d8.png\" alt=\"img\"></p>\n<h4 id=\"在修改表时添加主键约束\"><a class=\"markdownIt-Anchor\" href=\"#在修改表时添加主键约束\">#</a> 在修改表时添加主键约束</h4>\n<ul>\n<li>\n<ul>\n<li>在修改数据表时添加主键约束的语法规则为：</li>\n</ul>\n</li>\n</ul>\n<p>ALTER TABLE 表名 ADD PRIMARY KEY (字段名);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955444811-bff6a946-740e-4f41-b988-35d98f271057.png\" alt=\"img\"></p>\n<h4 id=\"mysql唯一约束unique-key\"><a class=\"markdownIt-Anchor\" href=\"#mysql唯一约束unique-key\">#</a> MySQL 唯一约束（UNIQUE KEY）</h4>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2MuYmlhbmNoZW5nLm5ldC9teXNxbC8=\">MySQL</span> 唯一约束（Unique Key）要求该列唯一，允许为空，但只能出现一个空值。唯一约束可以确保一列或者几列不出现重复值。</p>\n<p>在定义完列之后直接使用 UNIQUE 关键字指定唯一约束，语法规则如下：</p>\n<p>&lt;字段名&gt; &lt; 数据类型 &gt; UNIQUE</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624955931440-b55e2898-adbe-4922-876e-645a52224714.png\" alt=\"img\"></p>\n<h4 id=\"mysql查看表中的约束\"><a class=\"markdownIt-Anchor\" href=\"#mysql查看表中的约束\">#</a> MySQL 查看表中的约束</h4>\n<p>查看数据表中的约束语法格式如下：</p>\n<p>SHOW CREATE TABLE &lt;数据表名&gt;;</p>\n<h2 id=\"2sql之增删改查\"><a class=\"markdownIt-Anchor\" href=\"#2sql之增删改查\">#</a> 2：SQL 之增删改查</h2>\n<h3 id=\"21添加数据\"><a class=\"markdownIt-Anchor\" href=\"#21添加数据\">#</a> 2.1：添加数据</h3>\n<h4 id=\"1为表中所有字段添加数据\"><a class=\"markdownIt-Anchor\" href=\"#1为表中所有字段添加数据\">#</a> ①：为表中所有字段添加数据</h4>\n<p>i：INSERT 语句中指定所有字段名</p>\n<p><strong>语法：INSERT INTO 表名 (字段名 1，字段名 2，…) VALUES (值 1，值 2，…);</strong></p>\n<p>例题：向 student 表中插入（id 为 1，姓名：xiaoqiao，年龄：18，性别：woman，生日：2002）数据。</p>\n<p>insert into student(id,name,age,sex,birthday) values(1,“xiaoqiao”,18,“woman”,“2002”);</p>\n<p>ii：INSERT 语句中不指定字段名</p>\n<p>语法：INSERT INTO 表名 VALUES (值 11，值 2，…);</p>\n<p>例题：向 student 表中插入（id 为 2，姓名：daqiao，年龄：20，性别：woman，生日：2004）数据。</p>\n<p>insert into student values(2,“daqiao”,20,“woman”,“2000”);</p>\n<p><strong>此用法添加的数据数量、数据类型必须要与表中的字段保持一致</strong></p>\n<h4 id=\"2为表的指定字段添加数据\"><a class=\"markdownIt-Anchor\" href=\"#2为表的指定字段添加数据\">#</a> ②：为表的指定字段添加数据</h4>\n<p>i：为指定字段添加数据，即只向部分字段添加值，而其它字段的值为表定义时的默认值。</p>\n<p><strong>语法：INSERT INTO 表名（字段 1，字段 2，…）VALUES (值 1，值 2，…);</strong></p>\n<p>例题：向 student 表中插入（id 为 3，姓名：zhouyu，年龄：18，）数据。</p>\n<p>insert into student(id,name,age) values(3,“xaoqiao”,18);</p>\n<h4 id=\"3同时添加多条数据\"><a class=\"markdownIt-Anchor\" href=\"#3同时添加多条数据\">#</a> ③：同时添加多条数据</h4>\n<p><strong>语法：INSERT INTO 表名 (字段名 1，字段名 2，…) VALUES （值 1，值 2，…),(值 1，值 2);</strong></p>\n<p>例题：向 student 表中插入（id 为 4，姓名：sunce，年龄：20，性别：man，生日：2004）和（id 为 5，姓名：caocao，年龄：20，性别：man，生日：2004）数据</p>\n<p>insert into student values(4,“sunce”,20,“man”,“2000”),(5,“caocao”,20,“man”,“2000”);</p>\n<h3 id=\"22删除数据\"><a class=\"markdownIt-Anchor\" href=\"#22删除数据\">#</a> 2.2：删除数据</h3>\n<h4 id=\"1删除部分数据\"><a class=\"markdownIt-Anchor\" href=\"#1删除部分数据\">#</a> ①：删除部分数据</h4>\n<p>i：即删除指定的部分数据，需要使用 WHERE 子句来指定删除记录的条件。（符合 where 的记录将会被删除）</p>\n<p><strong>语法：DELETE FROM 表名 WHERE 条件表达式；</strong></p>\n<p>例题：向 student 表中删除 id 为 1 的数据。</p>\n<p>delete from student where id=1;</p>\n<h4 id=\"2删除全部数据\"><a class=\"markdownIt-Anchor\" href=\"#2删除全部数据\">#</a> ②：删除全部数据</h4>\n<p>i：若 DELETE 语句中没有使用 WHERE 语句，则会将表中所有记录都删除。</p>\n<p><strong>语法：DELETE FROM 表名；</strong></p>\n<p>例题：向 student 表中删除所有的数据。</p>\n<p>delete from student ;</p>\n<h3 id=\"23修改数据\"><a class=\"markdownIt-Anchor\" href=\"#23修改数据\">#</a> 2.3：修改数据</h3>\n<h4 id=\"1update-更新部分数据\"><a class=\"markdownIt-Anchor\" href=\"#1update-更新部分数据\">#</a> ①：UPDATE 更新部分数据</h4>\n<p>i：指更新指定表中的指定记录，使用 WHERE 子句来指定。</p>\n<p><strong>语法：UPDATE 表名 SET 字段名 1 = 值 1，[，字段名 2 = 值 2，…] [ WHERE 条件表达式 ]；</strong></p>\n<p>例题：向 student 表中 id 为 1 的数据中字段 age 改为 16，字段 birthday 改为 2004。</p>\n<p>update student set age=16,birthday=2004 where id=1;</p>\n<h4 id=\"2update-更新全部数据\"><a class=\"markdownIt-Anchor\" href=\"#2update-更新全部数据\">#</a> ②：UPDATE 更新全部数据</h4>\n<p>i：若 UPDATE 语句中没有使用 WHERE 语句，则会将表中所有记录都删除。</p>\n<p><strong>语法：UPDATE FROM 表名；</strong></p>\n<p>例题：向 student 表中将 age 字段都该为 17。</p>\n<p>update student set age=17;（表中所有的数据中的 age 字段的值都将改变为 17）</p>\n<h3 id=\"24查询数据\"><a class=\"markdownIt-Anchor\" href=\"#24查询数据\">#</a> 2.4：查询数据</h3>\n<h4 id=\"1简单查询\"><a class=\"markdownIt-Anchor\" href=\"#1简单查询\">#</a> ①：简单查询</h4>\n<p>i：查询所有字段</p>\n<p><strong>语法：SELECT 字段名 1，字段名 2，…FROM 表名；</strong></p>\n<p>例题：查询 student 表中所有数据。</p>\n<p>SELECT id,name,age ,sex,birthday  FROM student;</p>\n<p>select * from student;（“*” 为通配符，查询所有满足条件的 jilu）</p>\n<p>ii：查询指定的部分字段</p>\n<p>语法：SELECT 字段名 1，字段名 2，… FROM 表名；</p>\n<p>例题：查询 student 表中所有的 name 字段和 sex 字段。</p>\n<p>SELECT name,sex FROM student;</p>\n<p>注意：字段顺序可以更改，则显示的结果也会作出对应的调整。</p>\n<p>（可以指定 where 来筛选指定条件的记录）</p>\n<h4 id=\"2按条件查询\"><a class=\"markdownIt-Anchor\" href=\"#2按条件查询\">#</a> ②：按条件查询</h4>\n<ol>\n<li>\n<ol>\n<li>带关系运算符的查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 1，字段名 2，…FROM 表名 WHERE 条件表达式；</p>\n<p>例题：查询 student 表中 id 为 4 的人的 id 和 name 字段。</p>\n<p>SELECT id,name FROM student  WHERE id=4;</p>\n<ol>\n<li>\n<ol start=\"2\">\n<li>带 IN 关键字的查询（在… 里面）</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * 字段名 1, 字段名 2,…FROM 表名 WHERE 字段名 [NOT]  IN （元素 1，元素 2，…）；</p>\n<p><strong>解释：IN 关键字用于判断某个字段的值是否在指定集合中，若在，则该字段所在的记录将会被查询出来</strong></p>\n<p>例题：查询 student 表中 id 值为 1,2,3 的记录。</p>\n<p>SELECT * FROM student WHERE  id IN (1,2,3);</p>\n<ol>\n<li>\n<ol start=\"3\">\n<li>带 BETWEEN AND  关键字的查询 (在… 之间)</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT *  {字段名 1, 字段名 2,… FROM  表名 WHERE 字段名 [ NOT] BETWEEN  值 1  AND  值 2；</p>\n<p><strong>解释：BETWEEN AND 用于判断某个字段的值是否在指定范围之内，若在，则该字段所在的记录会被  查询出来，反之不会。</strong></p>\n<p>例题：查询 student 表中 id 值在 2~5 之间的人的 id 和 name。</p>\n<p>SELECT id,name FROM student WHERE id BETWEEN 2 AND 5;</p>\n<ol>\n<li>\n<ol start=\"4\">\n<li>空值查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT *  字段名 1，字段名 2，…FROM 表名 WHERE 字段名 IS [NOT] NULL</p>\n<p><strong>解释：在数据表中有些值可能为空值（NULL），空值不同于 0，也不同于空字符串，需要使用 IS NULL 来判断字段的值是否为空值。</strong></p>\n<p>例题：查询 student 表中 sex 值为空值的记录。</p>\n<p>SELECT * FROM student WHERE sex IS NULL;</p>\n<p><strong>注意：IS NOT NULL 关键字用来查询字段不为空值的记录。</strong></p>\n<ol>\n<li>\n<ol start=\"5\">\n<li>带 DISTINCT 关键字的查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT DISTINCT 字段名 FROM 表名；</p>\n<p>解释：很多表中某些字段的数据存在重复的值，可以使用 DISTINCT 关键字来过滤重复的值，只保留一个值。</p>\n<p>例题：查询 student 表中 birthday 字段的值，结果中不允许出行重复的值。</p>\n<p>SELECT DISTINCT birthday FROM student;</p>\n<ol>\n<li>\n<ol start=\"6\">\n<li>带 LIKE 关键字的查询</li>\n</ol>\n</li>\n<li>\n<ol>\n<li>\n<ol>\n<li>百分号（%）通配符 **(% 在这里表示任意的意思，它可以匹配任意长度且满足条件的字符串)**</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT *  | 字段名 1，字段名 2，…FROM 表名 WHERE 字段名 [NOT] LIKE ‘匹配字符串’;</p>\n<p>解释：匹配任意长度的字符串，包括空字符串。例如，字符串 “c%” 匹配以字符 C 开始，任意长度的字符串，如 “ ct  ”，“ cut ”，“ current ” 等；字符串 “ c% g ” 表示以字符 c 开始，以 g 结尾的字符串；字符串 “ % y% ” 表示包含字符 “ y ” 的字符串，无论 “ y ” 在字符串的什么位置。</p>\n<p>例题：查询 student 表中 name 字段以字符 “s” 开头的人的 id,name。</p>\n<p>SELECT id,name FROM student  WHERE name LIKE “s%”;</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol start=\"2\">\n<li>下划线（_）通配符（只能匹配指定个数的字符串，一个 &quot;-&quot; 表示一个字符）</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名 WHERE 字段名 [NOT] LIKE ‘匹配字符串’;</p>\n<p>解释：下划线通配符只匹配单个字符，若要匹配多个字符，需要使用多个下划线通配符。例如，字符串 “cu_” 匹配以字符串 “ cu ” 开始，长度为 3 的字符，如 “ cut ”，“ cup ”；字符串 “ c_ <em>l” 匹配在 “c” 和 “ l ” 之间包含两个字符的字符串，如 “ cool ”。需要注意的是，在连续使用 “-” 之间不能有空格，例如 “M</em> _QL” 只能匹配 “MySQL”，不能匹配 “My SQL”。</p>\n<p>例题：查询 student 表中 name 字段值以 “xia” 开始，以 “ qiao ” 结束，并且中间只有一个字符的记录。</p>\n<p>SELECT * FROM student WHERE name LIKE ‘xia_qiao’;</p>\n<p>注意：若要查询的字段值本来就含有 “%” 或者 “ _ ”, 则要用 “ \\ ” 进行转义，如要<strong>查询本身含有 “%” 的字符串，命令应改为 “ %%%”。</strong></p>\n<ol>\n<li>\n<ol start=\"3\">\n<li>带 AND 关键字的多条件查询（表示交集的关系，&amp; 运算）</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名；</p>\n<p><strong>解释：在使用 SELECT 语句查询数据时，为了增加查询的准确性，可以使用 AND 关键字可以连接两个或多个查询条件。</strong></p>\n<p>例题：查询 student 表中 id 字段小于 5，并且 sex 字段值为 “woman” 的人的 id 和 name</p>\n<p>SELECT id,name FROM student WHERE id&lt;5 AND sex=‘woman’;</p>\n<ol>\n<li>\n<ol start=\"4\">\n<li>带 OR 关键字的多条件查询（表示并集的关系，|| 运算）</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名 WHERE 条件表达式 1 OR 条件表达式 2 [… OR 条件表达式 n];</p>\n<p>解释：与 AND 关键字不同，OR 关键字只要满足任意一个条件就会被查询出来。</p>\n<p>例题：查询 student 表中 id 字段小于 5，或者 sex 字段值为 “woman” 的人的 id 和 name</p>\n<p>SELECT id,name FROM student WHERE id&lt;5 OR sex=‘woman’;</p>\n<ol>\n<li>\n<ol>\n<li>OR 和 AND 一起使用的情况</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * | 字段名 1，字段名 2，…FROM 表名；</p>\n<p>解释：<strong>OR 和 AND 一起使用的时候，AND 的优先级高于 OR，因此二者一起使用时，会先运算 AND 两边的表达式，再运算 OR 两边的表达式。</strong></p>\n<p>例题：查询 student 表中 sex 值为 “woman” 或者 sex 值为 “man” 并且 age 字段值为 16 的人的记录</p>\n<p>SELECT * FROM student WHERE sex=‘woman’ OR sex=‘man’  AND age=16;</p>\n<h4 id=\"3聚合函数\"><a class=\"markdownIt-Anchor\" href=\"#3聚合函数\">#</a> ③：聚合函数</h4>\n<h4 id=\"img\"><a class=\"markdownIt-Anchor\" href=\"#img\">#</a> <img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623394440546-a0aaffed-cd97-4d61-ad82-9d76a4ddb747.png\" alt=\"img\"></h4>\n<ol>\n<li>\n<ol>\n<li>COUNT () 函数：统计所查询的满足条件的记录的总数</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT COUNT (*) FROM 表名；</p>\n<p>例题：查询 student 表中一共有多少条记录。</p>\n<p>SELECT COUNT(*) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>SUM () 函数：求出表中某个字段所有值的总和</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT  SUM (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中 age 字段的总和</p>\n<p>SELECT SUM(age) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>AVG () 函数：求出表中某个字段所有值的平均值</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT AVG (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中表中 age 字段的平均值。</p>\n<p>SELECT AVG(age) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>MAX () 函数：求出表中某个字段所有值的最大值</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT MAX (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中 age 字段的最大值</p>\n<p>SELECT MAX(age) FROM student;</p>\n<ol>\n<li>\n<ol>\n<li>MIN () 函数：求出表中某个字段所有值的最小值</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT MIN (字段名) FROM 表名；</p>\n<p>例题：查询 student 表中 grade 字段的最小值</p>\n<p>SELECT MIN(age) FROM student;</p>\n<h4 id=\"4对查询结果进行排序\"><a class=\"markdownIt-Anchor\" href=\"#4对查询结果进行排序\">#</a> ④：对查询结果进行排序</h4>\n<ol>\n<li>\n<ol>\n<li>带 ORDER BY 关键字的排序</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 1，字段名 2，…FROM 表名 ORDER BY 字段名 1 [ASC | DESC], 字段名 2 [ ASC | DESC ]…;</p>\n<p>解释：在该语法中指定的字段名是对查询结果进行排序的依据 **，ASC 表示升序排列，DESC 表示降序排列，默认情况是升序排列 **。</p>\n<p>例题：查询 student 表中的所有记录，并按照 age 字段进行升序排序</p>\n<p>SELECT * FROM student ORDER BY age;</p>\n<ol>\n<li>\n<ol>\n<li>带 GROUP BY 关键字的分组查询</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT  字段名 1，字段名 2，…FROM 表名 GROUP BY 字段名 1，字段名 2，… [HAVING 条件表达式];</p>\n<p>解释：在对表中数据进行统计的时候，可以使用 GROUP BY 按某个字段或者多个字段进行分组，<strong>字段中值相同的为一组</strong>，如男生分为一组，女生分为一组。</p>\n<p><strong>注意点使用 * 无法查询解决方法：</strong></p>\n<p><strong>1. 关闭 ONLY_FULL_GROUP_BY</strong></p>\n<p>** 查询：**SELECT @@sql_mode;</p>\n<p>** 关闭：**SET SESSION sql_mode=(SELECT REPLACE (@@sql_mode,‘ONLY_FULL_GROUP_BY,’,’’));</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol>\n<li>单独使用 GROUP BY 进行分组</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>解释：单独使用 GROUP BY 关键字，查询的是每个分组中的一条记录。</p>\n<p>例题：查询 student 表中的数据，按照 sex 字段进行分组</p>\n<p>SELECT * FROM student GROUP BY sex;</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol start=\"2\">\n<li>GROUP BY 和聚合函数一起使用</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>解释：GROUP BY 和聚合函数一起使用，可以统计出某个或者某些字段在一个分组中的最大值、最小值、平均值等。</p>\n<p>例题：查询 student 表中按照 age 字段进行分组查询，计算出每组共有多少个人。</p>\n<p>SELECT COUNT(*) ,age FROM student GROUP BY age;</p>\n<ol>\n<li>\n<ol>\n<li>\n<ol start=\"3\">\n<li>GROUP BY 和 HAVING 关键字一起使用</li>\n</ol>\n</li>\n</ol>\n</li>\n</ol>\n<p>解释：关键 HAVING 字和 WHERE 关键字的作用相同，区别在于 HAVING 关键字可以跟聚合函数，而 WHERE 关键字不能。通常 HAVING 关键字都和 GROUP BY 一起使用，用于对分组后的结果进行过滤。</p>\n<p>例题：查询 student 表中按照 sex 字段进行分组查询，查询出 age 字段值之和小于 300 的分组</p>\n<p>SELECT sum(age),sex FROM student GROUP BY sex HAVING SUM(age) &lt; 300;</p>\n<ol>\n<li>\n<ol start=\"4\">\n<li>使用 LIMIT 限制查询结果的数量</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 2，字段名 2，…FROM 表名 LIMIT 记录数 [OFFSET] 记录数   LIMIT Y OFFSET X 向后偏移 x 位。</p>\n<p>解释：在此语法中，LIMIT 后面可以跟两个参数，第一个参数 “OFFSET” 表示偏移量，如果偏移量为 0，则从查询结果的第一条记录开始，偏移量为 1 则从查询结果中的第二条记录开始，以此类推。OFFSET 为可选值，默认值为 0，第二个参数 “记录数” 表示指定返回查询记录的条数。</p>\n<p>例题：查询 tudent 表中的前四条记录</p>\n<p>SELECT * FROM student LIMIT 4;</p>\n<p>例题：查询 student 表中从 0 开始查询 4 条记录</p>\n<p>SELECT * FROM student LIMIT 0,4;</p>\n<h4 id=\"5为表和字段取别名\"><a class=\"markdownIt-Anchor\" href=\"#5为表和字段取别名\">#</a> ⑤：为表和字段取别名</h4>\n<ol>\n<li>\n<ol>\n<li>为表取别名</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT * FROM 表名 [AS] 别名；</p>\n<p>解释：在进行查询操作时，如果表名很长使用起来不方便，可以为表取一个别名来代替表的名称。</p>\n<p>例题：为 student 表起一个别名 s，并查询 student 表中 sex 字段值为 “woman” 的记录</p>\n<p>SELECT * FROM student AS s WHERE s.sex=‘woman’;</p>\n<ol>\n<li>\n<ol>\n<li>为字段取别名</li>\n</ol>\n</li>\n</ol>\n<p>语法：SELECT 字段名 [AS] 别名 [ , 字段名 [AS] 别名，…]  FROM 表名 ；</p>\n<p>例题：查询 student 表中的所有记录的 name 和 sex 字段值，并为这两个字段起别名 stu_name 和 stu_sex</p>\n<p>SELECT name AS stu_name,sex AS stu_gender FROM student;</p>\n<h4 id=\"6子查询\"><a class=\"markdownIt-Anchor\" href=\"#6子查询\">#</a> ⑥：子查询</h4>\n<p>select name from student where id &lt; (select age from student where name=‘sunce’);</p>\n<h4 id=\"7联合查询union\"><a class=\"markdownIt-Anchor\" href=\"#7联合查询union\">#</a> ⑦：联合查询 (union)</h4>\n<p>联合查询 union 两边的查询语句所返回的结构必须相同</p>\n<p>select version() union select user();</p>\n<h4 id=\"8利用内置表查询\"><a class=\"markdownIt-Anchor\" href=\"#8利用内置表查询\">#</a> ⑧：利用内置表查询</h4>\n<p>查询数据库：select schema_name from information_schema.schemata;</p>\n<p>查询表名：select table_name from information_schema.tables;</p>\n<p>查询列名：select column_name from information_schema.columns;</p>\n<h2 id=\"3mysql内置库\"><a class=\"markdownIt-Anchor\" href=\"#3mysql内置库\">#</a> 3：MySQL 内置库</h2>\n<p>在 MySQL&gt;5.0 的版本中，把 information_schema 看作是一个自带的内置数据库，确切说是信息数据库。它保存着关于 MySQL 服务器所维护的所有其他数据库的信息。如数据库名，数据库的表，表栏的数据类型与访问权限等。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967706011-2b5e90b5-ea52-4107-97a0-d99cb6039107.png\" alt=\"img\"></p>\n<p>这里我们重点学习下 schemata、tables、columns 以及相关的字段名。</p>\n<p>schemata 表：这里重点关注 schema_name 这个字段，它存放着所有数据库库名，在 SQL 注入中我们可以使用它来进行来查询所有数据库，然后进行高权限的跨库查询。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967811455-d3098f47-9ed7-4a22-9401-701bf34b31b4.png\" alt=\"img\"></p>\n<p>tables 表：tables 表用来存储所有数据库里的表名等信息，其中 table_schema 列用来存放所有数据库的库名，table_name 用来存放 MySQL 数据库中的所有表名。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967881665-67dbdee8-bac7-4300-91d8-944fab32f5ef.png\" alt=\"img\"></p>\n<p>columns 表：columns 表用来存放数据库里的所有字段信息，其中 table_schema 列用来存放数据库库名，table_name 列用来存放所有数据库里的所有表名，column_name 列用来存放所有的字段 / 内容 (值)。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624967944575-c3a0814a-eef7-4f50-a9ad-20eb70b335f7.png\" alt=\"img\"></p>\n<h2 id=\"4sql中tips\"><a class=\"markdownIt-Anchor\" href=\"#4sql中tips\">#</a> 4：SQL 中 tips</h2>\n<h3 id=\"41符号运用\"><a class=\"markdownIt-Anchor\" href=\"#41符号运用\">#</a> 4.1：符号运用</h3>\n<p>=  \t\t\t\t      数据库的赋值符号</p>\n<p>or/||                逻辑或 左右两边有一条成立 那么返回 true 否则 false</p>\n<p>xor  \t\t          逻辑异或。 如果任一操作数为 NULL，则返回 NULL。 对于非 NULL 操作数，如果奇数个操作数非零，则求值为 1，否则返回 0。<strong>（相同为 0，不同为 1，n 个非零元素异或，当 n=even 是，结果为 0，否则为 1。任意与 0 异或结果为 0）</strong></p>\n<p>&amp;&amp;/And  \t\t   逻辑与，并且的意思  左右两边的条件必须同时成立则返回 true 否则返回 false</p>\n<p>NOT/！ \t\t\t逻辑非（取反）</p>\n<p>+、-、*、/  \t  运算符 加减乘除</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929024527-b541b18d-8b6e-43f9-82ab-831a9e5c9923.png\" alt=\"img\"></p>\n<h3 id=\"42常用注释符\"><a class=\"markdownIt-Anchor\" href=\"#42常用注释符\">#</a> 4.2：常用注释符</h3>\n<p><strong>在 MySQL 中，常见的注释符有以下几种：</strong></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>#</li>\n<li>–空格</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>/**/</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>内联注释符及特性：</strong></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>/*！code */</li>\n<li>内联注释符是一种基于注块注释衍生出来的注释风格，它可以用于整个 SQL 语句中，用来执行 SQL 语句，内联注释有个特殊点，和 MySQL 版本息息相关，也就是 **：** 当内联注释中出现小于或等于当前版本号的时候，内联注释符里的子句会被执行，大于时则不会被执行，注意版本的写法，例如，5.5.34，在内联注释中需要写为 50534，版本号第二位加 0，然后注意版本号和内联注释中间不能有空格。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><strong>常见的空格符号：</strong></p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>两个空格代替一个空格，用 Tab 代替空格，% a0 = 空格</li>\n<li>%20 (空格)  %09 (tab)  %0a (回车符)  %0b  %0c  %0d  % a0 (空格)  %00  /**/   /<em>!</em>/</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"43内联注释\"><a class=\"markdownIt-Anchor\" href=\"#43内联注释\">#</a> 4.3：内联注释</h3>\n<p>select user()/<em>version()</em>/;</p>\n<h3 id=\"44常见空格表示符号\"><a class=\"markdownIt-Anchor\" href=\"#44常见空格表示符号\">#</a> 4.4：常见空格表示符号</h3>\n<p>两个空格代替一个空格，用 Tab 代替空格，%0a = 空格</p>\n<p>%20 %09 %0a %0b %0c %0d %a0 %00 /**/  /<em>!</em>/</p>\n<h2 id=\"5注入中常见的sql函数\"><a class=\"markdownIt-Anchor\" href=\"#5注入中常见的sql函数\">#</a> 5：注入中常见的 sql 函数</h2>\n<h4 id=\"51rand函数-生成一个0~1之间的随机数\"><a class=\"markdownIt-Anchor\" href=\"#51rand函数-生成一个0~1之间的随机数\">#</a> 5.1：rand () 函数   // 生成一个 0~1 之间的随机数</h4>\n<p>语句：select rand ();</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929148650-eccd1dda-ba29-4049-b816-168c0f64fa09.png\" alt=\"img\"></p>\n<h4 id=\"52floor函数-向下取整\"><a class=\"markdownIt-Anchor\" href=\"#52floor函数-向下取整\">#</a> 5.2：floor () 函数  // 向下取整</h4>\n<p>语句：select floor (rand ()*2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929209234-04ac7c50-08e5-4c88-a27e-8ff3c14ef347.png\" alt=\"img\"></p>\n<h4 id=\"53concat函数-将符合条件的同一列中的不同行数据进行拼接选择好数据库\"><a class=\"markdownIt-Anchor\" href=\"#53concat函数-将符合条件的同一列中的不同行数据进行拼接选择好数据库\">#</a> 5.3：concat () 函数  // 将符合条件的同一列中的不同行数据进行拼接，选择好数据库</h4>\n<p>语句：concat (0x3a,database (),0x3a)；0x3a 为：号（将第一个参数所对应的符号加在数据库名的前面，将第三个参数所对应的符号加在数据库名的后面，1 与 3 的参数可以不同）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929359753-7f7979eb-dba0-48a3-8981-e84695b086fb.png\" alt=\"img\"></p>\n<h4 id=\"54concat_ws函数-第一个参数是其它参数的分隔符-分隔符的位置在连接的两个字符串之间\"><a class=\"markdownIt-Anchor\" href=\"#54concat_ws函数-第一个参数是其它参数的分隔符-分隔符的位置在连接的两个字符串之间\">#</a> 5.4：concat_ws () 函数 // 第一个参数是其它参数的分隔符。分隔符的位置在连接的两个字符串之间。</h4>\n<p>语句：select concat_ws (’!’,database (),‘haha’);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929389387-5572ea2e-3a07-4d95-b94e-fde752a8cb0b.png\" alt=\"img\"></p>\n<h4 id=\"55group_concat\"><a class=\"markdownIt-Anchor\" href=\"#55group_concat\">#</a> 5.5：group_concat</h4>\n<p>语句：select group_concat (username,’~’,password) from dh_admin_user;（将从表中所查询的两个数据之间用 “~” 连接）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624931767147-af72cb2c-ed63-4ec2-a0ea-1256df921083.png\" alt=\"img\"></p>\n<h4 id=\"56extractvalue函数-对xml文档进行查询的函数-语法extractvalue目标xml文档xml路径\"><a class=\"markdownIt-Anchor\" href=\"#56extractvalue函数-对xml文档进行查询的函数-语法extractvalue目标xml文档xml路径\">#</a> 5.6：extractvalue () 函数  // 对 xml 文档进行查询的函数  语法：extractvalue (目标 xml 文档，xml 路径).</h4>\n<p>语句：select extractvalue (‘anything’,concat (’~’,(select user ())));</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929938865-59d56ded-02a0-4bb3-8837-1474b8fc16d2.png\" alt=\"img\"></p>\n<h4 id=\"57sleep函数-对数据库进行延时的函数-语法后面直接跟需要延时的时间即可默认单位为s\"><a class=\"markdownIt-Anchor\" href=\"#57sleep函数-对数据库进行延时的函数-语法后面直接跟需要延时的时间即可默认单位为s\">#</a> 5.7：sleep () 函数  // 对数据库进行延时的函数  语法：后面直接跟需要延时的时间即可，默认单位为 s</h4>\n<p>语句：select sleep (5);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624929977076-b73b5d9b-b4db-4684-ae9f-029cc07ce860.png\" alt=\"img\"></p>\n<h4 id=\"58updatexml-语法updatexml目标xml文档xml路径更新的内容\"><a class=\"markdownIt-Anchor\" href=\"#58updatexml-语法updatexml目标xml文档xml路径更新的内容\">#</a> 5.8：updatexml ()  // 语法 updatexml (目标 xml 文档，xml 路径，更新的内容)</h4>\n<p>语句：select  updatexml (‘anything’,concat (’~’,(select version ())),‘xxx’);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930123017-4d848866-90d2-4ef4-bdb7-2a4b53a42e41.png\" alt=\"img\"></p>\n<h4 id=\"59exp函数-此函数返回e自然对数的底的x次方的值用于将e提升为指定数字的幂当传递一个大于709的值时函数exp就会引起一个溢出错误\"><a class=\"markdownIt-Anchor\" href=\"#59exp函数-此函数返回e自然对数的底的x次方的值用于将e提升为指定数字的幂当传递一个大于709的值时函数exp就会引起一个溢出错误\">#</a> 5.9：exp () 函数  // 此函数返回 e (自然对数的底) 的 X 次方的值，用于将 E 提升为指定数字的幂，当传递一个大于 709 的值时，函数 exp () 就会引起一个溢出错误。</h4>\n<p>语句：select exp (2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930667186-832c967d-009b-48a4-99f6-a41dce583328.png\" alt=\"img\"></p>\n<h4 id=\"510length函数-返回参数的长度\"><a class=\"markdownIt-Anchor\" href=\"#510length函数-返回参数的长度\">#</a> 5.10：length () 函数 // 返回参数的长度</h4>\n<p>语句：select length (user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930725308-365094cc-7005-4216-84f5-a5e11ae4980e.png\" alt=\"img\"></p>\n<h4 id=\"511substr函数-从字符串-s-的-start-位置截取长度为-length-的子字符串select-substruser12\"><a class=\"markdownIt-Anchor\" href=\"#511substr函数-从字符串-s-的-start-位置截取长度为-length-的子字符串select-substruser12\">#</a> 5.11：substr () 函数  // 从字符串 s 的 start 位置截取长度为 length 的子字符串，select substr (user (),1,2);</h4>\n<p>语句：select substr (user (),1,2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930882499-d7677dca-e200-4ad1-93c8-8e8a6706222c.png\" alt=\"img\"></p>\n<h4 id=\"512substring函数left-mid函数-同substr\"><a class=\"markdownIt-Anchor\" href=\"#512substring函数left-mid函数-同substr\">#</a> 5.12：substring () 函数，left () ,mid () 函数  // 同 substr</h4>\n<p>语句：select substring (user (),1,2);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930922336-8bb88c57-3926-4b59-b0ff-b11e61283af2.png\" alt=\"img\"></p>\n<p>语句：select left (user (),5);（从左开始的前 n 个元素）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624930980586-47f5ecd5-6cdf-4723-a569-2ff1a8f50c0b.png\" alt=\"img\"></p>\n<p>语法：select mid (user (),1);（除去从左开始的 n-1 个元素）</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624931908776-b7abf795-40c1-4823-b882-d4487316f3be.png\" alt=\"img\"></p>\n<h4 id=\"513ascii-ord函数返回第一个字符的ascii码-返回字符的ascii码\"><a class=\"markdownIt-Anchor\" href=\"#513ascii-ord函数返回第一个字符的ascii码-返回字符的ascii码\">#</a> 5.13：ascii ()、ord () 函数返回第一个字符的 ascii 码  // 返回字符的 ascii 码</h4>\n<p>语句：select ascii (mid (user (),1));</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624931962396-a342ce33-66c9-4e78-9630-c843375f6b54.png\" alt=\"img\"></p>\n<p>语句：select ord (mid (user (),1));</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624932124508-2b7890f3-dd57-4e32-8b0f-129615c1e249.png\" alt=\"img\"></p>\n<h4 id=\"514name_const函数-构造一个临时列列名为xx值为xx\"><a class=\"markdownIt-Anchor\" href=\"#514name_const函数-构造一个临时列列名为xx值为xx\">#</a> 5.14：name_const () 函数  // 构造一个临时列，列名为 xx, 值为 xx</h4>\n<p>语句：select name_const (‘name’,15);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624932717111-cbe16c5f-28c6-41e8-80c6-19cff66271ce.png\" alt=\"img\"></p>\n<h4 id=\"515strcmp函数-strcmp函数是string-compare字符串比较的缩写用于比较两个字符串并根据比较结果返回整数-基本形式为strcmpstr1str2若str1str2则返回零若str1str2则返回负数若str1str2则返回正数\"><a class=\"markdownIt-Anchor\" href=\"#515strcmp函数-strcmp函数是string-compare字符串比较的缩写用于比较两个字符串并根据比较结果返回整数-基本形式为strcmpstr1str2若str1str2则返回零若str1str2则返回负数若str1str2则返回正数\">#</a> 5.15：strcmp () 函数  //strcmp 函数是 string compare (字符串比较) 的缩写，用于比较两个字符串并根据比较结果返回整数。基本形式为 strcmp (str1,str2)，若 str1=str2，则返回零；若 str1&lt;str2，则返回负数；若 str1&gt;str2，则返回正数</h4>\n<p>​\t语句：select strcmp (version (),user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624932788443-397f7a1f-e68f-4b50-995f-1c8e51fa357b.png\" alt=\"img\"></p>\n<h4 id=\"516ifabc-如果a逻辑表达式为真则返回b否则返回c\"><a class=\"markdownIt-Anchor\" href=\"#516ifabc-如果a逻辑表达式为真则返回b否则返回c\">#</a> 5.16：if (a,b,c) // 如果 a（逻辑表达式）为真，则返回 b，否则返回 c</h4>\n<p>语句：select if (length (database ())=5,1,0);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933121237-653ae586-4cfe-434e-a054-092d81d9457d.png\" alt=\"img\"></p>\n<h4 id=\"517benchmarkcountexpr-重复计算expr表达式count次\"><a class=\"markdownIt-Anchor\" href=\"#517benchmarkcountexpr-重复计算expr表达式count次\">#</a> 5.17：BENCHMARK (count,expr) // 重复计算 expr 表达式 count 次</h4>\n<p>语句：select benchmark (5,1);</p>\n<p>执行表达式 expr count 次，返回的结果都是 0。看返回结果是没有任何意义的，它的意义在于可以得到计算 count 次表达式 expr 后所需要的时间。表达式可以是 sql 语句，这样就可以看出一个 sql 语句写出来后效率怎么样，从而进行一定的优化。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933324230-2a56d0b8-54bd-4f77-bde5-91afa1c75c80.png\" alt=\"img\"></p>\n<h4 id=\"518locate函数-locatesubstrstr返回substr字符串在str中出现的位置没有返回0\"><a class=\"markdownIt-Anchor\" href=\"#518locate函数-locatesubstrstr返回substr字符串在str中出现的位置没有返回0\">#</a> 5.18：locate () 函数  //locate (substr,str) 返回 substr 字符串在 str 中出现的位置，没有返回 0</h4>\n<p>语句：select locate (‘r’,user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933413558-f0cb0ce0-325d-4489-a3c5-bacb1b81b825.png\" alt=\"img\"></p>\n<h4 id=\"519position函数-positionsubstr-in-str返回substr字符串在str中出现的位置没有返回0\"><a class=\"markdownIt-Anchor\" href=\"#519position函数-positionsubstr-in-str返回substr字符串在str中出现的位置没有返回0\">#</a> 5.19：position () 函数 //position (substr in str) 返回 substr 字符串在 str 中出现的位置，没有返回 0</h4>\n<p>语句：select position (‘r’ in user ());</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933444407-7c8aee41-20ee-4317-a24f-942714a2fcce.png\" alt=\"img\"></p>\n<h4 id=\"520instr函数-instrstrsubstr返回substr字符串在str中出现的位置与locate相同只是参数顺序相反\"><a class=\"markdownIt-Anchor\" href=\"#520instr函数-instrstrsubstr返回substr字符串在str中出现的位置与locate相同只是参数顺序相反\">#</a> 5.20：instr () 函数  //instr (str,substr) 返回 substr 字符串在 str 中出现的位置，与 locate 相同，只是参数顺序相反</h4>\n<p>​\t语句：select instr (‘qweasdzXC’,‘w’);</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624933537950-c57e8210-0b9a-44bf-bac2-35a2a9de07ee.png\" alt=\"img\"></p>\n<h4 id=\"521hexunhex函数\"><a class=\"markdownIt-Anchor\" href=\"#521hexunhex函数\">#</a> 5.21：hex ()&amp;unhex () 函数</h4>\n<p>渗透中有些注入点因为数据库中对数据字段的类型定义，可能不支持 union 来显示某些不同类型的内容，所以使用 hex 对数据进行十六进制编码；</p>\n<p>hex 参数可用于任何参数外面</p>\n<p>select hex(concat(user(),1));</p>\n<p>select hex(user()),hex(database())；</p>\n<p>unhex () 则是用来将十六进制的内容转换回十进制</p>\n<p>select unhex(‘726F6F74406C6F63616C686F737431’);</p>\n<h4 id=\"522load_file函数\"><a class=\"markdownIt-Anchor\" href=\"#522load_file函数\">#</a> 5.22：load_file () 函数</h4>\n<p>load_file () 函数是 MySQL 读取本地 / 远程文件的函数</p>\n<p>前提条件：</p>\n<ul>\n<li>\n<ul>\n<li>必须有权限读取且文件是可读的，低权限无法读取高权限用户文件</li>\n<li>被文件必须在服务器上</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>必须知道文件的绝对路径   可用：select @@basedir;</li>\n<li>读取的文件必须小于设定：max_allowed_packet</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>secure_file_priv 的值不为 NULL   使用 show global variables like ‘% secure%’; 查询是否为空，在 my.ini 设置为：secure_file_priv = ‘’</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>查询结果为：secure_file_priv  NULL 时，表示不允许导入导出；</li>\n<li>查询结果为：secure_file_priv  /xxx/ 时，表示只允许在当前目录导入导出；</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>查询结果为：secure_file_priv（空白）时，表示可以在任意目录进行导入导出；</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p>Windows：my.ini 中添加 secure_file_priv=</p>\n<p>Linux：/etc/my.cnf 的 [mysqld] 下面添加 local-infile=0</p>\n<p>语法：select load_file (‘D:/phpstudy_pro/Extensions/MySQL5.7.26/my.ini’);</p>\n<h4 id=\"523into-outfile函数\"><a class=\"markdownIt-Anchor\" href=\"#523into-outfile函数\">#</a> 5.23：into outfile () 函数</h4>\n<p>into outfile () 函数是用来导出文件的</p>\n<p>用法示例：select “hello word” into outfile ‘D:\\phpstudy_pro\\WWW\\1.txt’;</p>\n<p>注意：</p>\n<ul>\n<li>\n<ul>\n<li>\n<ul>\n<li>在 SQL 注入时，我们可以利用 load_file 或者 into outfile () 对文件进行读取，或者写入 Webshell；</li>\n<li>若过滤了单引号，则可以将函数中的字符进行 hex 编码。</li>\n</ul>\n</li>\n</ul>\n</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2F0dGFjaG1lbnRzL3l1cXVlLzAvMjAyMS9zcWwvMjY5OTc1MC8xNjI3MzU2MzYzMDc1LTgyNTJkNDAwLTlkNjYtNDM1Ny05MjEwLTllYTFjNWNiNmVkMC5zcWw=\">📎SQL 语句详细笔记.sql</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cueXVxdWUuY29tL2F0dGFjaG1lbnRzL3l1cXVlLzAvMjAyMS9tZC8yNjk5NzUwLzE2MjczNTYzNjMwNjEtYjNkZjRjN2ItMzEwMi00NjhjLThkYWEtZDkxNmJhYjZjZDVjLm1k\">📎mysql 数据库笔记.md</span></p>\n<p>3&lt;4&lt;5</p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/13/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.4web%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/",
            "url": "https://sun-spots.github.io/2022/01/13/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.4web%E7%AB%99%E7%82%B9%E6%90%AD%E5%BB%BA/",
            "title": "web站点搭建",
            "date_published": "2022-01-13T15:05:00.000Z",
            "content_html": "<h1 id=\"web站点搭建\"><a class=\"markdownIt-Anchor\" href=\"#web站点搭建\">#</a> web 站点搭建</h1>\n<h3 id=\"一基础知识\"><a class=\"markdownIt-Anchor\" href=\"#一基础知识\">#</a> 一：基础知识</h3>\n<p><strong>1. 网站</strong>：指在因特网上根据一定的规则，使用 HTML、CSS、jsp 等脚本语言与工具制作的用于展示特定内容相关网页的集合。简单地说，网站是一种沟通工具，人们可以通过网站来发布自己想要公开的资讯，或者利用网站来提供相关的网络服务。人们可以通过网页浏览器来访问网站，获取自己需要的资讯或者享受网络服务。</p>\n<p><strong>网站的分类</strong>：</p>\n<ol>\n<li>\n<ul>\n<li>\n<p>根据网站所用编程语言分类：例如 asp 网站、php 网站、jsp 网站、Asp. net 网站等；</p>\n</li>\n<li>\n<p>根据网站的用途分类：例如门户网站（综合网站）、行业网站、娱乐网站等；</p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<p>根据网站的功能分类：例如单一网站（企业网站）、多功能网站（网络商城）等等。</p>\n</li>\n<li>\n<p>根据网站的持有者分类：例如个人网站、商业网站、政府网站、教育网站等。</p>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>根据网站的商业目的分类：营利型网站（行业网站、论坛）、非营利性型网站（企业网站、政府网站、教育网站）。</li>\n</ul>\n</li>\n</ol>\n<p>适合类型：ASP（个人）、PHP（企业，门户，商务）、<span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQ=\">ASP.NET</span>（企业，门户，商务）<br>\nPHP（不适合大型）&gt;NET（比较适合中、大型）<br>\nJSP&gt;PHP &gt; <span class=\"exturl\" data-url=\"aHR0cDovL0FTUC5ORVQ=\">ASP.NET</span>，比如安全高、安全中、安全低。</p>\n<p><strong>2. 域名</strong>：简称域名、网域，是由一串用点分隔的名字组成的 Internet 上某一台计算机或计算机组的名称，用于在数据传输时标识计算机的电子方位（有时也指地理位置）。PS: 域名会被解析到一个唯一的公网 IP 地址上，当然通过 IP 也是可以去对网站进行访问。</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/8e4939b5eeb1b956.png\" alt=\"\"></p>\n<p><strong>3. 空间</strong>：</p>\n<p>常见网站空间：虚拟主机（虚拟空间），独立服务器，云主机，VPS。</p>\n<p>虚拟主机：是在网络服务器上划分出一定的磁盘空间供用户放置站点、应用组件等；提供必要的站点功能、数据存放和传输功能。所谓虚拟主机，也叫 “网站空间”，就是把一台运行在互联网上的服务器划分成多个 “虚拟” 的服务器。每一个虚拟主机都具有独立的域名和完整的 Internet 服务器（支持 WWW、FTP、E-mail 等）功能。</p>\n<p>云主机 /vps: 云主机又称为云计算服务器或云服务器，是云计算服务体系中的一项主机产品。云 z 主机是一种类似 VPS 服务器的虚拟化技术。也可以理解是 VPS 的升级版，与 VPS 还有所不同是，它是在一组集群服务器上划分出来的多个类似独立主机的部分。</p>\n<p><strong>4.web 网站的四大组成部分</strong>：服务器、数据库、web 容器（中间件）、脚本语言</p>\n<p><strong>5.web 容器简介</strong></p>\n<p>web 容器就是一种服务程序，在服务器中一个端口就对应一个提供相应服务的程序（比如 Apache 默认的端口为 80），而这个程序就是处理服务器从客户端收到的请求，如 Java 中的 Tomcat 容器，ASP 的 IIS 都是这样的容器。一个服务器可以有多个容器。</p>\n<p>常见的 WEB 容器：IIS、Apache、Nginx、Tomcat、Jboss、WebLogic</p>\n<p><strong>6. 脚本语言介绍</strong></p>\n<p>脚本语言是一种 web 端的网页源代码。它又分为静态和动态网站。</p>\n<p>静态：不与数据库发生交互，包括 html、html5、shtml。</p>\n<p>动态：与数据库进行交互来获取、存储数据，包括 asp、aspx、php、jsp 等。</p>\n<p><strong>7. 数据库介绍</strong></p>\n<p>数据库是存放数据的仓库。它的存储空间很大，可以存放百万条、千万条、上亿条数据。但是数据库并不是随意地将数据进行存放，是有一定的规则的，否则查询的效率会很低。</p>\n<p>常见的数据库：</p>\n<p>Access 数据库：小型数据库，性能低，安全性低，无需登录账号密码。</p>\n<p>Sqlserver 数据库：轻量级中小型，也叫 mssql 数据库，微软的数据库，需要登录账户密码，最高权限管理员名称：sa。</p>\n<p>Mysql 数据库：轻量级，需要账户密码，被 Oracle 收购了，最高权限\t管理员名称：root。</p>\n<p>Oracle 数据库：属于甲骨文公司，大型数据库，一个数据库可以建立很多数据库，最高权限管理员名称： sys。</p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">Mirsoft ACCESS </span><br><span class=\"line\">Mirsoft SQLServer </span><br><span class=\"line\">MySQL（ORACLE）</span><br></pre></td></tr></table></figure>\n<p><strong>8. 服务器介绍</strong></p>\n<p><strong>8.1 简介</strong>：服务器是一种高性能计算机，某方面其性能是普通计算机的几倍甚至更多，它作为网络节点，提供文件存储等服务，供客户端数据等服务，是互联网的灵魂。</p>\n<p><strong>8.2 常见的服务器：</strong></p>\n<p>Windows：</p>\n<p>Windows server2003\tIIS6.0</p>\n<p>Windows server2008\tIIS7.0</p>\n<p>Windows server2012\tIIS8.0</p>\n<p>Windows server2016\tIIS8.5</p>\n<p>Windows10\t\t\tIIS10.0</p>\n<p>Linux：</p>\n<p>Ubuntu</p>\n<p>Red Hat Enterprise Linux (RHEL)</p>\n<p>SUSE Linux Enterprise Server</p>\n<p>CentOS (Community OS) Linux Server</p>\n<p>Debian</p>\n<p><strong>8.3web 常见的网站搭建架构：</strong><br>\nWindows + IIS + Access + asp/aspx<br>\nWindows + IIS + SQLserver + asp/aspx<br>\nWindows + APache + Mysql + PHP<br>\nWindows + Nginx + Mysql/ORACLE + JSP</p>\n<p>Linux + Apache + Mysql + PHP  (LAMP)<br>\nLinux + Nginx + Mysql + PHP (LNMP)<br>\nLinux + Apache + Mysql + JSP<br>\nLinux + Nginx + Oracle + JSP<br>\nLinux + Tomcat、Jboss、WebLogic + MySQL/Oracle + Jsp</p>\n<h3 id=\"二web服务器搭建\"><a class=\"markdownIt-Anchor\" href=\"#二web服务器搭建\">#</a> 二：web 服务器搭建</h3>\n<p><strong>window serivce2016：</strong></p>\n<ul>\n<li>\n<p>在服务器管理器界面点击 “添加角色与功能”</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/3abb86dee48ec519.png\" alt=\"\"></p>\n</li>\n<li>\n<p>安装类型与服务器选择均默认，服务器角色选择 -----web 服务器</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/a4d3c419c5d0b473.png\" alt=\"\"></p>\n</li>\n<li>\n<p>功能选择 -----IIS 可承载 web 核心</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/fc3a69addced39ce.png\" alt=\"\"></p>\n</li>\n<li>\n<p>在此页面下找到以下选项选中即可</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/00c83445b741a176.png\" alt=\"\"></p>\n</li>\n<li>\n<p>打开管理工具，选择 internet information service</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/2573d508c78b1744.png\" alt=\"\"></p>\n</li>\n<li>\n<p>选择网站右键添加网站</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/0833c62de01a43a4.png\" alt=\"\"></p>\n</li>\n<li>\n<p>填写网络名称、物理路径，将应用程序池改为图中值并选择 ip</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/100614fc3279f959.png\" alt=\"\"></p>\n</li>\n<li>\n<p>右键点击创建的网站，重新启动即可</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/5f0b7b99f1c6eae3.png\" alt=\"\"></p>\n<h3 id=\"3常见的错误\"><a class=\"markdownIt-Anchor\" href=\"#3常见的错误\">#</a> 3 常见的错误</h3>\n<p>3.1 若浏览器中出现文件夹中所有的文件，而没有出现初始页面，则此时应该在默认文档中加入网站初始页面的文件</p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/b3dd4412dd0ecec6.png\" alt=\"\"></p>\n<p><a href=\"https://imgtu.com/i/7rjx91\"><img data-src=\"https://s4.ax1x.com/2022/01/19/7rjx91.png\" alt=\"7rjx91.png\"></a></p>\n<p>3.2 若浏览器中出现 403 错误，此时文件目录的访问权限出现问题，修改目录浏览，启用即可</p>\n<p><a href=\"https://imgtu.com/i/7rviHe\"><img data-src=\"https://s4.ax1x.com/2022/01/19/7rviHe.png\" alt=\"7rviHe.png\"></a></p>\n<p>3.3 若浏览器中出现数据库文件出错相关的问题。可以尝试将应用程序池中的 Class.Net 中的高级设置中的启用 32 位应用程序设置为 true</p>\n<p><a href=\"https://imgtu.com/i/7rvQHg\"><img data-src=\"https://s4.ax1x.com/2022/01/19/7rvQHg.png\" alt=\"7rvQHg.png\"></a></p>\n</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/11/%E4%BF%AE%E6%94%B9/2022-01-11-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",
            "url": "https://sun-spots.github.io/2022/01/11/%E4%BF%AE%E6%94%B9/2022-01-11-%E8%AE%A1%E7%AE%97%E6%9C%BA%E7%BD%91%E7%BB%9C/",
            "title": "计算机网络",
            "date_published": "2022-01-11T15:05:00.000Z",
            "content_html": "<h1 id=\"计算机网络\"><a class=\"markdownIt-Anchor\" href=\"#计算机网络\">#</a> 计算机网络</h1>\n<p>两个基本的漏洞</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">https://www.yuque.com/docs/share/8e0c043d-12bc-4ed9-b6e3-869597527c9f?<span class=\"comment\">#（密码：tc8g） 《CNVD-2021-17369：锐捷Smartweb管理系统 密码信息泄露漏洞》</span></span><br><span class=\"line\">https://www.yuque.com/docs/share/e860a614-90b9-40ca-<span class=\"number\">8132</span>-dda9464ba5e6?<span class=\"comment\">#（密码：oxxh） 《CVE-2021-37580：Apache ShenYu JWT认证缺陷漏洞》</span></span><br></pre></td></tr></table></figure>\n<h1 id=\"一osi七层参考模型\"><a class=\"markdownIt-Anchor\" href=\"#一osi七层参考模型\">#</a> 一：OSI 七层参考模型</h1>\n<p>计算机网络是指将地理位置不同的具有独立功能的多台计算机及其外部设备，通过通信线路连接起来，在网络操作系统，网络管理软件及网络通信协议的管理和协调下，实现资源共享和信息传递的计算机系统。</p>\n<p><strong>计算机网络的分类</strong></p>\n<table>\n<thead>\n<tr>\n<th>依照</th>\n<th>分类类型</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>地理范围</td>\n<td>局域网 (LAN)/ 城域网 (MAN)/ 广域网 (WAN)</td>\n</tr>\n<tr>\n<td>交换方式</td>\n<td>线路交换网络 / 报文交换网络 / 分组交换网络</td>\n</tr>\n<tr>\n<td>拓扑结构</td>\n<td>树形网络 / 总线型网络 / 环形网络 / 网状网络</td>\n</tr>\n</tbody>\n</table>\n<ul>\n<li>\n<p><strong>局域网</strong>：是指范围在几百米到十几公里内办公楼群或校园内的计算机相互连接所构成的计算机网络。计算机局域网被广泛应用于连接校园、工厂以及机关的个人计算机或工作站，以利于个人计算机或工作站之间共享资源（如打印机）和数据通信。</p>\n</li>\n<li>\n<p><strong>城域网</strong>：所采用的技术基本上与局域网相类似，只是规模上要大一些。城域网既可以覆盖相距不远的几栋办公楼，也可以覆盖一个城市；既可以是私人网，也可以是公用网。</p>\n</li>\n<li>\n<p><strong>广域网</strong>：通常跨接很大的物理范围，如一个国家。</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641813403231-9375dea7-5391-444b-a7c8-5e584ec4f9e4.png\" alt=\"img\"></p>\n<p><strong>》〉》通信要素《〈《</strong></p>\n<p>在网络上只要利用 IP 地址就可以找到目标主机，因此要攻击某个网络主机就要应该先确定该目标主机的域名或 IP 地址。</p>\n<p>阐述：</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">所谓的ip地址就是一种主机编址方式，给每个连接在Intelnet上的主机分配一个32bit的地址，也称为网际协议地址。</span><br><span class=\"line\">按照TCP/IP（Transport Control Protocol/Intelnet Protocol，传输控制协议）协议簇的规定，IP地址用二进制来表示，每个IP地址长32bit，换算成字节就是<span class=\"number\">4</span>字节（Byte）。例如，一个采用二进制形式的ip地址是“000010100000000000000000001”，这么长的地址处理起来很费劲，为了方便使用，IP地址经常被写成十进制的形式，中间使用<span class=\"string\">&quot;.&quot;</span>分割不同的字节，即用XXX.XXX.XXX.XXX的形式来表现，每组XXX代表小于等于<span class=\"number\">255</span>的十进制数，例如<span class=\"number\">192.168</span><span class=\"number\">.38</span><span class=\"number\">.6</span>。IP地址的这种表示方法称为“点分十进制表示法”，这显然比二进制的<span class=\"number\">1</span>和<span class=\"number\">0</span>容易记忆多了。</span><br></pre></td></tr></table></figure>\n<p>一个完整的 IP 地址信息应该包括：IP 地址 / 子网掩码 / 默认网关 / 和 DNS… 只有四个协同工作时，用户才可以访问 Internet 并被 Internet 的计算机所访问…</p>\n<p>（采用静态 IP 地址接入 Internet 时候，ISP（网络提供商）应当为用户提供全部 IP 地址信息）</p>\n<ul>\n<li>IP 地址：企业网络使用的合法 IP 地址，由提供 Internet 接入的服务商（ISP）分配公网地址，公网地址可以由网络管理员自由分配。但网络内部的私有 IP 地址不能相同，否则会发生 IP 地址冲突，导致网络连接失败。一般情况，IP 地址可以分为 5 大类别：A 类 / B 类 / C 类 / D 类及 E 类。</li>\n</ul>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A类地址以<span class=\"number\">0</span>开头，第一个字节作为网络号，地址范围为：<span class=\"number\">0.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">127.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>；   A类IP地址前<span class=\"number\">8</span>位表示网络号，后<span class=\"number\">24</span>位表示主机号</span><br><span class=\"line\">B类地址以<span class=\"number\">10</span>开头，前两个字节作为网络号，地址范围是：<span class=\"number\">128.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">191.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>;  B类IP地址前<span class=\"number\">16</span>位表示网络号，后<span class=\"number\">16</span>位表示主机号</span><br><span class=\"line\">C类地址以<span class=\"number\">110</span>开头，前三个字节作为网络号，地址范围是：<span class=\"number\">192.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">223.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>；C类IP地址前<span class=\"number\">24</span>位表示网络号，后<span class=\"number\">8</span>位表示主机号</span><br><span class=\"line\">D类地址以<span class=\"number\">1110</span>开头，地址范围是<span class=\"number\">224.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">239.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>，D类地址作为组播地址（一对多的通信）；</span><br><span class=\"line\">E类地址以<span class=\"number\">1111</span>开头，地址范围是<span class=\"number\">240.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span>，E类地址为保留地址，供以后使用。</span><br><span class=\"line\">注：只有A,B,C有网络号和主机号之分，D类地址和E类地址没有划分网络号和主机号。</span><br><span class=\"line\"><span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">该IP地址指的是受限的广播地址。受限广播地址与一般广播地址（直接广播地址）的区别在于，受限广播地址只能用于本地网络，路由器不会转发以受限广播地址为目的地址的分组；一般广播地址既可在本地广播，也可跨网段广播。\t\t</span><br><span class=\"line\">例如：主机<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.1</span>/<span class=\"number\">30</span>上的直接广播数据包后，另外一个网段<span class=\"number\">192.168</span><span class=\"number\">.1</span><span class=\"number\">.5</span>/<span class=\"number\">30</span>也能收到该数据报；若发送受限广播数据报，则不能收到。</span><br><span class=\"line\">注：一般的广播地址（直接广播地址）能够通过某些路由器（当然不是所有的路由器），而受限的广播地址不能通过路由器。</span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">8</span>   </span><br><span class=\"line\"><span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>~<span class=\"number\">127.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">被用作回环地址，回环地址表示本机的地址，常用于对本机的测试，用的最多的是<span class=\"number\">127.0</span><span class=\"number\">.0</span><span class=\"number\">.1</span>。</span><br><span class=\"line\">A、B、C类私有地址</span><br><span class=\"line\">私有地址(private address)也叫专用地址，它们不会在全球使用，只具有本地意义。</span><br><span class=\"line\">A类私有地址：<span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">8</span>，范围是：<span class=\"number\">10.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">10.255</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">B类私有地址：<span class=\"number\">172.16</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">16</span>，范围是：<span class=\"number\">172.16</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">172.31</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br><span class=\"line\">C类私有地址：<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span>/<span class=\"number\">24</span>，范围是：<span class=\"number\">192.168</span><span class=\"number\">.0</span><span class=\"number\">.0</span>~<span class=\"number\">192.168</span><span class=\"number\">.255</span><span class=\"number\">.255</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>子网掩码：子网掩码是于 IP 地址结合使用的一种技术，其主要作用有两个：</li>\n</ul>\n<ol>\n<li>\n<p>用于确定地址中的网络号和主机号</p>\n<p>2. 用于将一个大的 IP 网络划分为若干个小自网络（划分子网）</p>\n</li>\n</ol>\n<p>什么是子网掩码？</p>\n<p>子网掩码是标志两个 IP 地址是否同属于一个子网的，也是 32 位二进制地址，其每一个为 1 代表该位是网络位，为 0 代表主机位。它和 IP 地址一样也是使用点式十进制来表示的。如果两个 IP 地址在子网掩码的按位与的计算下所得结果相同，即表明它们共属于同一子网中。</p>\n<figure class=\"highlight python\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">A类地址来说，默认的子网掩码是<span class=\"number\">255.0</span><span class=\"number\">.0</span><span class=\"number\">.0</span>；</span><br><span class=\"line\">对于B类地址来说默认的子网掩码是<span class=\"number\">255.255</span><span class=\"number\">.0</span><span class=\"number\">.0</span>；</span><br><span class=\"line\">对于C类地址来说默认的子网掩码是<span class=\"number\">255.255</span><span class=\"number\">.255</span><span class=\"number\">.0</span></span><br></pre></td></tr></table></figure>\n<ul>\n<li>默认网关：当一台主机找不到可用的网关时，就把数据包发送给指定的默认网关，由这个网管来处理数据包。</li>\n</ul>\n<p>（从一个网络向另一个网络发送消息，也必须经过一道 “关口” 这道关口就是网关）</p>\n<ul>\n<li>DNS 地址：DNS 服务用于将用户的域名请求转换为 IP 地址。如果企业网络没有提供 DNS 服务，则 DNS 服务器的 IP 地址应当是 ISP 的 DNS 服务器。</li>\n</ul>\n<p>【附件】全国各省市的 DNS 服务器 IP 地址。见附录</p>\n<p><strong>》》》OSI 七层参考模型《《《</strong></p>\n<p>有了计算机等设备，也就得考虑如何连接起来他们，这就是他们之间该如何通信的问题。对计算机来说，就是一个硬件设备，如何让计算机与计算机连接起来，必需需要软件的支撑。那么支持计算机通讯的软件是什么呢？就是计算机网络参考模型。这个计算机网络参考模型就是计算机网络软件。最经典的当然是国际化标准的 OSI（Open System InterConnect  开放式系统互联）参考模型。它是通过一个机器上的一个应用进程与另一个机器上的进程进行信息交互。</p>\n<p>OSI 七层模型概念：</p>\n<p>1：OSI (open system Interconnect), 即开放式系统互联。一般叫 OSI 参考模型，是 ISO (国际标准化组织) 组织在 1985 年研究的网络互联模型。</p>\n<p>2：ISO 为了更好的使网络应用更为普及，推出了 OSI 参考模型。其含义就是推荐所有公司使用这个规范来控制网络。这样所有公司都有相同的规范，就能产生互联。</p>\n<p>3：OSI 定义了网络互联的七层框架（物理层、数据链层、网络层、传输层、会话层、表示层、应用层），即 ISO 开放互连系统参考模型。</p>\n<p>4：每一层实现各自的功能和协议，并完成与相邻层的接口通信。OSI 的服务定义详细说明了各层所提供的服务。某一层的服务就是该层及其下各层的一种功能，它同通过接口提供更高一层。各层所提供的服务与这些服务是怎末实现无关。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623377768783-e019cdb1-bd06-4830-b55b-29feed6e84f7.png\" alt=\"img\"></p>\n<p><strong>》》》OSI 七层作用介绍《《《</strong></p>\n<p>1：应用层</p>\n<p>应用层是 OSI 参考模型的最高层，是用户与网络的接口。该层通过应用程序来完成网络用户的应用需求，如文件传输、收发电子邮件等。</p>\n<p>【提供与用户的接口，最终呈现给用户】</p>\n<p>2：表示层</p>\n<p>表示层处理流经结点的数据编码的表示方式问题，以保证一个系统应用层发出的信息可被另一系统的应用层读出。如果必要，该层可提供一种标准表示形式，用于将计算机内部的多种数据表示格式转换成网络通信中采用的标准表示形式。数据压缩和加密也是表示层可提供的转换功能之一。</p>\n<p>【数据的表示 / 安全 / 压缩】</p>\n<p>3：会话层</p>\n<p>会话层主要功能是管理和协调不同主机上各种进程之间的通信（会话），即负责建立、管理和终止应用程序之间的会话。会话层得名的原因是它很类似于两个实体间的会话概念。例如，一个交互的用户会话以登录到计算机开始，以注销结束。</p>\n<p>【建立用户之间的会话关系】</p>\n<p>4：传输层</p>\n<p>传输层的作用是为上层协议提供端到端的可靠的、透明的数据传输服务，包括处理差错控制和流量控制等问题。该层向高层屏蔽了下层数据通信的细节，使高层用户看到的只是在两个传输实体间的一条主机到主机的、可由用户控制和设定的、可靠的数据通路。</p>\n<p>传输层传送的协议数据单元称为段（data segment）或报文（Message）。</p>\n<p>【定义传输数据的协议端口号以及流控和差错校验】</p>\n<p>5：网络层：</p>\n<p>网络层是为其上层传输层提供服务，传送的协议数据单元称为数据包 (Packet) 或分组。该层的主要作用是解决如何使数据包通过各结点传送的问题，即通过路径选择算法（路由）将数据包送到目的地。另外，为避免通信子网中出现过多的数据包而造成的网络阻塞，需要对流入的数据包数量进行控制（拥塞控制）。当数据包要跨越多个通信子网才能到达目的地时，还要解决网际互连的问题。</p>\n<p>类比：网络层相当于邮局中的信件分拣人员。</p>\n<p>网络层的作用：</p>\n<ul>\n<li>\n<p>路由选路</p>\n</li>\n<li>\n<p>拥塞控制、差错检测与恢复</p>\n</li>\n<li>\n<p>网络互联</p>\n</li>\n</ul>\n<p>【进行逻辑地址寻址，实现不同网络之间的路径选择】</p>\n<p>6：数据链层</p>\n<p>数据链路层是为其上层网络层提供服务，解决两个相邻结点之间的通信问题，传送的协议数据单元称为数据帧 (Data frame)。</p>\n<p>数据帧中包含物理地址（又称 MAC 地址）、控制码、数据及校验码等信息。该层的主要作用是通过校验、确认和反馈重发等手段，将不可靠的物理链路转换成对网络层来说无差错的数据链路。</p>\n<p>此外，数据链路层还要协调收发双方的数据传输速率，即进行流量控制，以防止接收方因来不及处理发送方来的高速数据而导致缓冲器溢出及线路阻塞。</p>\n<p>类比：数据链路层相当于邮局中的装拆箱人员。</p>\n<p>数据链层的作用：</p>\n<ul>\n<li>\n<p>物理地址定义 \t\t网络拓扑机构</p>\n</li>\n<li>\n<p>链路参数\t\t\t差错验证</p>\n</li>\n<li>\n<p>物理介质访问\t\t流控制</p>\n</li>\n</ul>\n<p>【进行逻辑链接 / 进行硬件地址寻址 / 差错校验等功能】</p>\n<p>7：物理层</p>\n<p>物理层是 OSI 参考模型的最底层，它利用传输介质为其上层数据链路层提供物理连接。它主要关心的是通过物理链路从一个节点向另一个节点传送比特流（bit），物理链路可能是铜缆、光纤、无线或其他的通讯媒介。它关心的问题有：多少伏电压代表 1？多少伏电压代表 0？时钟速率是多少？采用全双工、半双工还是单工通信？</p>\n<p>总的来说物理层关心的是链路的机械、电气、功能和规程特性。</p>\n<p>类比：物理层相当于邮局中的搬运工人。Physical Layer</p>\n<p>物理层的作用：</p>\n<ul>\n<li>提供传输数据的物理通路，传输数据</li>\n</ul>\n<p>​    \t【建立 / 维护 / 断开物理层链接】</p>\n<p>记忆口诀：应表会传网数物</p>\n<h1 id=\"二tcpip五层模型\"><a class=\"markdownIt-Anchor\" href=\"#二tcpip五层模型\">#</a> 二：TCP/IP 五层模型</h1>\n<p>由于 ISO 指定的 OSI 参考模型过于庞大、复杂、在实现制作过程造成了很多困难，从而招致了很多批评。在现实中，TCP/IP 协议获得了广泛的应用。目前主流的操作系统网络协议基本上都采用了 TCP/IP 协议。而 TCP/IP 与 OSI 在分层模型上稍有区别：OSI 参考模型注重 &quot;通信协议必要的功能是什么&quot;，而 TCP/IP 则更强调 &quot;在计算机上实现协议应该开发那种程序&quot;。</p>\n<ul>\n<li>\n<p>另外一个著名的模型是 TCP/IP 模型，TCP/IP 是传输控制协议 / 网络互联协议的简称；</p>\n</li>\n<li>\n<p>早期的 TCP/IP 协议是一个四层结构，在后来的使用过程中借鉴 OSI 的七层参考模型，形成了一个新的五层结构；</p>\n</li>\n<li>\n<p>TCP/IP 是一系列协议的集合，所以严格的称呼应该是 TCP/IP 协议簇；</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641816411268-9a24cead-13c8-460b-944a-6a38660bc7c3.png\" alt=\"img\"></p>\n<p><strong>》》》TCP/IP 五层与 OSI 七层的区别《《《</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2336202/1641210571031-56562245-f047-4fcb-a39e-ad0d6c01d825.png\" alt=\"img\"></p>\n<p>1：开放式系统互联模型是一个参考标准，解释协议相互之间应该如何相互作用。TCP/IP 协议是美国国防部发明的，是让互联网成为了目前这个样子的标准之一。</p>\n<p>2：开放式系统互联模型中没有清楚地描绘 TCP/IP 协议，但是在解释 TCP/IP 协议很容易想到开放式系统互联模型。两者的主要区别如下：TCP/IP 协议中的应用层处理开放式系统互联模型中的第五层、第六层和第七层的功能。TCP/IP 协议中的传输层并不能总是保证在传输层可靠地传输数据包，而开放式系统互联模型可以做到。TCP/IP 协议还提供一项名为 UDP（用户数据报协议）的选择。UDP 不能保证可靠的数据包传输。</p>\n<p><strong>》》》模型对应的协议《《《</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641816722890-fe61567a-f1fb-4fb9-b4df-d4753fab38fd.png\" alt=\"img\"></p>\n<table>\n<thead>\n<tr>\n<th>应用层</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>HTTP（超文本传输协议 80）：用于浏览器和 Web 服务器之间的请求和响应的交互</td>\n</tr>\n<tr>\n<td>DNS（域名系统 53）：用于连接 DNS 服务器</td>\n</tr>\n<tr>\n<td>SMTP（简单邮件传输协议 25）：用于接收邮件</td>\n</tr>\n<tr>\n<td>FTP（文件传输协议 21）：用于控制连接 FTP 服务器</td>\n</tr>\n<tr>\n<td>传输层</td>\n</tr>\n<tr>\n<td>TCP（传输控制协议）和 UDP（用户数据报协议）</td>\n</tr>\n<tr>\n<td>网络层 (本层 TCP/IP 定义了 IP 协议，而 IP 协议又由四个支撑协议组成)</td>\n</tr>\n<tr>\n<td>ARP（地址解析协议）：用于在局域网中根据 IP 地址获取物理地址</td>\n</tr>\n<tr>\n<td>RARP（逆地址解析协议）：用于在局域网中通过 ARP 表根据物理地址请求 IP 地址</td>\n</tr>\n<tr>\n<td>ICMP（网际控制报文协议）：用于验证网络是否畅通</td>\n</tr>\n<tr>\n<td>IGMP（网际组管理协议）：用于主机与组播路由器之间组播通信</td>\n</tr>\n<tr>\n<td>物理层和数据链路层</td>\n</tr>\n<tr>\n<td>IEEE802.3 有线局域网（以太网）标准</td>\n</tr>\n<tr>\n<td>IEEE802.11 无线局域网标准</td>\n</tr>\n</tbody>\n</table>\n<p><strong>》》》TCP 协议《《《</strong></p>\n<p>在 TCP/IP 协议中，TCP 协议提供可靠的连接服务，采用三次握手建立一个连接.</p>\n<p>TCP 是面向连接的通信协议，通过三次握手建立连接，通讯完成时要拆除连接，由于 TCP 是面向连接的所以只能用于端到端的通讯。TCP 提供的是一种可靠的数据流服务，采用 &quot;带重传的肯定确认&quot; 技术来实现传输的可靠性。TCP 还采用一种称为 &quot;滑动窗口&quot; 的方式进行流量控制，所谓窗口实际表示接收能力，用以限制发送方的发送速度。</p>\n<p>建立 TCP 连接，就是指建立一个 TCP 连接时，需要客户端和服务端总共发送 3 个包以确认连接的建立。在 socket 编程中，这一过程由客户端执行 connect 来触发。</p>\n<p><strong>注：seq</strong>:&quot;sequance&quot; 序列号；<strong>ack</strong>:&quot;acknowledge&quot; 确认号；<strong>SYN</strong>:&quot;synchronize&quot; 请求同步标志；<strong>；ACK</strong>:“acknowledge&quot; 确认标志”<strong>；FIN</strong>：&quot;Finally&quot; 结束标志。</p>\n<p>使用 TCP 的协议：</p>\n<ul>\n<li>\n<p>FTP（文件传输协议）21 号端口 20 号端口</p>\n</li>\n<li>\n<p>Telnet（远程登录协议）</p>\n</li>\n<li>\n<p>SMTP（简单邮件传输协议）</p>\n</li>\n<li>\n<p>POP3（和 SMTP 相对，用于接收邮件）</p>\n</li>\n<li>\n<p>HTTP 协议等。</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641818342862-a9572f54-aef6-41d3-ae56-30495c09107e.png\" alt=\"img\"></p>\n<p><strong>第一次握手</strong>：Client 将标志位 SYN 置为 1，随机产生一个值 seq=J，并将该数据包发送给 Server，Client 进入 SYN_SENT 状态，等待 Server 确认。</p>\n<p>SYN：同步序列编号 (Synchronize Sequence Numbers)</p>\n<p><strong>第二次握手</strong>：Server 收到数据包后由标志位 SYN=1 知道 Client 请求建立连接，Server 将标志位 SYN 和 ACK 都置为 1，ack=J+1，随机产生一个值 seq=K，并将该数据包发送给 Client 以确认连接请求，Server 进入 SYN_RCVD 状态。</p>\n<p><strong>第三次握手</strong>：Client 收到确认后，检查 ack 是否为 J+1，ACK 是否为 1，如果正确则将标志位 ACK 置为 1，ack=K+1，并将该数据包发送给 Server，Server 检查 ack 是否为 K+1，ACK 是否为 1，如果正确则连接建立成功，Client 和 Server 进入 ESTABLISHED 状态，完成三次握手，随后 Client 与 Server 之间可以开始传输数据了。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2336202/1641217203992-87ac02b3-a6fe-4389-917a-887fd4de1e4b.png\" alt=\"img\"></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">为什么需要三次握手？</span><br><span class=\"line\">client发出的第一个连接请求报文段并没有丢失，而是在某个网络结点长时间的滞留了，以致延误到连接释放以后的某个时间才到达server。本来这是一个早已失效的报文段。但server收到此失效的连接请求报文段后，就误认为是client再次发出的一个新的连接请求。于是就向client发出确认报文段，同意建立连接。假设不采用三次握手，那么只要server发出确认，新的连接就建立了。由于现在client并没有发出建立连接的请求，因此不会理睬server的确认，也不会向server发送数据。但server却以为新的运输连接已经建立，并一直等待client发来数据。这样，server的很多资源就白白浪费掉了。采用三次握手的办法可以防止上述现象发生。</span><br></pre></td></tr></table></figure>\n<p>四次挥手（Four-Way Wavehand）即终止 TCP 连接，就是指断开一个 TCP 连接时，需要客户端和服务端总共发送 4 个包以确认连接的断开。在 socket 编程中，这一过程由客户端或服务端任一方执行 close 来触发…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641819982983-b25a8e05-291a-4bdc-83dd-5f9a97964972.png\" alt=\"img\"></p>\n<p><strong>第一次挥手</strong>：Client 发送一个 FIN，用来关闭 Client 到 Server 的数据传送，Client 进入 FIN_WAIT_1 状态。</p>\n<p><strong>第二次挥手</strong>：Server 收到 FIN 后，发送一个 ACK 给 Client，确认序号为收到序号 + 1（与 SYN 相同，一个 FIN 占用一个序号），Server 进入 CLOSE_WAIT 状态。</p>\n<p><strong>第三次挥手</strong>：Server 发送一个 FIN，用来关闭 Server 到 Client 的数据传送，Server 进入 LAST_ACK 状态。</p>\n<p><strong>第四次挥手</strong>：Client 收到 FIN 后，Client 进入 TIME_WAIT 状态，接着发送一个 ACK 给 Server，确认序号为收到序号 + 1， Server 进入 CLOSED 状态，完成四次挥手。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">【问题<span class=\"number\">1</span>】为什么连接的时候是三次握手，关闭的时候却是四次握手？</span><br><span class=\"line\">答：因为当Server端收到Client端的SYN连接请求报文后，可以直接发送SYN+ACK报文。其中ACK报文是用来应答的，SYN报文是用来同步的。但是关闭连接时，当Server端收到FIN报文时，很可能并不会立即关闭SOCKET，所以只能先回复一个ACK报文，告诉Client端，<span class=\"string\">&quot;你发的FIN报文我收到了&quot;</span>。只有等到我Server端所有的报文都发送完了，我才能发送FIN报文，因此不能一起发送。故需要四步握手。</span><br></pre></td></tr></table></figure>\n<p>如果有大量的连接，每次在连接、关闭时都要三次握手，四次挥手，会很明显会造成性能低下，因此，HTTP 有一种叫做 keep connection 的机制，它可以在传输数据后仍然保持连接，当客户端再次获取数据时，直接使用刚刚空闲下的连接而无需再次握手…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641820064122-1df469e4-3437-4dbb-ab08-a45a7438b2fb.png\" alt=\"img\"></p>\n<p><strong>》》》UDP 协议《《《</strong></p>\n<p>UDP 用户数据报协议，是面向无连接的通讯协议，UDP 数据包括目的端口号和源端口号信息，由于通讯不需要连接，所以可以实现广播发送。</p>\n<p>UDP 通讯时不需要接收方确认，属于不可靠的传输，可能会出现丢包现象，实际应用中要求程序员编程验证。</p>\n<p>UDP 与 TCP 位于同一层，但它不管数据包的顺序、错误或重发。因此，UDP 不被应用于那些使用虚电路的面向连接的服务，UDP 主要用于那些面向查询 — 应答的服务，例如 NFS。相对于 FTP 或 Telnet，这些服务需要交换的信息量较小。</p>\n<p>每个 UDP 报文分 UDP 报头和 UDP 数据区两部分。报头由四个 16 位长（2 字节）字段组成，分别说明该报文的源端口、目的端口、报文长度以及校验值。UDP 报头由 4 个域组成，其中每个域各占用 2 个字节，具体如下：</p>\n<ul>\n<li>\n<p>（1）源端口号；</p>\n</li>\n<li>\n<p>（2）目标端口号；</p>\n</li>\n<li>\n<p>（3）数据报长度；</p>\n</li>\n<li>\n<p>（4）校验值。</p>\n</li>\n</ul>\n<p>使用 UDP 协议包括：TFTP（简单文件传输协议）、SNMP（简单网络管理协议）、DNS（域名解析协议）、NFS、BOOTP。</p>\n<p><strong>》》》TCP 和 UDP 的区别《《《</strong></p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1</span>：连接方面区别：</span><br><span class=\"line\">i：TCP面向连接（如打电话要先拨号建立连接）。</span><br><span class=\"line\">ii：UDP是无连接的，即发送数据之前不需要建立连接。</span><br><span class=\"line\"><span class=\"number\">2</span>：安全方面的区别：</span><br><span class=\"line\">i：TCP提供可靠的服务，通过TCP连接传送的数据，无差错，不丢失，不重复，且按序到达。</span><br><span class=\"line\">ii：UDP尽最大努力交付，即不保证可靠交付。</span><br><span class=\"line\"><span class=\"number\">3</span>：传输效率的区别：</span><br><span class=\"line\">i：TCP传输效率相对较低。</span><br><span class=\"line\">ii：UDP传输效率高，适用于对高速传输和实时性有较高的通信或广播通信。</span><br><span class=\"line\"><span class=\"number\">4</span>：连接对象数量的区别：</span><br><span class=\"line\">i：TCP连接只能是点到点、一对一的。</span><br><span class=\"line\">ii：UDP支持一对一，一对多，多对一和多对多的交互通信。</span><br></pre></td></tr></table></figure>\n<p><strong>》》》数据封装与解封装过程《《《</strong></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641820630031-3de6d764-4c7f-4949-90bf-9a79145d217e.png\" alt=\"img\"></p>\n<p>1. 数据封装过程</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"number\">1.</span>在应用层，用户的数据被转换成二进制数据</span><br><span class=\"line\"><span class=\"number\">2.</span>在传输层，上层数据被分割成很小的数据段，并为每个分段后的数据封装TCP报文头部</span><br><span class=\"line\"><span class=\"number\">3.</span>在网络层，上层数据被封装上新的报文头部——IP头部</span><br><span class=\"line\"><span class=\"number\">4.</span>在数据链路层，上层数据被封装一个MAC头部，其内部有一个关键的字段信息——MAC地址</span><br><span class=\"line\"><span class=\"number\">5.</span>在物理层，无论在之前封装的报文头部还是上层的数据信息都是由二进制数组成的，在物理层，将这些二进制数字组成的比特流转换成电信号在网络中传输</span><br></pre></td></tr></table></figure>\n<p>2. 数据解封装过程</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">数据被封装完毕通过网络传输到接收方以后，将进入数据的解封装过程，这将是封装过程的一个逆过程</span><br><span class=\"line\"></span><br><span class=\"line\"><span class=\"number\">1.</span>在物理层，首先将电信号转换成二进制数据，并将数据数据送至数据链路层</span><br><span class=\"line\"><span class=\"number\">2.</span>在数据链路层，查看目标MAC地址，如果吻合就“拆掉”，将剩下的数据送往上一层</span><br><span class=\"line\"><span class=\"number\">3.</span>在网络层，核实目标IP地址是否与自己的IP地址相同，从而确定是否送至上一层</span><br><span class=\"line\"><span class=\"number\">4.</span>在传输层，首先根据TCP头部判断数据送往哪个应用层协议或应用程序，将之前被分组的数据段重组，再送往上一层</span><br><span class=\"line\"><span class=\"number\">5.</span>在应用层，这些二进制数据将经历复杂的解码过程还原成发送者所输送的最初信息</span><br></pre></td></tr></table></figure>\n<p><strong>》》》数据传输基本概念《《《</strong></p>\n<ul>\n<li>\n<p>对于 OSI 模型而言，每一层都是通过协议数据单元来进行通信的，而对于 TCP/IP 五层模型，也可以沿用这个概念</p>\n</li>\n<li>\n<p>PDU（协议数据单元）是指同层之间传递的数据单位</p>\n</li>\n<li>\n<p>应用数据需要经过 TCP/IP 每一层处理之后才能传输到目的端，每一层都使用该层的协议数据单元 PDU 彼此交换信息，不同层的 PDU 中包含有不同的信息，因此 PDU 在不同层被赋予了不同的名称</p>\n</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641821009877-48ab3553-40e2-4347-befb-2b798c79f016.png\" alt=\"img\"></p>\n<p><strong>》》》硬件设备对应五层模型《《《</strong></p>\n<p>设备属于哪一层要看这个设备主要工作在哪一层，有什么对应的功能…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641821153555-dd2442a2-a3f2-4745-b299-057027fc6ffe.png\" alt=\"img\"></p>\n<p><strong>》》》层间通信协议《《《</strong></p>\n<ul>\n<li>发送方与接收方之间必须采用相同的协议才能建立连接，实现正常的通信</li>\n</ul>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641821484028-605bd9f5-59d2-4767-baa4-0f9a01a6cec4.png\" alt=\"img\"></p>\n<figure class=\"highlight plaintext\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">提问:各个层的协议都有哪些？</span><br></pre></td></tr></table></figure>\n<h1 id=\"三局域网络攻击实验扩展\"><a class=\"markdownIt-Anchor\" href=\"#三局域网络攻击实验扩展\">#</a> 三：局域网络攻击实验【扩展】</h1>\n<p><strong>》》》ARP 欺骗攻击《《《</strong></p>\n<p>简介：ARP（Address Resolution Protocol）是地址解析协议，是一种将 IP 地址转化成物理地址的协议。从 IP 地址到物理地址的映射有两种方式：表格方式和非表格方式。ARP 具体说来就是将网络层（也就是相当于 OSI 的第三层）地址解析为数据链路层（也就是相当于 OSI 的第二层）的物理地址 (注：此处物理地址并不一定指 MAC 地址)。</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">原理：主机A要向主机B发送报文，会查询A本地的ARP缓存表，找到B的IP地址对应的MAC地址后，就会进行数据传输。如果未找到，则A广播一个ARP请求报文（携带主机A的IP地址Ia——物理地址Pa），请求IP地址为Ib的主机B回答物理地址Pb。网上所有主机包括B都收到ARP请求，但只有主机B识别自己的IP地址，于是向A主机发回一个ARP响应报文。其中就包含有B的MAC地址，A接收到B的应答后，就会更新本地的ARP缓存。接着使用这个MAC地址发送数据（由网卡附加MAC地址）。因此，本地高速缓存的这个ARP表是本地网络流通的基础，而且这个缓存是动态的。</span><br></pre></td></tr></table></figure>\n<p>实验网络拓扑：</p>\n<table>\n<thead>\n<tr>\n<th>主机标识</th>\n<th>安装服务</th>\n<th>操作系统</th>\n<th>IP 地址</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Clinet IP</td>\n<td>None</td>\n<td>Windows 10</td>\n<td>192.168.1.106</td>\n</tr>\n<tr>\n<td>Kali IP</td>\n<td>None</td>\n<td>Kali Linux</td>\n<td>192.168.1.104</td>\n</tr>\n<tr>\n<td>Server IP</td>\n<td>FTP Server</td>\n<td>Windows server 2016</td>\n<td>192.168.1.98</td>\n</tr>\n</tbody>\n</table>\n<p>步骤一：在各个主机之间进行 Ping 测试，并在 Kali 上启动网卡位混杂模式…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">echo <span class=\"number\">1</span> &gt; /proc/sys/net/ipv4/ip_forward</span><br></pre></td></tr></table></figure>\n<p>步骤二：在 KALI 上输入 <code>Ettercap -G</code>  命令启动 Ettercap 图形化界面… 并进行以下操作…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641898634363-a778df2e-fc03-48f0-9140-1252820e876c.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641898677187-d9ddc981-16f0-4b39-8557-25162077abfc.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980212733-a0d0cd5d-26ef-4cec-803a-b879714062cd.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980247132-968383b8-4339-4b78-86db-6206bcfa2be7.png\" alt=\"img\"></p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980272363-075883c2-6a9a-4bbf-8475-e9fb1cfb7556.png\" alt=\"img\"></p>\n<p>步骤三：在 Client 上输入以下地址进行访问，并输入 FTP 服务器账号密码进行访问…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">ftp:<span class=\"comment\">//192.168.1.98/</span></span><br></pre></td></tr></table></figure>\n<p>步骤四：回到 Kali 的 Ettercap 查看捕获到的信息…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641898515785-2cdf0138-381f-49bb-bcb9-ba2040fa7eb6.png\" alt=\"img\"></p>\n<p><strong>》》》DNS 欺骗攻击《《《</strong></p>\n<p>步骤一：进行欺骗之前需要对 ettercap 的 dns 文件进行编辑并添加一下内容… 注意添加的内容之前能有 &quot;#&quot; 号键…</p>\n<figure class=\"highlight cpp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br></pre></td><td class=\"code\"><pre><span class=\"line\">apt-get install leafpad</span><br><span class=\"line\">leafpad /etc/ettercap/etter.dns</span><br><span class=\"line\">添加以下内容：</span><br><span class=\"line\">baidu.com    A      Kali IP地址</span><br><span class=\"line\">*.baidu.com    A      Kali IP地址</span><br><span class=\"line\">这样的目的是为了，让客户端访问baidu.com时跳转访问攻击者的web服务</span><br></pre></td></tr></table></figure>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980949136-8d38ae1b-67ea-4b4e-a426-b21c1204e802.png\" alt=\"img\"></p>\n<p>步骤二：前面的步骤与 ARP 欺骗一致，只需要在开始欺骗之前，双击添加一个插件；</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641981354751-b21119ce-a158-4f62-996c-2c3f6c709cfd.png\" alt=\"img\"></p>\n<p>步骤三：在受害者主机进行 ping 命令测试，查看 DNS 是否欺骗成功…</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2022/png/2699750/1641980701483-03d45356-1ca6-4ad6-bece-71d5070c3c76.png\" alt=\"img\"></p>\n",
            "tags": []
        },
        {
            "id": "https://sun-spots.github.io/2022/01/10/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.1%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "url": "https://sun-spots.github.io/2022/01/10/%E4%BF%A1%E6%81%AF%E5%AE%89%E5%85%A8/%E7%AC%AC%E4%B8%80%E9%98%B6%E6%AE%B5/%E7%AC%AC%E4%B8%80%E5%91%A8/1.1%E8%AE%A1%E7%AE%97%E6%9C%BA%E5%9F%BA%E6%9C%AC%E6%A6%82%E5%BF%B5/",
            "title": "计算机的基本概念",
            "date_published": "2022-01-10T12:05:00.000Z",
            "content_html": "<h1 id=\"计算机组成\"><a class=\"markdownIt-Anchor\" href=\"#计算机组成\">#</a> 计算机组成</h1>\n<h2 id=\"课堂导学\"><a class=\"markdownIt-Anchor\" href=\"#课堂导学\">#</a> 课堂导学：</h2>\n<p>一个完整的计算机包括两部分：（一）：计算机硬件：中央处理器、内存、存储器、输入设备、输出设备</p>\n<p>​\t\t\t\t\t\t\t\t\t\t\t\t\t  （二）：计算机软件：系统软件、应用程序软件</p>\n<h2 id=\"1计算机的组成\"><a class=\"markdownIt-Anchor\" href=\"#1计算机的组成\">#</a> 1：计算机的组成</h2>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2336202/1624895370503-aa65f8a4-261f-4555-afa5-53f3cbd92b23.png\" alt=\"img\"></p>\n<h3 id=\"11硬件系统\"><a class=\"markdownIt-Anchor\" href=\"#11硬件系统\">#</a> 1.1：硬件系统</h3>\n<p>在传统的理念中，计算机硬件是由运算器，存储器，控制器和输入输出设备这几个基本部分组成的，计算机是一个能够执行操作命令的设备，指令是构成计算机软件的基本元素。</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623047342895-59baf7c5-8c8b-473b-bf36-0f679d50faeb.png\" alt=\"img\"></p>\n<h4 id=\"i中央处理器\"><a class=\"markdownIt-Anchor\" href=\"#i中央处理器\">#</a> i：中央处理器</h4>\n<p>​       运算器、控制器统称中央处理器（cpu）：负责数据的算数运算和逻辑运算，及数据的加工处理，是整个计算机的中枢神经，分析程序的可控制信息，并根据程序要求进行控制，协调计算机各部分组件工作及内存与外设的访问等。</p>\n<h4 id=\"ii存储器\"><a class=\"markdownIt-Anchor\" href=\"#ii存储器\">#</a> ii：存储器</h4>\n<p>实现记忆功能的部件，用来存储程序、数据和各种信号、命令等信息、并在需要时提供这些信息。内存（rom 只读存储器；ram 随机存储器；断电就会消失）；外存（硬盘、软盘、光盘）。</p>\n<h4 id=\"iii输入输出设备\"><a class=\"markdownIt-Anchor\" href=\"#iii输入输出设备\">#</a> iii：输入输出设备</h4>\n<p>计算机从输入设备获得外部的信息。输入设备将外部信息以一定的数据格式送入系统，并由输出设备输出。如：键盘输入一首歌曲名称，将这一数据送入系统，音响播放。</p>\n<h3 id=\"12软件系统\"><a class=\"markdownIt-Anchor\" href=\"#12软件系统\">#</a> 1.2：软件系统</h3>\n<p>操作系统主要作用是管理好硬件设备。</p>\n<h4 id=\"i桌面操作系统\"><a class=\"markdownIt-Anchor\" href=\"#i桌面操作系统\">#</a> i：桌面操作系统</h4>\n<p>window 系列：用户群体大</p>\n<p>macOS：适合于开发人员</p>\n<p>linux：应用软件少</p>\n<h4 id=\"ii服务器操作系统\"><a class=\"markdownIt-Anchor\" href=\"#ii服务器操作系统\">#</a> ii：服务器操作系统</h4>\n<p>linux：安全、稳定、免费；占有率高</p>\n<p>windows server：收费；占有率低</p>\n<h4 id=\"iii嵌入式操作系统\"><a class=\"markdownIt-Anchor\" href=\"#iii嵌入式操作系统\">#</a> iii：嵌入式操作系统</h4>\n<p>linux：体积小</p>\n<p>主要运用：机顶盒、网络电话、手机等等</p>\n<h4 id=\"iiii移动设备操作系统\"><a class=\"markdownIt-Anchor\" href=\"#iiii移动设备操作系统\">#</a> iiii：移动设备操作系统</h4>\n<p>IOS</p>\n<p>Android（基于 linux）</p>\n<h2 id=\"2进制的转换\"><a class=\"markdownIt-Anchor\" href=\"#2进制的转换\">#</a> 2：进制的转换</h2>\n<h3 id=\"21什么是进制\"><a class=\"markdownIt-Anchor\" href=\"#21什么是进制\">#</a> 2.1：什么是进制？</h3>\n<p>进制也就是进位计数制，是人为定义的带进位的计数方法（有不带进位的计数方法，比如原始的结绳计数法，唱票时常用的 “正” 字计数法）。 对于任何一种进制 —X 进制，就表示每一位置上的数运算时都是逢 X 进一位。 十进制是逢十进一，十六进制是逢十六进一，二进制就是逢二进一，以此类推，x 进制就是逢 x 进位。</p>\n<h3 id=\"22常见的进制对照表\"><a class=\"markdownIt-Anchor\" href=\"#22常见的进制对照表\">#</a> 2.2：常见的进制对照表</h3>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623047803558-6a68bb4b-82ee-4794-95ed-3e69b91c0487.png\" alt=\"img\"></p>\n<h3 id=\"23二进制转十进制\"><a class=\"markdownIt-Anchor\" href=\"#23二进制转十进制\">#</a> 2.3：二进制转十进制</h3>\n<p>二进制转为十进制要从右到左用二进制的每个数去乘以 2 的相应次方，小数点后则是从左往右。</p>\n<p>如果首位是 0 就表示正整数，如果首位是 1 则表示负整数，正整数可以直接换算，负整数则需要先取反再换算。</p>\n<p>因为计算机内部表示数的字节单位是定长的。如 8 位、16 位、32 位。所以位数不够时，高位补零。</p>\n<ul>\n<li>如要想二进制 00101010 转为十进制，因为以 0 开头，所以这是正整数，计算如下所示：<br>\n<img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623048789217-1a3af789-4173-47b9-a04c-543baa032f56.png\" alt=\"img\"></li>\n</ul>\n<h3 id=\"24十进制转二进制\"><a class=\"markdownIt-Anchor\" href=\"#24十进制转二进制\">#</a> 2.4：十进制转二进制</h3>\n<p>十进制转二进制分为整数转二进制，和小数转二进制</p>\n<h3 id=\"25整数转二进制\"><a class=\"markdownIt-Anchor\" href=\"#25整数转二进制\">#</a> 2.5：整数转二进制</h3>\n<p>采用 &quot;除 2 取余，逆序排列&quot; 法：</p>\n<p>1. 首先用 2 整除一个十进制整数，得到一个商和余数<br>\n 2. 然后再用 2 去除得到的商，又会得到一个商和余数<br>\n 3. 重复操作，一直到商为小于 1 时为止<br>\n 4. 然后将得到的所有余数全部排列起来，再将它反过来（逆序排列），切记一定要反过来！</p>\n<p>假设我们现在需要将 42 转为二进制，那我们怎么做呢，如下图所示：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623048389394-56e294ca-d4f6-40ea-9c2e-453153326840.png\" alt=\"img\"></p>\n<h3 id=\"26小数转二进制\"><a class=\"markdownIt-Anchor\" href=\"#26小数转二进制\">#</a> 2.6：小数转二进制</h3>\n<p>采用 &quot;乘 2 取整，顺序排列&quot; 法：</p>\n<p>1. 用 2 乘十进制小数，可以得到积，将积的整数部分取出<br>\n 2. 再用 2 乘余下的小数部分，又得到一个积，再将积的整数部分取出<br>\n 3. 重复操作，直到积中的小数部分为零，此时 0 或 1 为二进制的最后一位，或者达到所要求的精度为止</p>\n<p>例如将 0.125 转换为二进制：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623048607913-dd5294a7-1f2f-4e33-ae71-e360bceb0586.png\" alt=\"img\"></p>\n<p>如果小数的整数部分有大于 0 的整数时，将整数部分和小数部分先单独转为二进制，再合在一起就可以了，例如：</p>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623048709045-4ab2aaa9-9b74-469c-a689-966b6f735182.png\" alt=\"img\"></p>\n<h3 id=\"27十六进制转十进制\"><a class=\"markdownIt-Anchor\" href=\"#27十六进制转十进制\">#</a> 2.7：十六进制转十进制</h3>\n<p>1、首先明白 16 进制数（从右到左数是第 0 位，第 1 位，第 2 位……）的第 0 位的权值为 16 的 0 次方，第 1 位的权值为 16 的 1 次方，第 2 位的权值为 16 的 2 次方，依次这样排列下去。</p>\n<p>2、明白 ABCDEF 表示的二进制数字分别是 10，11，12，13，14，15。</p>\n<p>3、十六进制转换成十进制的公式是：要从右到左用二进制的每个数去乘以 16 的相应次方，然后这些数字相加就是了。</p>\n<p>例 1：2AF5 换算成 10 进制:</p>\n<p>第 0 位： 5 * 16^0 = 5</p>\n<p>第 1 位： F * 16^1 =15*16^1= 240</p>\n<p>第 2 位： A * 16^2= 10* 16^2=2560</p>\n<p>第 3 位： 2 * 16^3 = 8192</p>\n<p>结果就是：5 * 16^0 + 15 * 16^1 + 10 * 16^2 + 2 * 16^3 = 10997</p>\n<p>例 2：CE 换算成 10 进制:</p>\n<p>第 0 位：E*16<sup>0=14*16</sup>0=14</p>\n<p>第 1 位：C*16<sup>1=12*16</sup>1=192</p>\n<p>结果就是：14*16<sup>0+12*16</sup>1=206</p>\n<h3 id=\"28拓展资料\"><a class=\"markdownIt-Anchor\" href=\"#28拓展资料\">#</a> 2.8: 拓展资料</h3>\n<p>16 进制即逢 16 进 1，每一位上可以是从小到大为 0、1、2、3、4、5、6、7、8、9、A、B、C、D、E、F 共 16 个大小不同的数。16 进制转换即 16 进制与其他不同进制之间的换算转换。</p>\n<h2 id=\"3服务-协议与端口\"><a class=\"markdownIt-Anchor\" href=\"#3服务-协议与端口\">#</a> 3：服务、协议与端口</h2>\n<h3 id=\"31常见的计算机服务\"><a class=\"markdownIt-Anchor\" href=\"#31常见的计算机服务\">#</a> 3.1：常见的计算机服务</h3>\n<p>计算机中的服务是一种应用程序类型，在后台运行。服务应用程序通常可以在本地和通过网络为用户提供一些功能，例如客户端 / 服务器应用程序、Web 服务器、数据库服务器以及其他基于服务器的应用程序。</p>\n<h3 id=\"32常见的计算机服务\"><a class=\"markdownIt-Anchor\" href=\"#32常见的计算机服务\">#</a> 3.2：常见的计算机服务</h3>\n<p><img data-src=\"https://cdn.nlark.com/yuque/0/2021/png/2942226/1623049782379-e00f6d3d-e5fa-40b5-8f0a-e21bf71ca778.png\" alt=\"img\"></p>\n<p><img data-src=\"https://s3.bmp.ovh/imgs/2022/01/e4f2ea08d56e8103.png\" alt=\"\"></p>\n<h3 id=\"33协议\"><a class=\"markdownIt-Anchor\" href=\"#33协议\">#</a> 3.3：协议</h3>\n<p>服务对应端口，而端口走协议，比如生活中的银行，提供取款、存款、贷款等服务，去窗口办理业务，但是客户是个歪果仁，此时怎么办呢？银行工作人员必须会英语或者他必须会中文，才能顺利的办理业务，那么此时的银行的业务即可理解为计算机的服务，窗口便是端口，那么协议呢？那就是我们交流所用的同一种语言了。</p>\n<h2 id=\"4dos命令\"><a class=\"markdownIt-Anchor\" href=\"#4dos命令\">#</a> 4：DOS 命令</h2>\n<p><strong>&quot;运行&quot; 命令</strong></p>\n<ul>\n<li>\n<ul>\n<li><strong>gpedit.msc</strong>      // 组策略</li>\n<li><strong>lusrmgr.msc</strong>     // 本地用户和组</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>services.msc</strong>     // 本地服务设置</li>\n<li><strong>taskmgr</strong>          // 任务管理器</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>mmc</strong>              // 控制台</li>\n<li><strong>regedit</strong>          // 注册表编辑器</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>msconfig</strong>       // 系统配置（引导。服务。启动。工具）</li>\n<li><strong>mstsc</strong>            // 远程桌面</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>mspaint</strong>           // 画图</li>\n<li><strong>write</strong>             // 写字板</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>notepad</strong>         // 打开记事本</li>\n<li><strong>calc</strong>                // 打开计算器</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>explorer</strong>         // 打开文件资源管理器</li>\n<li><strong>logoff</strong>           // 注销命令</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>shutdown</strong>     //60 秒倒计时关机</li>\n</ul>\n</li>\n</ul>\n<h3 id=\"41如何打开控制台窗口\"><a class=\"markdownIt-Anchor\" href=\"#41如何打开控制台窗口\">#</a> 4.1：如何打开控制台窗口</h3>\n<p>Win+r 打开运行，输入 Cmd 点击确定可以打开命令窗口。</p>\n<h3 id=\"42常见的dos命令\"><a class=\"markdownIt-Anchor\" href=\"#42常见的dos命令\">#</a> 4.2：常见的 DOS 命令</h3>\n<ol>\n<li>\n<p><strong>ipconfig /all</strong>             // 查看网络详细信息</p>\n</li>\n<li>\n<p>Ipconfig /release 命令释放指定适配器的 IP 地址</p>\n</li>\n<li>\n<p>Ipconfig /renew 命令更新指定适配器的 IP 地址</p>\n</li>\n<li>\n<p><strong>set</strong>                           // 显示当前所有环境变量</p>\n</li>\n</ol>\n<ul>\n<li>\n<ul>\n<li><strong>dir</strong>                           // 列出当前目录的文件</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>dir  /a</strong>               // 列出所有文件包括隐藏文件</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>whoami</strong>                    // 查看当前计算机名及当前用户名</li>\n<li><strong>tasklist</strong>                      // 列出当前所有服务的详细信息</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>tasklist -svc</strong>       // 列出当前所有服务对应的 PID</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>systeminfo</strong>               // 查看计算机详细信息</li>\n<li><strong>tree</strong>                         // 以树状的形式显示文件及文件夹</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>type 1.txt</strong>                 // 查看文件内容</li>\n<li><strong>start</strong>                        // 重新打开一个 cmd 窗口</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>start 1.txt</strong>         <a href=\"//xn--1-xv6a93aw76bt2dz2i7n0aog5b.xn--txt-wu9dq54h\">// 使用记事本打开 1.txt 文件</a></li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>more 1.txt</strong>               // 分屏查看文本内容</li>\n<li><strong>arp -a</strong>                     // 查看网内主机</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>net user</strong>                 // 查看当前计算机所有用户</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>net user as-before</strong>    // 查看指定用户属性</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>net start</strong>                   // 查看启动的 windows 服务</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>net start 迅雷下载基础服务（用于快速申请磁盘空间及接管浏览器下载请求）</strong></li>\n<li>**net stop 迅雷下载基础服务（用于快速申请磁盘空间及接管浏览器下载请求）**PS:(需要管理员权限)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>net view</strong>                   // 显示域列表、计算机列表或指定计算机的共享资源列表</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>net view ip</strong>      // 显示指定的 ip 的共享资源列表</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>net config</strong>               // 用于显示服务器的打开文件数量和空闲回话时间及用户登录数量</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>net config Server</strong>      // 查看服务器的     PS:(运行需要管理员权限)</li>\n<li><strong>net config Workstation</strong>   // 查看当前工作站的    PS:(运行需要管理员权限)</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>net share</strong>               // 查看本地开启的共享文件</li>\n<li><strong>netstat -an</strong>            // 查看开启的端口信息</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>netstat -ano</strong>   // 查看带有 PID 的端口信息</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>nslookup</strong>              // 查询 DNS 的记录，查询域名解析，用来诊断网络问题</li>\n<li><strong>tracert <span class=\"exturl\" data-url=\"aHR0cDovL3d3dy5iYWlkdS5jb20=\">www.baidu.com</span></strong>       // 路由追踪</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>ping</strong>                    // 测试网络连通</li>\n<li><strong>cd</strong>                       // 切换目录</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>cd .</strong>             // 还在当前目录</li>\n<li><strong>cd …</strong>            // 切换到上层目录</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li>*<em>cd *</em>             // 切换至根目录</li>\n<li><strong>cd . &gt; 1.txt</strong>    // 创建文件</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>d：</strong>            // 直接跳转至 d 盘根目录</li>\n<li><strong>md test</strong>           // 创建 test 目录</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>rd test</strong>             // 删除 test 目录</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>rd /s test</strong>         // 删除目录需要确定</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>copy 1.txt 2.txt</strong>          <a href=\"//xn--1-lf8a13s.xn--txt2-dx8fl9ag06bzr4c.txt\">// 复制 1.txt 的内容到 2.txt</a>，如果 2.txt 存在内容会提示你是否覆盖</li>\n<li><strong>del 2.txt</strong>            // 删除文件</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>del -f 1.txt</strong>            // 强制删除</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>move 1.txt test</strong>        <a href=\"//xn--1-4i2b.xn--txttest-kg5kf4qyxbyxbsy0c7r0bh30d\">// 将 1.txt 移动到 test 文件夹内</a></li>\n<li><strong>move  1.txt 2.txt</strong>        <a href=\"//xn--1-4i2b.xn--txt2-xh5fn22anwa9819a.txt\">// 将 1.txt 重命名为 2.txt</a></li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>ren 1.txt 2.txt</strong>             // 重命名</li>\n<li><strong>shutdown -s</strong>          // 一分钟后关机</li>\n</ul>\n</li>\n<li>\n<ul>\n<li>\n<ul>\n<li><strong>shutdown -s -t 100 -c “bye”</strong>     // 100 秒后关机并弹出 bye 消息</li>\n<li><strong>shutdown -a</strong>     // 取消计划的关机任务</li>\n</ul>\n</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>net use K: \\ip\\c$</strong>       // 映射目标 ip 的 c 盘到本地 k 盘</li>\n<li><strong>net use k: \\ip\\c$ \\del</strong>       // 删除映射的 k 盘</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>taskkill  /f /im xx.exe</strong>      // 强制终止某进程</li>\n<li><strong>findstr “Hello”aa.txt</strong>    <a href=\"//xn--aa-rl8c.xn--txthello-nd0mtb06mt40e5zb204b5mkph1g\">// 在 aa.txt 文件中寻找字符串 hello</a></li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>echo hello » pass.txt</strong>      <a href=\"//xn--hellopass-9y4op2b060ejy3m.xn--txt-x68dy9al71g\">// 将 hello 追加到 pass.txt 文件中</a> (一个&gt; 直接覆盖原内容)</li>\n<li><strong>color 02</strong>     // 把 cmd 中的字改为绿色字体</li>\n</ul>\n</li>\n<li>\n<ul>\n<li><strong>cls</strong>     // 清屏</li>\n</ul>\n</li>\n</ul>\n",
            "tags": []
        }
    ]
}